<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="cn20941">DELETE</title>
    <body>
        <p id="sql_command_desc">Deletes rows from a table.</p>
        <section id="section2">
            <title>Synopsis</title>
            <codeblock id="sql_command_synopsis">[ WITH [ RECURSIVE ] <varname>with_query</varname> [, ...] ]
DELETE FROM [ONLY] <varname>table</varname> [[AS] <varname>alias</varname>]
      [USING <varname>usinglist</varname>]
      [WHERE <varname>condition</varname> | WHERE CURRENT OF <varname>cursor_name</varname>]
      [RETURNING * | <varname>output_expression</varname> [[AS] <varname>output_name</varname>] [, …]]</codeblock>
        </section>
        <section id="section3">
            <title>Description</title>
            <p><codeph>DELETE</codeph> deletes rows that satisfy the <codeph>WHERE</codeph> clause
                from the specified table. If the <codeph>WHERE</codeph> clause is absent, the effect
                is to delete all rows in the table. The result is a valid, but empty table. </p>
            <p>By default, <codeph>DELETE</codeph> will delete rows in the specified table and all
                its child tables. If you wish to delete only from the specific table mentioned, you
                must use the <codeph>ONLY</codeph> clause. </p>
            <p>There are two ways to delete rows in a table using information contained in other
                tables in the database: using sub-selects, or specifying additional tables in the
                    <codeph>USING</codeph> clause. Which technique is more appropriate depends on
                the specific circumstances. </p>
            <p>If the <codeph>WHERE CURRENT OF</codeph> clause is specified, the row that is deleted
                is the one most recently fetched from the specified cursor. </p>
            <p>The <codeph>WHERE CURRENT OF</codeph> clause is not supported with replicated
                tables.</p>
            <p>The optional <codeph>RETURNING</codeph> clause causes <codeph>DELETE</codeph> to
                compute and return value(s) based on each row actually deleted. Any expression using
                the table's columns, and/or columns of other tables mentioned in
                    <codeph>USING</codeph>, can be computed. The syntax of the
                    <codeph>RETURNING</codeph> list is identical to that of the output list of
                    <codeph>SELECT</codeph>.<note>The <codeph>RETURNING</codeph> clause is not
                    supported when deleting from append-optimized tables.</note></p>
            <p>You must have the <codeph>DELETE</codeph> privilege on the table to delete from it. </p>
            <note>As the default, Greenplum Database acquires an <codeph>EXCLUSIVE</codeph> lock on
                tables for <codeph>DELETE</codeph> operations on heap tables. When the Global
                Deadlock Detector is enabled, the lock mode for <codeph>DELETE</codeph> operations
                on heap tables is <codeph>ROW EXCLUSIVE</codeph>. See <xref
                    href="../../admin_guide/dml.xml#topic_gdd" format="dita"/>.</note>
            <sectiondiv id="section4">
                <b>Outputs</b>
                <p>On successful completion, a <codeph>DELETE</codeph> command returns a command tag
                    of the form</p>
                <codeblock>DELETE <varname>count</varname></codeblock>
                <p>The <varname>count</varname> is the number of rows deleted. If <varname>count</varname> is 0, no
                    rows were deleted by the query (this is not considered an error).</p><p>If the
                        <codeph>DELETE</codeph> command contains a <codeph>RETURNING</codeph>
                    clause, the result will be similar to that of a <codeph>SELECT</codeph>
                    statement containing the columns and values defined in the
                        <codeph>RETURNING</codeph> list, computed over the row(s) deleted by the
                    command.</p>
            </sectiondiv>
        </section>
        <section id="section5">
            <title>Parameters</title>
            <parml>
                <plentry>
                    <pt><varname>with_query</varname></pt>
                    <pd>The <codeph>WITH</codeph> clause allows you to specify one or more
                        subqueries that can be referenced by name in the <codeph>DELETE</codeph>
                        query. </pd>
                    <pd>For a <codeph>DELETE</codeph> command that includes a <codeph>WITH</codeph>
                        clause, the clause can only contain <codeph>SELECT</codeph> statements, the
                            <codeph>WITH</codeph> clause cannot contain a data-modifying command
                            (<codeph>INSERT</codeph>, <codeph>UPDATE</codeph>, or
                            <codeph>DELETE</codeph>). </pd>
                    <pd>See <xref
                            href="../../admin_guide/query/topics/CTE-query.xml#topic_zhs_r1s_w1b"/>
                        and <codeph><xref href="SELECT.xml#topic1"/></codeph> for details. </pd>
                </plentry>
                <plentry>
                    <pt>ONLY</pt>
                    <pd>If specified, delete rows from the named table only. When not specified, any
                        tables inheriting from the named table are also processed.</pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>table</varname>
                    </pt>
                    <pd>The name (optionally schema-qualified) of an existing table. </pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>alias</varname>
                    </pt>
                    <pd>A substitute name for the target table. When an alias is provided, it
                        completely hides the actual name of the table. For example, given
                            <codeph>DELETE FROM foo AS f</codeph>, the remainder of the
                            <codeph>DELETE</codeph> statement must refer to this table as
                            <codeph>f</codeph> not <codeph>foo</codeph>. </pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>usinglist</varname>
                    </pt>
                    <pd>A list of table expressions, allowing columns from other tables to appear in
                        the <codeph>WHERE</codeph> condition. This is similar to the list of tables
                        that can be specified in the <codeph>FROM</codeph> Clause of a <codeph><xref
                                href="./SELECT.xml#topic1" type="topic" format="dita"/></codeph>
                        statement; for example, an alias for the table name can be specified. Do not
                        repeat the target table in the <codeph>usinglist</codeph>, unless you wish
                        to set up a self-join. </pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>condition</varname>
                    </pt>
                    <pd>An expression returning a value of type <codeph>boolean</codeph>, which
                        determines the rows that are to be deleted.</pd>
                </plentry>
                <plentry>
                    <pt>
                        <varname>cursor_name</varname>
                    </pt>
                    <pd>The name of the cursor to use in a <codeph>WHERE CURRENT OF</codeph>
                        condition. The row to be deleted is the one most recently fetched from this
                        cursor. The cursor must be a simple non-grouping query on the
                            <codeph>DELETE</codeph> target table. </pd>
                    <pd><codeph>WHERE CURRENT OF</codeph> cannot be specified together with a
                        Boolean condition.</pd>
                    <pd>The <codeph>DELETE...WHERE CURRENT OF</codeph> cursor statement can only be
                        executed on the server, for example in an interactive psql session or a
                        script. Language extensions such as PL/pgSQL do not have support for
                        updatable cursors. </pd>
                    <pd>See <codeph><xref href="DECLARE.xml#topic1" type="topic" format="dita"
                            /></codeph> for more information about creating cursors.</pd>
                </plentry>
                <plentry>
                    <pt><varname>output_expression</varname></pt>
                    <pd>An expression to be computed and returned by the <codeph>DELETE</codeph>
                        command after each row is deleted. The expression can use any column names
                        of the table or table(s) listed in <codeph>USING</codeph>. Write * to return
                        all columns.</pd>
                </plentry>
                <plentry>
                    <pt><varname>output_name</varname></pt>
                    <pd>A name to use for a returned column.</pd>
                </plentry>
            </parml>
        </section>
        <section id="section6">
            <title>Notes</title>
            <p>Greenplum Database lets you reference columns of other tables in the
                    <codeph>WHERE</codeph> condition by specifying the other tables in the
                    <codeph>USING</codeph> clause. For example, to the name <codeph>Hannah</codeph>
                from the <codeph>rank</codeph> table, one might do:</p>
            <codeblock>DELETE FROM rank USING names WHERE names.id = rank.id AND 
name = 'Hannah';</codeblock>
            <p>What is essentially happening here is a join between <codeph>rank</codeph> and
                    <codeph>names</codeph>, with all successfully joined rows being marked for
                deletion. This syntax is not standard. However, this join style is usually easier to
                write and faster to execute than a more standard sub-select style, such as:</p>
            <codeblock>DELETE FROM rank WHERE id IN (SELECT id FROM names WHERE name 
= 'Hannah');</codeblock>
            <p>When using <codeph>DELETE</codeph> to remove all the rows of a table (for example:
                    <codeph>DELETE * FROM <varname>table</varname>;</codeph>), Greenplum Database
                adds an implicit <codeph>TRUNCATE</codeph> command (when user permissions allow).
                The added <codeph>TRUNCATE</codeph> command frees the disk space occupied by the
                deleted rows without requiring a <codeph>VACUUM</codeph> of the table. This improves
                scan performance of subsequent queries, and benefits ELT workloads that frequently
                insert and delete from temporary tables.</p>
            <p>Execution of <codeph>UPDATE</codeph> and <codeph>DELETE</codeph> commands directly on
                a specific partition (child table) of a partitioned table is not supported. Instead,
                these commands must be executed on the root partitioned table, the table created
                with the <codeph>CREATE TABLE</codeph> command.</p>
            <p>For a partitioned table, all the child tables are locked during the
                    <codeph>DELETE</codeph> operation when the Global Deadlock Detector is not
                enabled (the default). Only some of the leaf child tables are locked when the Global
                Deadlock Detector is enabled. For information about the Global Deadlock Detector,
                see <xref href="../../admin_guide/dml.xml#topic_gdd"/>.</p>
        </section>
        <section id="section7">
            <title>Examples</title>
            <p>Delete all films but musicals:</p>
            <codeblock>DELETE FROM films WHERE kind &lt;&gt; 'Musical';</codeblock>
            <p>Clear the table films:</p>
            <codeblock>DELETE FROM films;</codeblock>
            <p>Delete completed tasks, returning full details of the deleted
                rows:<codeblock>DELETE FROM tasks WHERE status = 'DONE' RETURNING *;</codeblock></p>
            <p>Delete using a join:</p>
            <codeblock>DELETE FROM rank USING names WHERE names.id = rank.id AND 
name = 'Hannah';</codeblock>
        </section>
        <section id="section8">
            <title>Compatibility</title>
            <p>This command conforms to the SQL standard, except that the <codeph>USING</codeph> and
                    <codeph>RETURNING</codeph> clauses are Greenplum Database extensions, as is the
                ability to use <codeph>WITH</codeph> with <codeph>DELETE</codeph>.</p>
        </section>
        <section id="section9">
            <title>See Also</title>
            <p><codeph><xref href="DECLARE.xml#topic1" type="topic" format="dita"/></codeph>,
                        <codeph><xref href="./TRUNCATE.xml#topic1" type="topic" format="dita"
                    /></codeph></p>
        </section>
    </body>
</topic>
