<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="bv20941">CREATE FOREIGN TABLE</title>
    <body>
        <p id="sql_command_desc">Defines a new foreign table.</p>
        <section id="section2">
            <title>Synopsis</title>
            <codeblock id="sql_command_synopsis">CREATE FOREIGN TABLE [ IF NOT EXISTS ] <varname>table_name</varname> ( [
    <varname>column_name</varname> <varname>data_type</varname> [ OPTIONS ( <varname>option</varname> '<varname>value</varname>' [, ... ] ) ] [ COLLATE <varname>collation</varname> ] [ <varname>column_constraint</varname> [ ... ] ]
      [, ... ]
] )
    SERVER <varname>server_name</varname>
  [ OPTIONS ( [ mpp_execute { 'master' | 'any' | 'all segments' } [, ] ] <varname>option</varname> '<varname>value</varname>' [, ... ] ) ]</codeblock>
        <p>where <varname>column_constraint</varname> is:</p><codeblock>
[ CONSTRAINT <varname>constraint_name</varname> ]
{ NOT NULL |
  NULL |
  DEFAULT <varname>default_expr</varname> }</codeblock>
        </section>
        <section id="section3">
            <title>Description</title>
            <p><codeph>CREATE FOREIGN TABLE</codeph> creates a new foreign table
                in the current database.  The user who creates the foreign table becomes
                 its owner.</p>
            <p>If you schema-qualify the table name (for example, <codeph>CREATE FOREIGN TABLE myschema.mytable ...</codeph>), Greenplum Database creates the table in the specified schema. Otherwise, the foreign table is created in the current schema. The name of the foreign table must be distinct from the name of any other foreign table, table, sequence, index, or view in the same schema.</p>
            <p>Because <codeph>CREATE FOREIGN TABLE</codeph> automatically creates a data type that represents the composite type corresponding to one row of the foreign table, foreign tables cannot have the same name as any existing data type in the same schema.</p>
            <p>To create a foreign table, you must have <codeph>USAGE</codeph> privilege on the foreign server, as well as <codeph>USAGE</codeph> privilege on all column types used in the table.</p>
        </section>
        <section id="section4">
            <title>Parameters</title>
            <parml>
                <plentry>
                    <pt>IF NOT EXISTS</pt>
                    <pd>
                        <p>Do not throw an error if a relation with the same name already exists. Greenplum Database issues a notice in this case. Note that there is no guarantee that the existing relation is anything like the one that would have been created.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>table_name</varname></pt>
                    <pd>
                        <p>The name (optionally schema-qualified) of the foreign table to create.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>column_name</varname></pt>
                    <pd>
                        <p>The name of a column to create in the new foreign table.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>data_type</varname></pt>
                    <pd>
                        <p>The data type of the column, including array specifiers.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>NOT NULL</pt>
                    <pd>
                        <p>The column is not allowed to contain null values.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>NULL</pt>
                    <pd>
                        <p>The column is allowed to contain null values. This is the default.</p>
                        <p>This clause is provided only for compatibility with non-standard SQL databases. Its use is discouraged in new applications.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>DEFAULT <varname>default_expr</varname></pt>
                    <pd>
                        <p>The <codeph>DEFAULT</codeph> clause assigns a default value for the
                          column whose definition it appears within. The value is any
                          variable-free expression; Greenplum Database does not allow subqueries
                          and cross-references to other columns in the current table. The data
                          type of the default expression must match the data type of the column.</p>
                        <p>Greenplum Database uses the default expression in any insert operation
                          that does not specify a value for the column. If there is no default
                          for a column, then the default is null.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>server_name</varname></pt>
                    <pd>
                        <p>The name of an existing server to use for the foreign table.
                          For details on defining a server, see <codeph><xref href="CREATE_SERVER.xml#topic1">CREATE
                    SERVER</xref></codeph>.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>OPTIONS ( <varname>option</varname> '<varname>value</varname>' [, ... ] )</pt>
                    <pd>
                        <p>The options for the new foreign table or one of its columns. While option names must be unique, a table option and a column option may have the same name. The option names and values are foreign-data wrapper-specific. Greenplum Database validates the options and values using the foreign-data wrapper's <varname>validator_function</varname>.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>mpp_execute { 'master' | 'any' | 'all segments' }</pt>
                    <pd>
                        <p>An option that identifies the host from which the foreign data-wrapper
                            requests data: <ul id="ul_zcg_2vd_mgb">
                                <li><codeph>master</codeph> (the default)—Request data from the
                                    master host.</li>
                                <li><codeph>any</codeph>—Request data from either the master host or
                                    any one segment, depending on which path costs less.</li>
                                <li><codeph>all segments</codeph>—Request data from all segments. To
                                    support this option value, the foreign data-wrapper must have a
                                    policy that matches the segments to data.</li>
                            </ul></p>
                        <p>Use of the foreign table <codeph>mpp_execute</codeph> option, and the
                            specific modes supported, is foreign data-wrapper-specific.</p>
                        <p>The <codeph>mpp_execute</codeph> option can be specified in multiple
                            commands: <codeph>CREATE FOREIGN TABLE</codeph>, <codeph>CREATE
                                SERVER</codeph>, and <codeph>CREATE FOREIGN DATA WRAPPER</codeph>.
                            The foreign table setting takes precedence over the foreign server
                            setting, followed by the foreign data wrapper setting.</p>
                    </pd>
                </plentry>
            </parml>
        </section>
        <section id="section5">
          <title>Notes</title>
          <p>GPORCA does not support foreign tables. A query on a foreign table
           always falls back to the Postgres Planner.</p>
        </section>
        <section id="section6">
            <title>Examples</title>
            <p>Create a foreign table named <codeph>films</codeph> with the server named <codeph>film_server</codeph>:</p><codeblock>CREATE FOREIGN TABLE films (
    code        char(5) NOT NULL,
    title       varchar(40) NOT NULL,
    did         integer NOT NULL,
    date_prod   date,
    kind        varchar(10),
    len         interval hour to minute
)
SERVER film_server;</codeblock>
        </section>
        <section id="section7">
            <title>Compatibility</title>
            <p><codeph>CREATE FOREIGN TABLE</codeph> largely conforms to the SQL standard; however, much as with <codeph><xref href="CREATE_TABLE.xml#topic1">CREATE
                    TABLE</xref></codeph>, Greenplum Database permits <codeph>NULL</codeph> constraints and zero-column foreign tables.
               The ability to specify a default value is a Greenplum Database extension,
               as is the <codeph>mpp_execute</codeph> option.</p>
        </section>
        <section id="section8">
            <title>See Also</title>
            <p><codeph><xref href="ALTER_FOREIGN_TABLE.xml#topic1">ALTER FOREIGN TABLE</xref></codeph>,
                        <codeph><xref href="DROP_FOREIGN_TABLE.xml#topic1">DROP
                    FOREIGN TABLE</xref></codeph>,
                        <codeph><xref href="CREATE_TABLE.xml#topic1">CREATE
                    TABLE</xref></codeph>,
                        <codeph><xref href="CREATE_SERVER.xml#topic1">CREATE
                    SERVER</xref></codeph></p>
        </section>
    </body>
</topic>
