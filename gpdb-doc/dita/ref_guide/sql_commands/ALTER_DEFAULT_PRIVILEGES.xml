<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
 <title>ALTER DEFAULT PRIVILEGES</title>
<body>
  <p id="sql_command_desc">Changes default access privileges.</p>
<section id="section2">
 <title>Synopsis</title>
<codeblock id="sql_command_synopsis">
ALTER DEFAULT PRIVILEGES
    [ FOR { ROLE | USER } <varname>target_role</varname> [, ...] ]
    [ IN SCHEMA <varname>schema_name</varname> [, ...] ]
    <varname>abbreviated_grant_or_revoke</varname>

where <varname>abbreviated_grant_or_revoke</varname> is one of:

GRANT { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON TABLES
    TO { [ GROUP ] <varname>role_name</varname> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SEQUENCES
    TO { [ GROUP ] <varname>role_name</varname> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { EXECUTE | ALL [ PRIVILEGES ] }
    ON FUNCTIONS
    TO { [ GROUP ] <varname>role_name</varname> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON TYPES
    TO { [ GROUP ] <varname>role_name</varname> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

REVOKE [ GRANT OPTION FOR ]
    { { SELECT | INSERT | UPDATE | DELETE | TRUNCATE | REFERENCES | TRIGGER }
    [, ...] | ALL [ PRIVILEGES ] }
    ON TABLES
    FROM { [ GROUP ] <varname>role_name</varname> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { { USAGE | SELECT | UPDATE }
    [, ...] | ALL [ PRIVILEGES ] }
    ON SEQUENCES
    FROM { [ GROUP ] <varname>role_name</varname> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { EXECUTE | ALL [ PRIVILEGES ] }
    ON FUNCTIONS
    FROM { [ GROUP ] <varname>role_name</varname> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]

REVOKE [ GRANT OPTION FOR ]
    { USAGE | ALL [ PRIVILEGES ] }
    ON TYPES
    FROM { [ GROUP ] <varname>role_name</varname> | PUBLIC } [, ...]
    [ CASCADE | RESTRICT ]
</codeblock>
</section>
 <section id="section3">
  <title>Description</title>

  <p>
   <codeph>ALTER DEFAULT PRIVILEGES</codeph> allows you to set the privileges
   that will be applied to objects created in the future.  (It does not
   affect privileges assigned to already-existing objects.)  Currently,
   only the privileges for tables (including views and foreign tables),
   sequences, functions, and types (including domains) can be altered.
  </p>

  <p>
   You can change default privileges only for objects that will be created by
   yourself or by roles that you are a member of.  The privileges can be set
   globally (i.e., for all objects created in the current database),
   or just for objects created in specified schemas.  Default privileges
   that are specified per-schema are added to whatever the global default
   privileges are for the particular object type.
  </p>

  <p>
   As explained under <xref href="GRANT.xml" format="dita"/>,
   the default privileges for any object type normally grant all grantable
   permissions to the object owner, and may grant some privileges to
   <codeph>PUBLIC</codeph> as well.  However, this behavior can be changed by
   altering the global default privileges with
   <codeph>ALTER DEFAULT PRIVILEGES</codeph>.
  </p>
 </section>
 <section>
  <title>Parameters</title>

  <parml>
   <plentry>
    <pt><varname>target_role</varname></pt>
    <pd>
      The name of an existing role of which the current role is a member.
      If <codeph>FOR ROLE</codeph> is omitted, the current role is assumed.
    </pd>
   </plentry>

   <plentry>
    <pt><varname>schema_name</varname></pt>
    <pd> The name of an existing schema. If specified, the default privileges are altered for
      objects later created in that schema. If <codeph>IN SCHEMA</codeph> is omitted, the global
      default privileges are altered. </pd>
   </plentry>

   <plentry>
    <pt><varname>role_name</varname></pt>
    <pd> The name of an existing role to grant or revoke privileges for. This parameter, and all the
      other parameters in <varname>abbreviated_grant_or_revoke</varname>, act as described under
       <xref href="GRANT.xml" format="dita"/> or <xref href="REVOKE.xml" format="dita"/>, except
      that one is setting permissions for a whole class of objects rather than specific named
      objects. </pd>
   </plentry>
  </parml>
 </section>


 <section id="sql-alterdefaultprivileges-notes">
  <title>Notes</title>

  <p> Use <xref href="../../utility_guide/ref/psql.xml" scope="peer" format="dita">psql</xref>'s
     <codeph>\ddp</codeph> command to obtain information about existing assignments of default
    privileges. The meaning of the privilege values is the same as explained for
     <codeph>\dp</codeph> under <xref href="GRANT.xml"/>. </p>

  <p>
   If you wish to drop a role for which the default privileges have been
   altered, it is necessary to reverse the changes in its default privileges
   or use <codeph>DROP OWNED BY</codeph> to get rid of the default privileges entry
   for the role.
  </p>
 </section>

 <section id="sql-alterdefaultprivileges-examples">
  <title>Examples</title>

  <p>
   Grant SELECT privilege to everyone for all tables (and views) you
   subsequently create in schema <codeph>myschema</codeph>, and allow
   role <codeph>webuser</codeph> to INSERT into them too:

<codeblock>
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT SELECT ON TABLES TO PUBLIC;
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema GRANT INSERT ON TABLES TO webuser;
</codeblock>
  </p>

  <p>
   Undo the above, so that subsequently-created tables won't have any
   more permissions than normal:

<codeblock>
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE SELECT ON TABLES FROM PUBLIC;
ALTER DEFAULT PRIVILEGES IN SCHEMA myschema REVOKE INSERT ON TABLES FROM webuser;
</codeblock>
  </p>

  <p>
   Remove the public EXECUTE permission that is normally granted on functions,
   for all functions subsequently created by role <codeph>admin</codeph>:

<codeblock>
ALTER DEFAULT PRIVILEGES FOR ROLE admin REVOKE EXECUTE ON FUNCTIONS FROM PUBLIC;
</codeblock></p>
 </section>

 <section>
  <title>Compatibility</title>

  <p>
   There is no <codeph>ALTER DEFAULT PRIVILEGES</codeph> statement in the SQL
   standard.
  </p>
 </section>

 <section id="see-also">
  <title>See Also</title>

  <p>
   <codeph><xref href="GRANT.xml" format="dita"/></codeph>, 
   <codeph><xref href="REVOKE.xml" format="dita"/></codeph>
  </p>
 </section>
</body>
</topic>
