<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1" xml:lang="en">
  <title id="ij138244">PostGIS Geospatial Extension</title>
  <body>
    <p>This chapter contains the following information:</p>
    <ul>
      <li id="ij166737">
        <xref href="#topic2" type="topic" format="dita"/>
      </li>
      <li id="ij168801">
        <xref href="#topic3" type="topic" format="dita"/>
      </li>
      <li>
        <xref href="#topic_b2l_hzw_q1b" format="dita"/></li>
      <li id="ij168827">
        <xref href="#topic7" type="topic" format="dita"/>
      </li>
      <li>
        <xref href="#postgis_support" format="dita"/>
      </li>
      <li id="ij168816">
        <xref href="#topic5" type="topic" format="dita"/>
      </li>
    </ul>
  </body>
  <topic id="topic2" xml:lang="en">
    <title id="ij166739">About PostGIS</title>
    <body>
      <p>PostGIS is a spatial database extension for PostgreSQL that allows GIS (Geographic
        Information Systems) objects to be stored in the database. The Greenplum Database PostGIS
        extension includes support for GiST-based R-Tree spatial indexes and functions for analysis
        and processing of GIS objects. </p>
      <p>The Greenplum Database PostGIS extension supports the optional PostGIS
          <codeph>raster</codeph> data type and most PostGIS Raster functions. With the PostGIS
        Raster objects, PostGIS <codeph>geometry</codeph> data type offers a single set of overlay
        SQL functions (such as <codeph>ST_Intersects</codeph>) operating seamlessly on vector and
        raster geospatial data. PostGIS Raster uses the GDAL (Geospatial Data Abstraction Library)
        translator library for raster geospatial data formats that presents a <xref
          href="http://www.gdal.org/gdal_datamodel.html" format="html" scope="external">single
          raster abstract data model</xref> to a calling application. </p>
      <p>For information about Greenplum Database PostGIS extension support, see <xref
          href="#postgis_support" format="dita"/>.</p>
      <p>For information about PostGIS, see <xref href="http://postgis.refractions.net/"
          scope="external" format="html"> http://postgis.refractions.net/</xref>
      </p>
      <p>For information about GDAL, see <xref href="http://www.gdal.org" format="html"
          scope="external">http://www.gdal.org</xref>. </p>
    </body>
    <topic id="topic3" xml:lang="en">
      <title id="ij168742">Greenplum PostGIS Extension</title>
      <body>
        <p><ph otherprops="pivotal">The Greenplum Database PostGIS extension package is available
            from <xref href="https://network.pivotal.io/products/pivotal-gpdb" scope="external" format="html">Pivotal
              Network</xref>. </ph>You can install the package using the Greenplum Package Manager
            (<codeph>gppkg</codeph>). For details, see <codeph>gppkg</codeph> in the <cite>Greenplum
            Database Utility Guide</cite>.</p>
        <p>Greenplum Database supports the PostGIS extension with these component versions.<ul
            id="ul_csh_q3z_d1b">
            <li>PostGIS 2.1.5</li>
            <li>Proj 4.8.0 </li>
            <li>Geos 3.4.2</li>
            <li>GDAL 1.11.1</li>
            <li>Json 0.12</li>
            <li>Expat 2.1.0</li>
          </ul></p>
        <p otherprops="pivotal">For the information about supported extension packages and software
          versions see the <cite>Greenplum Database Release Notes</cite>.</p>
        <p>Major enhancements and changes in PostGIS 2.1.5 from 2.0.3 include new PostGIS Raster
          functions. For a list of new and enhanced functions in PostGIS 2.1, see the PostGIS
          documentation <xref
            href="http://postgis.net/docs/manual-2.1/PostGIS_Special_Functions_Index.html#NewFunctions_2_1"
            format="html" scope="external">PostGIS Functions new or enhanced in 2.1</xref>.</p>
        <p>For a list of breaking changes in PostGIS 2.1, see <xref
            href="http://postgis.net/docs/manual-2.1/PostGIS_Special_Functions_Index.html#ChangedFunctions_2_1"
            format="html" scope="external">PostGIS functions breaking changes in 2.1</xref>.</p>
        <p>For a comprehensive list of PostGIS changes in PostGIS 2.1.5 and earlier, see PostGIS 2.1
          Appendix A <xref href="http://postgis.net/docs/manual-2.1/release_notes.html#idm34802"
            format="html" scope="external">Release 2.1.5</xref>.</p>
      </body>
      <topic id="topic4" xml:lang="en">
        <title>Greenplum Database PostGIS Limitations</title>
        <body>
          <p>The Greenplum Database PostGIS extension does not support the following features:</p>
          <ul id="ul_mm2_p42_4p">
            <li id="ij169095">Topology</li>
            <li id="ij166819">A small number of user defined functions and aggregates</li>
            <li id="ij166822">PostGIS long transaction support</li>
            <li id="ij169588">Geometry and geography type modifier</li>
          </ul>
          <p>For information about Greenplum Database PostGIS support, see <xref
              href="#postgis_support" format="dita"/>.</p>
        </body>
      </topic>
    </topic>
  </topic>
  <topic id="topic_b2l_hzw_q1b">
    <title>Enabling and Removing PostGIS Support</title>
    <body>
      <p>The Greenplum Database PostGIS extension contains the <codeph>postgis_manager.sh</codeph>
        script that installs or removes both the PostGIS and PostGIS Raster features in a database.
        After the PostGIS extension package is installed, the script is in
          <codeph>$GPHOME/share/postgresql/contrib/postgis-2.1/</codeph>. The
          <codeph>postgis_manager.sh</codeph> script runs SQL scripts that install or remove PostGIS
        and PostGIS Raster from a database.</p>
      <p>For information about the PostGIS and PostGIS Raster SQL scripts, and required PostGIS
        Raster environment variables, see <xref href="#topic5" type="topic" format="dita"/>.</p>
    </body>
    <topic id="topic_ln5_xcl_r1b">
      <title>Enabling PostGIS Support</title>
      <body>
        <p>Run the <codeph>postgis_manager.sh</codeph> script specifying the database and with the
            <codeph>install</codeph> option to install PostGIS and PostGIS Raster. This example
          installs PostGIS and PostGIS Raster objects in the database
          <codeph>mydatabase</codeph>.<codeblock><codeph>postgis_manager.sh</codeph> mydatabase install</codeblock></p>
        <p>The script runs all the PostGIS SQL scripts that enable PostGIS in a database:
            <codeph>install/postgis.sql</codeph>, <codeph>install/rtpostgis.sql</codeph>
          <codeph>install/spatial_ref_sys.sql</codeph>,
            <codeph>install/postgis_comments.sql</codeph>, and
            <codeph>install/raster_comments.sql</codeph>.</p>
        <p dir="ltr">The postGIS package installation adds these lines to the
            <codeph>greenplum_path.sh</codeph> file for PostGIS Raster support. </p>
        <codeblock>export GDAL_DATA=$GPHOME/share/gdal
export POSTGIS_ENABLE_OUTDB_RASTERS=0
export POSTGIS_GDAL_ENABLED_DRIVERS=DISABLE_ALL</codeblock>
      </body>
    </topic>
    <topic id="topic_ydr_q5l_ybb">
      <title>Enabling GDAL Raster Drivers</title>
      <body>
        <p>PostGIS uses GDAL raster drivers when processing raster data with commands such as
            <codeph>ST_AsJPEG()</codeph>. As the default, PostGIS disables all raster drivers. You
          enable raster drivers by setting the value of the
            <codeph>POSTGIS_GDAL_ENABLED_DRIVERS</codeph> environment variable in the
            <codeph>greenplum_path.sh</codeph> file on all Greenplum Database hosts.</p>
        <p>To see the list of supported GDAL raster drivers for a Greenplum Database system, run the
            <codeph>raster2pgsql</codeph> utility with the <codeph>-G</codeph> option on the
          Greenplum Database master.</p>
        <p>
          <codeblock>raster2pgsql -G </codeblock>
        </p>
        <p>The command lists the driver long format name. The <cite>GDAL Raster Formats</cite> table
          at <xref href="http://www.gdal.org/formats_list.html" format="html" scope="external"
            >http://www.gdal.org/formats_list.html</xref> lists the long format names and the
          corresponding codes that you specify as the value of the environment variable. For
          example, the code for the long name Portable Network Graphics is <codeph>PNG</codeph>.
          This example <codeph>export</codeph> line enables four GDAL raster drivers.</p>
        <codeblock>export POSTGIS_GDAL_ENABLED_DRIVERS="GTiff PNG JPEG GIF"</codeblock>
        <p>The <codeph>gpstop -r</codeph> command restarts the Greenplum Database system to use the
          updated settings in the <codeph>greenplum_path.sh</codeph> file.</p>
        <p>After you have updated the <codeph>greenplum_path.sh</codeph> file on all hosts, and have
          restarted the Greenplum Database system, you can display the enabled raster drivers with
          the <codeph>ST_GDALDrivers()</codeph> function. This <codeph>SELECT</codeph> command lists
          the enabled raster drivers.</p>
        <codeblock>SELECT short_name, long_name FROM ST_GDALDrivers();</codeblock>
      </body>
    </topic>
    <topic id="topic_bgz_vcl_r1b">
      <title>Removing PostGIS Support</title>
      <body>
        <p>Run the <codeph>postgis_manager.sh</codeph> script specifying the database and with the
            <codeph>uninstall</codeph> option to remove PostGIS and PostGIS Raster. This example
          removes PostGIS and PostGIS Raster support from the database
          <codeph>mydatabase</codeph>.<codeblock><codeph>postgis_manager.sh</codeph> mydatabase uninstall</codeblock></p>
        <p>The script runs both the PostGIS SQL scripts that remove PostGIS and PostGIS Raster from
          a database: <codeph>uninstall_rtpostgis.sql</codeph> and
            <codeph>uninstall_postgis.sql</codeph>.</p>
        <p>The <codeph>postgis_manager.sh</codeph> script does not remove these PostGIS Raster
          environment variables the <codeph>greenplum_path.sh</codeph> file:
            <codeph>GDAL_DATA</codeph>, <codeph>POSTGIS_ENABLE_OUTDB_RASTERS</codeph>,
            <codeph>POSTGIS_GDAL_ENABLED_DRIVERS</codeph>. The environment variables are removed
          when you uninstall the PostGIS extension package with the <codeph>gppkg</codeph> utility.
        </p>
      </body>
    </topic>
  </topic>
  <topic id="topic7" xml:lang="en">
    <title id="ij170351">Usage</title>
    <body>
      <p>
        <ph>The following example SQL statements create non-OpenGIS tables and geometries.</ph>
      </p>
      <codeblock>CREATE TABLE geom_test ( gid int4, geom geometry, 
  name varchar(25) );
INSERT INTO geom_test ( gid, geom, name )
  VALUES ( 1, 'POLYGON((0 0 0,0 5 0,5 5 0,5 0 0,0 0 0))', '3D Square');
INSERT INTO geom_test ( gid, geom, name ) 
  VALUES ( 2, 'LINESTRING(1 1 1,5 5 5,7 7 5)', '3D Line' );
INSERT INTO geom_test ( gid, geom, name )
  VALUES ( 3, 'MULTIPOINT(3 4,8 9)', '2D Aggregate Point' );
SELECT * from geom_test WHERE geom &amp;&amp;
  Box3D(ST_GeomFromEWKT('LINESTRING(2 2 0, 3 3 0)'));</codeblock>
      <p>The following example SQL statements create a table and add a geometry column to the table
        with a SRID integer value that references an entry in the <codeph>SPATIAL_REF_SYS</codeph>
        table. The <codeph>INSERT</codeph> statements add two geopoints to the table.</p>
      <codeblock>CREATE TABLE geotest (id INT4, name VARCHAR(32) );
SELECT AddGeometryColumn('geotest','geopoint', 4326,'POINT',2);
INSERT INTO geotest (id, name, geopoint)
  VALUES (1, 'Olympia', ST_GeometryFromText('POINT(-122.90 46.97)', 4326));
INSERT INTO geotest (id, name, geopoint)|
  VALUES (2, 'Renton', ST_GeometryFromText('POINT(-122.22 47.50)', 4326));
SELECT name,ST_AsText(geopoint) FROM geotest;</codeblock>
    </body>
    <topic id="topic8" xml:lang="en">
      <title>Spatial Indexes</title>
      <body>
        <p>PostgreSQL provides support for GiST spatial indexing. The GiST scheme offers indexing
          even on large objects. It uses a system of lossy indexing in which smaller objects act as
          proxies for larger ones in the index. In the PostGIS indexing system, all objects use
          their bounding boxes as proxies in the index.</p>
      </body>
      <topic id="topic9" xml:lang="en">
        <title>Building a Spatial Index</title>
        <body>
          <p>You can build a GiST index as follows:</p>
          <codeblock>CREATE INDEX <i>indexname</i>
  ON <i>tablename</i>
  USING GIST ( <i>geometryfield</i> );</codeblock>
        </body>
      </topic>
    </topic>
  </topic>
  <topic id="postgis_support">
    <title>PostGIS Extension Support and Limitations</title>
    <body>
      <p>This section describes Greenplum PostGIS extension feature support and limitations.</p>
      <ul id="ul_gvb_b4b_3p">
        <li>
          <xref href="#topic_g2d_hkb_3p" format="dita"/>
        </li>
        <li>
          <xref href="#topic_y5z_nkb_3p" format="dita"/>
        </li>
        <li><xref href="#topic_bl3_4vy_d1b" format="dita"/></li>
        <li>
          <xref href="#topic_wy2_rkb_3p" format="dita"/>
        </li>
      </ul>
      <p>The Greenplum Database PostGIS extension does not support the following features:</p>
      <ul id="ul_xpr_21h_kp">
        <li>Topology</li>
        <li>Some Raster Functions</li>
      </ul>
    </body>
    <topic id="topic_g2d_hkb_3p">
      <title>Supported PostGIS Data Types</title>
      <body>
        <p>Greenplum Database PostGIS extension supports these PostGIS data types:</p>
        <ul id="ul_bdm_qnp_fp">
          <li dir="ltr">box2d</li>
          <li dir="ltr">box3d</li>
          <li dir="ltr">geometry</li>
          <li dir="ltr">geography</li>
        </ul>
        <p>For a list of PostGIS data types, operators, and functions, see the <xref
            href="http://postgis.net/docs/manual-2.1/reference.html" format="html" scope="external"
            >PostGIS reference documentation</xref>.</p>
      </body>
    </topic>
    <topic id="topic_bl3_4vy_d1b">
      <title>Supported PostGIS Raster Data Types</title>
      <body>
        <p dir="ltr">Greenplum Database PostGIS supports these PostGIS Raster data types. </p>
        <ul id="ul_obf_z2m_d1b">
          <li dir="ltr">geomval</li>
          <li dir="ltr">addbandarg</li>
          <li dir="ltr">rastbandarg</li>
          <li dir="ltr">raster</li>
          <li dir="ltr">reclassarg </li>
          <li dir="ltr">summarystats </li>
          <li dir="ltr">unionarg</li>
        </ul>
        <p>For information about PostGIS Raster data Management, queries, and applications <xref
            href="http://postgis.net/docs/manual-2.1/using_raster_dataman.html" format="html"
            scope="external">http://postgis.net/docs/manual-2.1/using_raster_dataman.html</xref></p>
        <p>For a list of PostGIS Raster data types, operators, and functions, see the <xref
            href="http://postgis.net/docs/manual-2.1/RT_reference.html" format="html"
            scope="external">PostGIS Raster reference documentation</xref>.</p>
      </body>
    </topic>
    <topic id="topic_y5z_nkb_3p">
      <title>Supported PostGIS Index</title>
      <body>
        <p>Greenplum Database PostGIS extension supports the GiST (Generalized Search Tree)
          index.</p>
      </body>
    </topic>
    <topic id="topic_wy2_rkb_3p">
      <title>PostGIS Extension Limitations</title>
      <body>
        <p>This section lists the Greenplum Database PostGIS extension limitations for user-defined
          functions (UDFs), data types, and aggregates. </p>
        <ul id="ul_vzc_bpb_3p">
          <li>Data types and functions related to PostGIS topology functionality, such as
              <apiname>TopoGeometry</apiname>, are not supported by Greenplum Database.</li>
          <li> Functions that perform <codeph>ANALYZE</codeph> operations for user-defined data
            types are not supported. For example, the <apiname>ST_Estimated_Extent</apiname>
            function is not supported. The function requires table column statistics for user
            defined data types that are not available with Greenplum Database.</li>
          <li>These PostGIS aggregates are not supported by Greenplum Database:<ul
              id="ul_ylg_hpb_3p">
              <li><apiname>ST_MemCollect</apiname></li>
              <li><apiname>ST_MakeLine</apiname></li>
            </ul><p>On a Greenplum Database with multiple segments, the aggregate might return
              different answers if it is called several times repeatedly.</p></li>
          <li>
            <p>Greenplum Database does not support PostGIS long transactions.</p>
            <p>PostGIS relies on triggers and the PostGIS table
                <codeph>public.authorization_table</codeph> for long transaction support. When
              PostGIS attempts to acquire locks for long transactions, Greenplum Database reports
              errors citing that the function cannot access the relation,
                <codeph>authorization_table</codeph>.</p>
          </li>
          <li>Greenplum Database does not support type modifiers for user defined types. <p>The work
              around is to use the <codeph>AddGeometryColumn</codeph> function for PostGIS geometry.
              For example, a table with PostGIS geometry cannot be created with the following SQL
              command:<codeblock>CREATE TABLE geometries(id INTEGER, geom geometry(LINESTRING));</codeblock>Use
              the <codeph>AddGeometryColumn</codeph> function to add PostGIS geometry to a table.
              For example, these following SQL statements create a table and add PostGIS geometry to
              the
              table:<codeblock>CREATE TABLE geometries(id INTEGER);
SELECT AddGeometryColumn('public', 'geometries', 'geom', 0, 'LINESTRING', 2);</codeblock></p></li>
        </ul>
      </body>
    </topic>
  </topic>
  <topic id="topic5" xml:lang="en">
    <title id="ij169610">PostGIS Support Scripts</title>
    <body>
      <p>After installing the PostGIS extension package, you enable PostGIS support for each
        database that requires its use. To enable or remove PostGIS support in your database, you
        can run SQL scripts that are supplied with the PostGIS package in
          <codeph>$GPHOME/share/postgresql/contrib/postgis-2.1/</codeph>.<ul id="ul_xmd_xpz_r1b">
          <li><xref href="#topic_ulm_4gl_r1b" format="dita"/></li>
          <li><xref href="#topic_xp2_lgl_r1b" format="dita"/></li>
        </ul></p>
      <p>Instead of running the scripts individually, you can use the
          <codeph>postgis_manager.sh</codeph> script to run SQL scripts that enable or remove
        PostGIS support. See <xref href="#topic_b2l_hzw_q1b" format="dita"/>.</p>
      <p>You can run the PostGIS SQL scripts individually to enable or remove PostGIS support. For
        example, these commands run the SQL scripts <codeph>postgis.sql</codeph>,
          <codeph>rtpostgis.sql</codeph>, and <codeph>spatial_ref_sys.sql</codeph> in the database
          <codeph>mydatabase</codeph>.</p>
      <codeblock>psql -d mydatabase -f 
  $GPHOME/share/postgresql/contrib/postgis-2.1/install/postgis.sql
psql -d mydatabase -f 
  $GPHOME/share/postgresql/contrib/postgis-2.1/install/rtpostgis.sql
psql -d mydatabase -f 
  $GPHOME/share/postgresql/contrib/postgis-2.1/install/spatial_ref_sys.sql</codeblock>
      <p>After running the scripts, the database is enabled with both PostGIS and PostGIS
        Raster.</p>
    </body>
    <topic id="topic_ulm_4gl_r1b">
      <title>Scripts that Enable PostGIS and PostGIS Raster Support</title>
      <body>
        <p dir="ltr" id="docs-internal-guid-8c038020-7f9c-b023-7fae-617656ae21e7">These scripts
          enable PostGIS, and the optional PostGIS Raster in a database.<ul id="ul_iph_ddm_d1b">
            <li><codeph>install/postgis.sql</codeph> - Load the PostGIS objects and function
              definitions.</li>
            <li><codeph>install/rtpostgis.sql</codeph> - Load the PostGIS <codeph>raster</codeph>
              object and function definitions.</li>
          </ul></p>
        <note>If you are installing PostGIS Raster, PostGIS objects must be installed before PostGIS
          Raster. PostGIS Raster depends on PostGIS objects. Greenplum Database returns an error if
            <codeph>rtpostgis.sql</codeph> is run before <codeph>postgis.sql</codeph>.</note>
        <p>These SQL scripts add data and comments to a PostGIS enabled database.<ul
            id="ul_l3c_zbz_d1b">
            <li><codeph>install/spatial_ref_sys.sql</codeph> - Populate the
                <codeph>spatial_ref_sys</codeph> table with a complete set of EPSG coordinate system
              definition identifiers. With the definition identifiers you can perform
                <codeph>ST_Transform()</codeph> operations on geometries.<note type="note">If you
                have overridden standard entries and want to use those overrides, do not load the
                  <codeph>spatial_ref_sys.sql</codeph> file when creating the new
              database.</note></li>
            <li><codeph>install/postgis_comments.sql</codeph> - Add comments to the PostGIS
              functions.</li>
            <li><codeph>install/raster_comments.sql</codeph> - Add comments to the PostGIS Raster
              functions.</li>
          </ul></p>
        <p>You can view comments with the <codeph>pslq</codeph> meta-command <codeph>\dd
              <varname>function_name</varname></codeph> or from any tool that can show Greenplum
          Database function comments.</p>
      </body>
      <topic id="topic_l4l_gg1_21b">
        <title>PostGIS Raster Environment Variables</title>
        <body>
          <p dir="ltr">The postGIS package installation adds these lines to the
              <codeph>greenplum_path.sh</codeph> file for PostGIS Raster support.</p>
          <codeblock>export GDAL_DATA=$GPHOME/share/gdal
export POSTGIS_ENABLE_OUTDB_RASTERS=0
export POSTGIS_GDAL_ENABLED_DRIVERS=DISABLE_ALL</codeblock>
          <p><codeph>GDAL_DATA</codeph> specifies the location of GDAL utilities and support files
            used by the GDAL library. For example, the directory contains EPSG support files such as
              <codeph>gcs.csv​</codeph> and <codeph>pcs.csv</codeph> (so called dictionaries, mostly
            in ​CSV format). The GDAL library requires the support files to properly evaluate EPSG
            codes.</p>
          <p><codeph>POSTGIS_GDAL_ENABLED_DRIVERS</codeph> sets the enabled GDAL drivers in the
            PostGIS environment.</p>
          <p><codeph>POSTGIS_ENABLE_OUTDB_RASTERS</codeph> is a boolean configuration option to
            enable access to out of database raster bands. </p>
        </body>
      </topic>
    </topic>
    <topic id="topic_xp2_lgl_r1b">
      <title>Scripts that Remove PostGIS and PostGIS Raster Support</title>
      <body>
        <p>To remove PostGIS support from a database, run SQL scripts that are supplied with the
          PostGIS extension package in
            <codeph>$GPHOME/share/postgresql/contrib/postgis-2.1/</codeph>
        </p>
        <note>If you installed PostGIS Raster, you must uninstall PostGIS Raster before you
          uninstall the PostGIS objects. PostGIS Raster depends on PostGIS objects. Greenplum
          Database returns an error if PostGIS objects are removed before PostGIS Raster.</note>
        <p>These scripts remove PostGIS and PostGIS Raster objects from a database.<ul
            id="ul_yp2_lgl_r1b">
            <li><codeph>uninstall/uninstall_rtpostgis.sql</codeph> - Removes the PostGIS Raster
              object and function definitions.</li>
            <li><codeph>uninstall/uninstall_postgis.sql</codeph> - Removes the PostGIS objects and
              function definitions.</li>
          </ul></p>
        <p>After PostGIS support has been removed from all databases in the Greenplum Database
          system, you can remove the PostGIS extension package. For example this
            <codeph>gppkg</codeph> command removes the PostGIS extension package.
          <codeblock>gppkg -r postgis-2.1.5+pivotal.2</codeblock></p>
        <p>Restart Greenplum Database after removing the package.</p>
        <codeblock>gpstop -r</codeblock>
        <p dir="ltr">Ensure that these lines for PostGIS Raster support are removed from the
            <codeph>greenplum_path.sh</codeph> file.</p>
        <codeblock>export GDAL_DATA=$GPHOME/share/gdal
export POSTGIS_ENABLE_OUTDB_RASTERS=0
export POSTGIS_GDAL_ENABLED_DRIVERS=DISABLE_ALL</codeblock>
      </body>
    </topic>
  </topic>
</topic>
