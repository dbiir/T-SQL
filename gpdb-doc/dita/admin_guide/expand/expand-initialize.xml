<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="expand-initialize" xml:lang="en">
  <title id="no160120">Initializing New Segments</title>
  <shortdesc>Use the <codeph>gpexpand</codeph> utility to create and initialize the new segment
    instances and create the expansion schema. </shortdesc>
  <body>
    <p>The first time you run <codeph><xref href="../../utility_guide/ref/gpexpand.xml"
          >gpexpand</xref></codeph> with a valid input file it creates and initializes segment
      instances and creates the expansion schema. After these steps are completed, running
        <codeph>gpexpand</codeph> detects if the expansion schema has been created and, if so,
      performs table redistribution. </p>
    <ul id="ul_od1_h1v_mr">
      <li>
        <xref href="#topic23" format="dita"/>
      </li>
      <li>
        <xref href="#topic26" format="dita"/>
      </li>
      <li>
        <xref href="#topic27" format="dita"/>
      </li>
    </ul>
  </body>
  <topic id="topic23" xml:lang="en">
    <title id="no163546">Creating an Input File for System Expansion</title>
    <body>
      <p>To begin expansion, <codeph>gpexpand</codeph> requires an input file containing information
        about the new segments and hosts. If you run <codeph>gpexpand</codeph> without specifying an
        input file, the utility displays an interactive interview that collects the required
        information and automatically creates an input file. </p>
      <p>If you create the input file using the interactive interview, you may specify a file with a
        list of expansion hosts in the interview prompt. If your platform or command shell limits
        the length of the host list, specifying the hosts with <codeph>-f</codeph> may be mandatory.
      </p>
    </body>
    <topic id="topic24" xml:lang="en">
      <title id="no164373">Creating an input file in Interactive Mode</title>
      <body>
        <p>Before you run <codeph>gpexpand</codeph> to create an input file in interactive mode,
          ensure you know:</p>
        <ul>
          <li id="no164244">The number of new hosts (or a hosts file)</li>
          <li id="no165528">The new hostnames (or a hosts file)</li>
          <li id="no164248">The mirroring strategy used in existing hosts, if any</li>
          <li id="no165531">The number of segments to add per host, if any</li>
        </ul>
        <p>The utility automatically generates an input file based on this information,
            <codeph>dbid</codeph>, <codeph>content</codeph> ID, and data directory values stored in
            <i>gp_segment_configuration</i>, and saves the file in the current directory.</p>
        <section id="no163887">
          <title>To create an input file in interactive mode</title>
          <ol>
            <li id="no163902">Log in on the master host as the user who will run your Greenplum
              Database system; for example, <codeph>gpadmin</codeph>.</li>
            <li id="no163931">Run <codeph>gpexpand</codeph>. The utility displays messages about how
              to prepare for an expansion operation, and it prompts you to quit or
                continue.<p>Optionally, specify a hosts file using <codeph>-f</codeph>. For
                example:</p><codeblock>$ gpexpand -f /home/gpadmin/<i>new_hosts_file</i></codeblock></li>
            <li id="no163932">At the prompt, select <codeph>Y</codeph> to continue.</li>
            <li id="no168490">Unless you specified a hosts file using <codeph>-f</codeph>, you are
              prompted to enter hostnames. Enter a comma separated list of the hostnames of the new
              expansion hosts. Do not include interface hostnames. For
                example:<codeblock>&gt; sdw4, sdw5, sdw6, sdw7</codeblock><p>To add segments to
                existing hosts only, enter a blank line at this prompt. Do not specify
                  <codeph>localhost</codeph> or any existing host name.</p></li>
            <li id="no168499">Enter the mirroring strategy used in your system, if any. Options are
                <codeph>spread|grouped|none</codeph>. The default setting is
                <codeph>grouped</codeph>.<p>Ensure you have enough hosts for the selected grouping
                strategy. For more information about mirroring, see <xref
                  href="expand-planning.xml#topic7" type="topic" format="dita"/>.</p></li>
            <li id="no168527">Enter the number of new primary segments to add, if any. By default,
              new hosts are initialized with the same number of primary segments as existing hosts.
              Increase segments per host by entering a number greater than zero. The number you
              enter will be the number of additional segments initialized on all hosts. For example,
              if existing hosts currently have two segments each, entering a value of
                <codeph>2</codeph> initializes two more segments on existing hosts, and four
              segments on new hosts.</li>
            <li id="no168559">If you are adding new primary segments, enter the new primary data
              directory root for the new segments. Do not specify the actual data directory name,
              which is created automatically by <codeph>gpexpand</codeph> based on the existing data
              directory names. <p>For example, if your existing data directories are as
                follows:</p><codeblock>/gpdata/primary/gp0
/gpdata/primary/gp1</codeblock><p>then
                enter the following (one at each prompt) to specify the data directories for two new
                primary segments:</p><codeblock>/gpdata/primary
/gpdata/primary</codeblock><p>When
                the initialization runs, the utility creates the new directories
                  <codeph>gp2</codeph> and <codeph>gp3</codeph> under
                  <codeph>/gpdata/primary</codeph>.</p></li>
            <li id="no168782">If you are adding new mirror segments, enter the new mirror data
              directory root for the new segments. Do not specify the data directory name; it is
              created automatically by <codeph>gpexpand</codeph> based on the existing data
              directory names. <p>For example, if your existing data directories are as
                follows:</p><codeblock>/gpdata/mirror/gp0
/gpdata/mirror/gp1</codeblock><p>enter the
                following (one at each prompt) to specify the data directories for two new mirror
                segments:</p><codeblock>/gpdata/mirror
/gpdata/mirror</codeblock><p>When the
                initialization runs, the utility will create the new directories
                  <codeph>gp2</codeph> and <codeph>gp3</codeph> under
                  <codeph>/gpdata/mirror</codeph>.</p><p>These primary and mirror root directories
                for new segments must exist on the hosts, and the user running
                  <codeph>gpexpand</codeph> must have permissions to create directories in them.
                </p><p>After you have entered all required information, the utility generates an
                input file and saves it in the current directory. For
              example:</p><codeblock>gpexpand_inputfile_yyyymmdd<i>_145134</i></codeblock></li>
          </ol>
        </section>
      </body>
    </topic>
    <topic id="topic25" xml:lang="en">
      <title id="no165820">Expansion Input File Format</title>
      <body>
        <p>Use the interactive interview process to create your own input file unless your expansion
          scenario has atypical needs. </p>
        <p>The format for expansion input files is:</p>
        <codeblock>hostname|address|port|datadir|dbid|content|preferred_role</codeblock>
        <p>For example:</p>
        <codeblock>sdw5|sdw5-1|50011|/gpdata/primary/gp9|11|9|p
sdw5|sdw5-2|50012|/gpdata/primary/gp10|12|10|p
sdw5|sdw5-2|60011|/gpdata/mirror/gp9|13|9|m
sdw5|sdw5-1|60012|/gpdata/mirror/gp10|14|10|m</codeblock>
        <p>For each new segment, this format of expansion input file requires the following:</p>
        <table id="no165833">
          <title>Data for the expansion configuration file</title>
          <tgroup cols="3">
            <colspec colnum="1" colname="col1" colwidth="90pt"/>
            <colspec colnum="2" colname="col2" colwidth="118pt"/>
            <colspec colnum="3" colname="col3" colwidth="242pt"/>
            <thead>
              <row>
                <entry colname="col1">Parameter</entry>
                <entry colname="col2">Valid Values</entry>
                <entry colname="col3">Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry colname="col1">hostname</entry>
                <entry colname="col2">Hostname</entry>
                <entry colname="col3">Hostname for the segment host.</entry>
              </row>
              <row>
                <entry colname="col1">port</entry>
                <entry colname="col2">An available port number</entry>
                <entry colname="col3">Database listener port for the segment, incremented on the
                  existing segment <i>port</i> base number. </entry>
              </row>
              <row>
                <entry colname="col1">datadir</entry>
                <entry colname="col2">Directory name</entry>
                <entry colname="col3">The data directory location for a segment as per the
                  gp_segment_configuration system catalog.</entry>
              </row>
              <row>
                <entry colname="col1">dbid</entry>
                <entry colname="col2">Integer. Must not conflict with existing <i>dbid</i>
                  values.</entry>
                <entry colname="col3">Database ID for the segment. The values you enter should be
                  incremented sequentially from existing <i>dbid</i> values shown in the system
                  catalog <codeph>gp_segment_configuration</codeph>. For example, to add four
                  segment instances to an existing ten-segment array with <i>dbid </i> values of
                  1-10, list new <i>dbid</i> values of 11, 12, 13 and 14.</entry>
              </row>
              <row>
                <entry colname="col1">content</entry>
                <entry colname="col2">Integer. Must not conflict with existing <i>content</i>
                  values.</entry>
                <entry colname="col3">The content ID of the segment. A primary segment and its
                  mirror should have the same content ID, incremented sequentially from existing
                  values. For more information, see <i>content</i> in the reference for
                    <codeph>gp_segment_configuration</codeph>.</entry>
              </row>
              <row>
                <entry colname="col1">preferred_role</entry>
                <entry colname="col2">
                  <codeph>p | m</codeph>
                </entry>
                <entry colname="col3">Determines whether this segment is a primary or mirror.
                  Specify <codeph>p</codeph> for primary and <codeph>m</codeph> for mirror.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </body>
    </topic>
  </topic>
  <topic id="topic26" xml:lang="en">
    <title id="no164605">Running gpexpand to Initialize New Segments</title>
    <body>
      <p>After you have created an input file, run <codeph>gpexpand</codeph> to initialize new
        segment instances. </p>
      <section id="no160378">
        <title>To run gpexpand with an input file</title>
        <ol>
          <li id="no160392">Log in on the master host as the user who will run your Greenplum
            Database system; for example, <codeph>gpadmin</codeph>.</li>
          <li id="no161427">Run the <codeph>gpexpand</codeph> utility, specifying the input file
            with <codeph>-i</codeph>. For
              example:<codeblock>$ gpexpand -i input_file</codeblock><p>The utility detects if an
              expansion schema exists for the Greenplum Database system. If a
                <i>gpexpand</i> schema exists, remove it with <codeph>gpexpand -c</codeph>
              before you start a new expansion operation. See <xref href="expand-rm-schema.xml"
                type="topic" format="dita"/>.</p><p>When the new segments are initialized and the
              expansion schema is created, the utility prints a success message and exits. </p></li>
        </ol>
        <p>When the initialization process completes, you can connect to Greenplum Database and view
          the expansion schema. The <i>gpexpand</i> schema resides in the
            postgres database. For more information, see <xref
            href="expand-planning.xml#topic9" type="topic" format="dita"/>.</p>
      </section>
    </body>
  </topic>
  <topic id="topic27" xml:lang="en">
    <title>Rolling Back a Failed Expansion Setup</title>
    <body>
      <p>You can roll back an expansion setup operation (adding segment instances and segment hosts)
        only if the operation fails.</p>
      <p>If the expansion fails during the initialization step, while the database is down, you must
        first restart the database in master-only mode by running the <codeph>gpstart -m</codeph>
        command. </p>
      <p>Roll back the failed expansion with the following
        command:<codeblock>gpexpand --rollback</codeblock></p>
    </body>
  </topic>
  <topic id="topic_wkv_kkd_chb">
    <title>Monitoring the Cluster Expansion State</title>
    <body>
      <p>At any time, you can check the state of cluster expansion by running the
          <codeph>gpstate</codeph> utility with the <codeph>-x</codeph> flag: </p>
      <codeblock>$ gpstate -x</codeblock>
      <p>If the expansion schema exists in the postgres database, <codeph>gpstate
          -x</codeph> reports on the progress of the expansion. During the first expansion phase,
          <codeph>gpstate</codeph> reports on the progress of new segment initialization.  During the
        second phase, <codeph>gpstate</codeph> reports on the progress of table redistribution, and
        whether redistribution is paused or active. </p>
      <p>You can also query the expansion schema to see expansion status. See <xref
          href="expand-redistribute.xml#topic31"/> for more information.</p>

    </body>
  </topic>
</topic>
