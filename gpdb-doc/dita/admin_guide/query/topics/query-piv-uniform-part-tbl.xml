<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1" xml:lang="en">
  <title id="ih135496">About Uniform Multi-level Partitioned Tables</title>
  <body>
    <p>GPORCA supports queries on a multi-level partitioned (MLP) table if the MLP
      table is a <term>uniform partitioned table</term>. A multi-level partitioned table is a
      partitioned table that was created with the <codeph>SUBPARTITION</codeph> clause. A uniform
      partitioned table must meet these requirements. <ul id="ul_utn_5lt_zs">
        <li>The partitioned table structure is uniform. Each partition node at the same level must
          have the same hierarchical structure.</li>
        <li>The partition key constraints must be consistent and uniform. At each subpartition
          level, the sets of constraints on the child tables created for each branch must
          match.</li>
      </ul></p>
    <p>You can display information about partitioned tables in several ways, including displaying
      information from these sources:<ul id="ul_tlr_js1_1t">
        <li>The <codeph>pg_partitions</codeph> system view contains information on the structure of
          a partitioned table.</li>
        <li>The <codeph>pg_constraint</codeph> system catalog table contains information on table
          constraints.</li>
        <li>The psql meta command \d+ <varname>tablename</varname> displays the table constraints
          for child leaf tables of a partitioned table.</li>
      </ul></p>
  </body>
  <topic id="topic_zn1_m3m_ss">
    <title>Example</title>
    <body>
      <p>This <codeph>CREATE TABLE</codeph> command creates a uniform partitioned table. </p>
      <codeblock>CREATE TABLE mlp (id  int,  year int,  month int,  day int,
   region  text)
   DISTRIBUTED  BY (id)
    PARTITION BY RANGE ( year)
      SUBPARTITION  BY LIST (region)
        SUBPARTITION TEMPLATE (
          SUBPARTITION usa  VALUES ( 'usa'),
          SUBPARTITION europe  VALUES ( 'europe'),
          SUBPARTITION asia  VALUES ( 'asia'))
   (  START ( 2006)  END ( 2016) EVERY ( 5));</codeblock>
      <p>These are child tables and the partition hierarchy that are created for the table
          <codeph>mlp</codeph>. This hierarchy consists of one subpartition level that contains two
        branches.
        <codeblock>mlp_1_prt_11
   mlp_1_prt_11_2_prt_usa
   mlp_1_prt_11_2_prt_europe
   mlp_1_prt_11_2_prt_asia

mlp_1_prt_21
   mlp_1_prt_21_2_prt_usa
   mlp_1_prt_21_2_prt_europe
   mlp_1_prt_21_2_prt_asia</codeblock></p>
      <p>The hierarchy of the table is uniform, each partition contains a set of three child tables
        (subpartitions). The constraints for the region subpartitions are uniform, the set of
        constraints on the child tables for the branch table <codeph>mlp_1_prt_11</codeph> are the
        same as the constraints on the child tables for the branch table
          <codeph>mlp_1_prt_21</codeph>.</p>
      <p>As a quick check, this query displays the constraints for the
        partitions.<codeblock>WITH tbl AS (SELECT oid, partitionlevel AS level, 
             partitiontablename AS part 
         FROM pg_partitions, pg_class 
         WHERE tablename = 'mlp' AND partitiontablename=relname 
            AND partitionlevel=1 ) 
  SELECT tbl.part, consrc 
    FROM tbl, pg_constraint 
    WHERE tbl.oid = conrelid ORDER BY consrc;</codeblock></p>
      <note>You will need modify the query for more complex partitioned tables. For example, the
        query does not account for table names in different schemas.</note>
      <p>The <codeph>consrc</codeph> column displays constraints on the subpartitions. The set of
        region constraints for the subpartitions in <codeph>mlp_1_prt_1</codeph> match the
        constraints for the subpartitions in <codeph>mlp_1_prt_2</codeph>. The constraints for year
        are inherited from the parent branch tables.</p>
      <codeblock>           part           |               consrc
--------------------------+------------------------------------
 mlp_1_prt_2_2_prt_asia   | (region = 'asia'::text)
 mlp_1_prt_1_2_prt_asia   | (region = 'asia'::text)
 mlp_1_prt_2_2_prt_europe | (region = 'europe'::text)
 mlp_1_prt_1_2_prt_europe | (region = 'europe'::text)
 mlp_1_prt_1_2_prt_usa    | (region = 'usa'::text)
 mlp_1_prt_2_2_prt_usa    | (region = 'usa'::text)
 mlp_1_prt_1_2_prt_asia   | ((year >= 2006) AND (year &lt; 2011))
 mlp_1_prt_1_2_prt_usa    | ((year >= 2006) AND (year &lt; 2011))
 mlp_1_prt_1_2_prt_europe | ((year >= 2006) AND (year &lt; 2011))
 mlp_1_prt_2_2_prt_usa    | ((year >= 2011) AND (year &lt; 2016))
 mlp_1_prt_2_2_prt_asia   | ((year >= 2011) AND (year &lt; 2016))
 mlp_1_prt_2_2_prt_europe | ((year >= 2011) AND (year &lt; 2016))
(12 rows)</codeblock>
      <p>If you add a default partition to the example partitioned table with this
        command:<codeblock>ALTER TABLE mlp ADD DEFAULT PARTITION def</codeblock></p>
      <p>The partitioned table remains a uniform partitioned table. The branch created for default
        partition contains three child tables and the set of constraints on the child tables match
        the existing sets of child table constraints. </p>
      <p>In the above example, if you drop the subpartition <codeph>mlp_1_prt_21_2_prt_asia</codeph>
        and add another subpartition for the region <codeph>canada</codeph>, the constraints are no
        longer
        uniform.<codeblock>ALTER TABLE mlp ALTER PARTITION FOR (RANK(2))
  DROP PARTITION asia ;

ALTER TABLE mlp ALTER PARTITION FOR (RANK(2))
  ADD PARTITION canada VALUES ('canada');</codeblock></p>
      <p>Also, if you add a partition <codeph>canada</codeph> under <codeph>mlp_1_prt_21</codeph>,
        the partitioning hierarchy is not uniform. </p>
      <p>However, if you add the subpartition <codeph>canada</codeph> to both
          <codeph>mlp_1_prt_21</codeph> and <codeph>mlp_1_prt_11</codeph> the of the original
        partitioned table, it remains a uniform partitioned table.</p>
      <note>Only the constraints on the sets of partitions at a partition level must be the same.
        The names of the partitions can be different.</note>
    </body>
  </topic>
</topic>
