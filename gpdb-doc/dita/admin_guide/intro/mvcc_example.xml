<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="mvcc-overview">
   <title>Example of Managing Transaction IDs</title>
   <body>
      <p>For Greenplum Database, the transaction ID (XID) value an incrementing 32-bit
            (2<sup>32</sup>) value. The maximum unsigned 32-bit value is 4,294,967,295, or about
         four billion. The XID values restart at 3 after the maximum is reached. Greenplum Database
         handles the limit of XID values with two features:<ul id="ul_nlb_ks5_vv">
            <li>Calculations on XID values using modulo-2<sup>32</sup> arithmetic that allow
               Greenplum Database to reuse XID values. The modulo calculations determine the order
               of transactions, whether one transaction has occurred before or after another, based
               on the XID. <p>Every XID value can have up to two billion (2<sup>31</sup>) XID values
                  that are considered previous transactions and two billion (2<sup>31</sup> -1 ) XID
                  values that are considered newer transactions. The XID values can be considered a
                  circular set of values with no endpoint similar to a 24 hour clock.</p><p>Using
                  the Greenplum Database modulo calculations, as long as two XIDs are within
                     2<sup>31</sup> transactions of each other, comparing them yields the correct
                  result.</p></li>
            <li>A frozen XID value that Greenplum Database uses as the XID for current (visible)
               data rows. Setting a row's XID to the frozen XID performs two functions. <ul
                  id="ul_osq_cgj_wv">
                  <li>When Greenplum Database compares XIDs using the modulo calculations, the
                     frozen XID is always smaller, earlier, when compared to any other XID. If a
                     row's XID is not set to the frozen XID and 2<sup>31</sup> new transactions are
                     executed, the row appears to be executed in the future based on the modulo
                     calculation. </li>
                  <li>When the row's XID is set to the frozen XID, the original XID can be used,
                     without duplicating the XID. This keeps the number of data rows on disk with
                     assigned XIDs below (2<sup>32</sup>).</li>
               </ul></li>
         </ul></p>
      <note>Greenplum Database assigns XID values only to transactions that involve DDL or DML
         operations, which are typically the only transactions that require an XID.</note>
   </body>
   <topic id="topic_zsw_yck_wv">
      <title>Simple MVCC Example</title>
      <body>
         <p>This is a simple example of the concepts of a MVCC database and how it manages data and
            transactions with transaction IDs. This simple MVCC database example consists of a
            single table:<ul id="ul_btw_yck_wv">
               <li>The table is a simple table with 2 columns and 4 rows of data.</li>
               <li>The valid transaction ID (XID) values are from 0 up to 9, after 9 the XID
                  restarts at 0.</li>
               <li>The frozen XID is -2. This is different than the Greenplum Database frozen
                  XID.</li>
               <li>Transactions are performed on a single row. </li>
               <li>Only insert and update operations are performed.</li>
               <li>All updated rows remain on disk, no operations are performed to remove obsolete
                  rows.</li>
            </ul></p>
         <p>The example only updates the amount values. No other changes to the table. </p>
         <p>The example shows these concepts.<ul id="ul_tt1_tj1_cw">
               <li><xref href="#topic_zsw_yck_wv/transactions" format="dita">How transaction IDs are
                     used to manage multiple, simultaneous transactions on a table.</xref></li>
               <li><xref href="#topic_zsw_yck_wv/managin_xid" format="dita">How transaction IDs are
                     managed with the frozen XID</xref></li>
               <li><xref href="#topic_zsw_yck_wv/table_itw_yck_wv" format="dita">How the modulo
                     calculation determines the order of transactions based on transaction
                     IDs</xref></li>
            </ul></p>
         <section id="transactions">
            <title>Managing Simultaneous Transactions</title>
            <p>This table is the initial table data on disk with no updates. The table contains two
               database columns for transaction IDs, <codeph>xmin</codeph> (transaction that created
               the row) and <codeph>xmax</codeph> (transaction that updated the row). In the table,
               changes are added, in order, to the bottom of the table.</p>
            <table frame="all" rowsep="1" colsep="1" id="table_ctw_yck_wv">
               <title>Example Table</title>
               <tgroup cols="4">
                  <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                  <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                  <colspec colname="newCol3" colnum="3" colwidth="1*"/>
                  <colspec colname="newCol4" colnum="4" colwidth="1*"/>
                  <thead>
                     <row>
                        <entry>item</entry>
                        <entry>amount</entry>
                        <entry>xmin</entry>
                        <entry>xmax</entry>
                     </row>
                  </thead>
                  <tbody>
                     <row>
                        <entry>widget</entry>
                        <entry>100</entry>
                        <entry>0</entry>
                        <entry>null</entry>
                     </row>
                     <row>
                        <entry>giblet</entry>
                        <entry>200</entry>
                        <entry>1</entry>
                        <entry>null</entry>
                     </row>
                     <row>
                        <entry>sprocket</entry>
                        <entry>300</entry>
                        <entry>2</entry>
                        <entry>null</entry>
                     </row>
                     <row>
                        <entry>gizmo</entry>
                        <entry>400</entry>
                        <entry>3</entry>
                        <entry>null</entry>
                     </row>
                  </tbody>
               </tgroup>
            </table>
            <p>The next table shows the table data on disk after some updates on the amount values
               have been performed.<sl>
                  <sli>xid = 4: <codeph>update tbl set amount=208 where item =
                     'widget'</codeph></sli>
                  <sli>xid = 5: <codeph>update tbl set amount=133 where item =
                     'sprocket'</codeph></sli>
                  <sli>xid = 6: <codeph>update tbl set amount=16 where item =
                     'widget'</codeph></sli>
               </sl></p>
            <p>In the next table, the bold items are the current rows for the table. The other rows
               are obsolete rows, table data that on disk but is no longer current. Using the xmax
               value, you can determine the current rows of the table by selecting the rows with
                  <codeph>null</codeph> value. Greenplum Database uses a slightly different method
               to determine current table rows.</p>
            <table frame="all" rowsep="1" colsep="1" id="table_dtw_yck_wv">
               <title>Example Table with Updates</title>
               <tgroup cols="4">
                  <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                  <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                  <colspec colname="newCol3" colnum="3" colwidth="1*"/>
                  <colspec colname="newCol4" colnum="4" colwidth="1*"/>
                  <thead>
                     <row>
                        <entry>item</entry>
                        <entry>amount</entry>
                        <entry>xmin</entry>
                        <entry>xmax</entry>
                     </row>
                  </thead>
                  <tbody>
                     <row>
                        <entry>widget</entry>
                        <entry>100</entry>
                        <entry>0</entry>
                        <entry>4</entry>
                     </row>
                     <row>
                        <entry><b>giblet</b></entry>
                        <entry><b>200</b></entry>
                        <entry>1</entry>
                        <entry><b>null</b></entry>
                     </row>
                     <row>
                        <entry>sprocket</entry>
                        <entry>300</entry>
                        <entry>2</entry>
                        <entry>5</entry>
                     </row>
                     <row>
                        <entry><b>gizmo</b></entry>
                        <entry><b>400</b></entry>
                        <entry>3</entry>
                        <entry><b>null</b></entry>
                     </row>
                     <row>
                        <entry>widget</entry>
                        <entry>208</entry>
                        <entry>4</entry>
                        <entry>6</entry>
                     </row>
                     <row>
                        <entry><b>sproket</b></entry>
                        <entry><b>133</b></entry>
                        <entry>5</entry>
                        <entry><b>null</b></entry>
                     </row>
                     <row>
                        <entry><b>widget</b></entry>
                        <entry><b>16</b></entry>
                        <entry>6</entry>
                        <entry><b>null</b></entry>
                     </row>
                  </tbody>
               </tgroup>
            </table>
            <p>The simple MVCC database works with XID values to determine the state of the table.
               For example, both these independent transactions execute concurrently.<ul
                  id="ul_etw_yck_wv">
                  <li><codeph>UPDATE</codeph> command changes the sprocket amount value to
                        <codeph>133</codeph> (xmin value <codeph>5</codeph>)</li>
                  <li><codeph>SELECT</codeph> command returns the value of sprocket.</li>
               </ul></p>
            <p>During the <codeph>UPDATE</codeph> transaction, the database returns the value of
               sprocket <codeph>300</codeph>, until the <codeph>UPDATE</codeph> transaction
               completes. </p>
         </section>
         <section id="managin_xid">
            <title>Managing XIDs and the Frozen XID</title>
            <p>For this simple example, the database is close to running out of available XID
               values. When Greenplum Database is close to running out of available XID values,
               Greenplum Database takes these actions.<ul id="ul_ftw_yck_wv">
                  <li>Greenplum Database issues a warning stating that the database is running out
                     of XID
                     values.<codeblock>WARNING: database "<varname>database_name</varname>" must be vacuumed within <varname>number_of_transactions</varname> transactions</codeblock></li>
                  <li>Before the last XID is assigned, Greenplum Database stops accepting
                     transactions to prevent assigning an XID value twice and issues this
                     message.<codeblock>FATAL: database is not accepting commands to avoid wraparound data loss in database "<varname>database_name</varname>" </codeblock></li>
               </ul></p>
            <p>To manage transaction IDs and table data that is stored on disk, Greenplum Database
               provides the <codeph>VACUUM</codeph> command. <ul id="ul_fdf_k5q_wv">
                  <li> A <codeph>VACUUM</codeph> operation frees up XID values so that a table can
                     have more than 10 rows by changing the xmin values to the frozen XID.</li>
                  <li> A <codeph>VACUUM</codeph> operation manages obsolete or deleted table rows on
                     disk. This database's <codeph>VACUUM</codeph> command changes the XID values
                        <codeph>obsolete</codeph> to indicate obsolete rows. A Greenplum Database
                        <codeph>VACUUM</codeph> operation, without the <codeph>FULL</codeph> option,
                     deletes the data opportunistically to remove rows on disk with minimal impact
                     to performance and data availability.</li>
               </ul></p>
            <p>For the example table, a <codeph>VACUUM</codeph> operation has been performed on the
               table. The command updated table data on disk. This version of the
                  <codeph>VACUUM</codeph> command performs slightly differently than the Greenplum
               Database command, but the concepts are the same.<ul id="ul_gtw_yck_wv">
                  <li>For the widget and sprocket rows on disk that are no longer current, the rows
                     have been marked as <codeph>obsolete</codeph>. </li>
                  <li>For the giblet and gizmo rows that are current, the xmin has been changed to
                     the frozen XID.<p>The values are still current table values (the row's xmax
                        value is <codeph>null</codeph>). However, the table row is visible to all
                        transactions because the xmin value is frozen XID value that is older than
                        all other XID values when modulo calculations are performed. </p></li>
               </ul></p>
            <p>After the <codeph>VACUUM</codeph> operation, the XID values <codeph>0</codeph>,
                  <codeph>1</codeph>, <codeph>2</codeph>, and <codeph>3</codeph> available for use. </p>
            <table frame="all" rowsep="1" colsep="1" id="table_htw_yck_wv">
               <title>Example Table after VACUUM</title>
               <tgroup cols="4">
                  <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                  <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                  <colspec colname="newCol3" colnum="3" colwidth="1*"/>
                  <colspec colname="newCol4" colnum="4" colwidth="1*"/>
                  <thead>
                     <row>
                        <entry>item</entry>
                        <entry>amount</entry>
                        <entry>xmin</entry>
                        <entry>xmax</entry>
                     </row>
                  </thead>
                  <tbody>
                     <row>
                        <entry>widget</entry>
                        <entry>100</entry>
                        <entry>obsolete</entry>
                        <entry>obsolete</entry>
                     </row>
                     <row>
                        <entry><b>giblet</b></entry>
                        <entry><b>200</b></entry>
                        <entry>-2</entry>
                        <entry><b>null</b></entry>
                     </row>
                     <row>
                        <entry>sprocket</entry>
                        <entry>300</entry>
                        <entry>obsolete</entry>
                        <entry>obsolete</entry>
                     </row>
                     <row>
                        <entry><b>gizmo</b></entry>
                        <entry><b>400</b></entry>
                        <entry>-2</entry>
                        <entry><b>null</b></entry>
                     </row>
                     <row>
                        <entry>widget</entry>
                        <entry>208</entry>
                        <entry>4</entry>
                        <entry>6</entry>
                     </row>
                     <row>
                        <entry><b>sproket</b></entry>
                        <entry><b>133</b></entry>
                        <entry>5</entry>
                        <entry><b>null</b></entry>
                     </row>
                     <row>
                        <entry><b>widget</b></entry>
                        <entry><b>16</b></entry>
                        <entry>6</entry>
                        <entry><b>null</b></entry>
                     </row>
                  </tbody>
               </tgroup>
            </table>
            <p>When a row disk with the xmin value of <codeph>-2</codeph> is updated, the xmax value
               is replaced with the transaction XID as usual, and the row on disk is considered
               obsolete after any concurrent transactions that access the row have completed.</p>
            <p>Obsolete rows can be deleted from disk. For Greenplum Database, the
                  <codeph>VACUUM</codeph> command, with <codeph>FULL</codeph> option, does more
               extensive processing to reclaim disk space.</p>
         </section>
         <section id="modulo_calc">
            <title>Example of XID Modulo Calculations</title>
            <p>The next table shows the table data on disk after more <codeph>UPDATE</codeph>
               transactions. The XID values have rolled over and start over at <codeph>0</codeph>.
               No additional <codeph>VACUUM</codeph> operations have been performed.</p>
            <table frame="all" rowsep="1" colsep="1" id="table_itw_yck_wv">
               <title>Example Table with Wrapping XID</title>
               <tgroup cols="4">
                  <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                  <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                  <colspec colname="newCol3" colnum="3" colwidth="1*"/>
                  <colspec colname="newCol4" colnum="4" colwidth="1*"/>
                  <thead>
                     <row>
                        <entry>item</entry>
                        <entry>amount</entry>
                        <entry>xmin</entry>
                        <entry>xmax</entry>
                     </row>
                  </thead>
                  <tbody>
                     <row>
                        <entry>widget</entry>
                        <entry>100</entry>
                        <entry>obsolete</entry>
                        <entry>obsolete</entry>
                     </row>
                     <row>
                        <entry>giblet</entry>
                        <entry>200</entry>
                        <entry>-2</entry>
                        <entry>1</entry>
                     </row>
                     <row>
                        <entry>sprocket</entry>
                        <entry>300</entry>
                        <entry>obsolete</entry>
                        <entry>obsolete</entry>
                     </row>
                     <row>
                        <entry>gizmo</entry>
                        <entry>400</entry>
                        <entry>-2</entry>
                        <entry>9</entry>
                     </row>
                     <row>
                        <entry>widget</entry>
                        <entry>208</entry>
                        <entry>4</entry>
                        <entry>6</entry>
                     </row>
                     <row>
                        <entry><b>sproket</b></entry>
                        <entry><b>133</b></entry>
                        <entry>5</entry>
                        <entry><b>null</b></entry>
                     </row>
                     <row>
                        <entry>widget</entry>
                        <entry>16</entry>
                        <entry>6</entry>
                        <entry>7</entry>
                     </row>
                     <row>
                        <entry><b>widget</b></entry>
                        <entry><b>222</b></entry>
                        <entry>7</entry>
                        <entry><b>null</b></entry>
                     </row>
                     <row>
                        <entry>giblet</entry>
                        <entry>233</entry>
                        <entry>8</entry>
                        <entry>0</entry>
                     </row>
                     <row>
                        <entry><b>gizmo</b></entry>
                        <entry><b>18</b></entry>
                        <entry>9</entry>
                        <entry><b>null</b></entry>
                     </row>
                     <row>
                        <entry>giblet</entry>
                        <entry>88</entry>
                        <entry>0</entry>
                        <entry>1</entry>
                     </row>
                     <row>
                        <entry><b>giblet</b></entry>
                        <entry><b>44</b></entry>
                        <entry>1</entry>
                        <entry><b>null</b></entry>
                     </row>
                  </tbody>
               </tgroup>
            </table>
            <p>When performing the modulo calculations that compare XIDs, Greenplum Database,
               considers the XIDs of the rows and the current range of available XIDs to determine
               if XID wrapping has occurred between row XIDs.</p>
            <p>For the example table XID wrapping has occurred. The XID <codeph>1</codeph> for
               giblet row is a later transaction than the XID <codeph>7</codeph> for widget row
               based on the modulo calculations for XID values even though the XID value
                  <codeph>7</codeph> is larger than <codeph>1</codeph>. </p>
            <p>For the widget and sprocket rows, XID wrapping has not occurred and XID
                  <codeph>7</codeph> is a later transaction than XID <codeph>5</codeph>.</p>
         </section>
      </body>
   </topic>
</topic>
