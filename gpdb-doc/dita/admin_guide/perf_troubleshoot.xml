<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1" xml:lang="en">
    <title id="jc138244">Investigating a Performance Problem</title>
    <shortdesc>This section provides guidelines for identifying and troubleshooting performance
        problems in a Greenplum Database system.</shortdesc>
    <body>
        <p>This topic lists steps you can take to help identify the cause of a performance problem.
            If the problem affects a particular workload or query, you can focus on tuning that
            particular workload. If the performance problem is system-wide, then hardware problems,
            system failures, or resource contention may be the cause.</p>
    </body>
    <topic id="topic2" xml:lang="en">
        <title>Checking System State</title>
        <body>
            <p>Use the <codeph>gpstate</codeph> utility to identify failed segments. A Greenplum
                Database system will incur performance degradation when segment instances are down
                because other hosts must pick up the processing responsibilities of the down
                segments.</p>
            <p>Failed segments can indicate a hardware failure, such as a failed disk drive or
                network card. Greenplum Database provides the hardware verification tool
                    <codeph>gpcheckperf</codeph> to help identify the segment hosts with hardware
                issues.</p>
        </body>
    </topic>
    <topic id="topic3" xml:lang="en">
        <title>Checking Database Activity</title>
        <body>
            <ul>
                <li id="jc155459">
                    <xref href="#topic4" type="topic" format="dita"/>
                </li>
                <li id="jc155467">
                    <xref href="#topic5" type="topic" format="dita"/>
                </li>
                <li id="jc155477">
                    <xref href="#topic6" type="topic" format="dita"/>
                </li>
            </ul>
        </body>
        <topic id="topic4" xml:lang="en">
            <title id="jc152159">Checking for Active Sessions (Workload)</title>
            <body>
                <p>The <i>pg_stat_activity</i> system catalog view shows one row per server process;
                    it shows the database OID, database name, process ID, user OID, user name,
                    current query, time at which the current query began execution, time at which
                    the process was started, client address, and port number. To obtain the most
                    information about the current system workload, query this view as the database
                    superuser. For example:</p>
                <p>
                    <codeblock>SELECT * FROM pg_stat_activity;
</codeblock>
                </p>
                <p>Note that the information does not update instantaneously.</p>
            </body>
        </topic>
        <topic id="topic5" xml:lang="en">
            <title id="jc155367">Checking for Locks (Contention)</title>
            <body>
                <p>The <i>pg_locks</i> system catalog view allows you to see information about
                    outstanding locks. If a transaction is holding a lock on an object, any other
                    queries must wait for that lock to be released before they can continue. This
                    may appear to the user as if a query is hanging. </p>
                <p>Examine <i>pg_locks</i> for ungranted locks to help identify contention between
                    database client sessions. <i>pg_locks</i> provides a global view of all locks in
                    the database system, not only those relevant to the current database. You can
                    join its relation column against <codeph>pg_class.oid</codeph> to identify
                    locked relations (such as tables), but this works correctly only for relations
                    in the current database. You can join the <codeph>pid</codeph> column to the
                        <codeph>pg_stat_activity.pid</codeph> to see more information about the
                    session holding or waiting to hold a lock. For example:</p>
                <p>
                    <codeblock>SELECT locktype, database, c.relname, l.relation, 
l.transactionid, l.pid, l.mode, l.granted, 
a.query 
        FROM pg_locks l, pg_class c, pg_stat_activity a 
        WHERE l.relation=c.oid AND l.pid=a.pid
        ORDER BY c.relname;
</codeblock>
                </p>
                <p>If you use resource groups, queries that are waiting will also show in
                        <i>pg_locks</i>. To see how many queries are waiting to run in a resource
                    group, use the<i> gp_resgroup_status </i>system catalog view. For example:</p>
                <p>
                    <codeblock>SELECT * FROM gp_toolkit.gp_resgroup_status;
</codeblock>
                </p>
                <p>Similarly, if you use resource queues, queries that are waiting in a queue also show in
                        <i>pg_locks</i>. To see how many queries are waiting to run from a resource
                    queue, use the<i> gp_resqueue_status </i>system catalog view. For example:</p>
                <p>
                    <codeblock>SELECT * FROM gp_toolkit.gp_resqueue_status;
</codeblock>
                </p>
            </body>
        </topic>
        <topic id="topic6" xml:lang="en">
            <title id="jc155244">Checking Query Status and System Utilization</title>
            <body>
                <p>You can use system monitoring utilities such as <codeph>ps</codeph>,
                        <codeph>top</codeph>, <codeph>iostat</codeph>, <codeph>vmstat</codeph>,
                        <codeph>netstat</codeph> and so on to monitor database activity on the hosts
                    in your Greenplum Database array. These tools can help identify Greenplum
                    Database processes (<codeph>postgres</codeph> processes) currently running on
                    the system and the most resource intensive tasks with regards to CPU, memory,
                    disk I/O, or network activity. Look at these system statistics to identify
                    queries that degrade database performance by overloading the system and
                    consuming excessive resources. Greenplum Database's management tool
                        <codeph>gpssh</codeph> allows you to run these system monitoring commands on
                    several hosts simultaneously.</p>
                <p>You can create and use the Greenplum Database
                        <i>session_level_memory_consumption</i> view that provides information about
                    the current memory utilization and idle time for sessions that are running
                    queries on Greenplum Database. For information about the view, see <xref
                        href="managing/monitor.xml#topic_slt_ddv_1q"/>.</p>
                <p>You can enable a dedicated database, <codeph>gpperfmon</codeph>, in which data
                    collection agents running on each segment host save query and system utilization
                    metrics. Refer to the <codeph>gpperfmon_install</codeph> management utility
                    reference in the <cite>Greenplum Database Management Utility Reference
                        Guide</cite> for help creating the <codeph>gpperfmon</codeph> database and
                    managing the agents. See documentation for the tables and views in the
                        <codeph>gpperfmon</codeph> database in the <cite>Greenplum Database
                        Reference Guide</cite>.</p>
                <p otherprops="pivotal">The optional Greenplum Command Center web-based user
                    interface graphically displays query and system utilization metrics saved in the
                        <codeph>gpperfmon</codeph> database. See the <xref
                        href="https://gpcc.docs.pivotal.io" format="html" scope="external">Greenplum
                        Command Center Documentation</xref> web site for procedures to enable
                    Greenplum Command Center.</p>
            </body>
        </topic>
    </topic>
    <topic id="topic7" xml:lang="en">
        <title id="jc155206">Troubleshooting Problem Queries</title>
        <body>
            <p>If a query performs poorly, look at its query plan to help identify problems. The
                    <codeph>EXPLAIN</codeph> command shows the query plan for a given query. See
                    <xref href="query/topics/query-profiling.xml#topic39"/> for more information
                about reading query plans and identifying problems.</p>
            <p>When an out of memory event occurs during query execution, the Greenplum Database
                memory accounting framework reports detailed memory consumption of every query
                running at the time of the event. The information is written to the Greenplum
                Database segment logs. </p>
        </body>
    </topic>
    <topic id="topic8" xml:lang="en">
        <title id="jc155511">Investigating Error Messages</title>
        <body>
            <p>Greenplum Database log messages are written to files in the <codeph>pg_log</codeph>
                directory within the master's or segment's data directory. Because the master log
                file contains the most information, you should always check it first. Log files roll
                over daily and use the naming convention:
                        <codeph>gpdb-</codeph><i><codeph>YYYY</codeph></i><codeph>-</codeph><i><codeph>MM</codeph></i><codeph>-</codeph><i><codeph>DD_hhmmss.csv</codeph></i>.
                To locate the log files on the master host:</p>
            <p>
                <codeblock>$ cd $MASTER_DATA_DIRECTORY/pg_log
</codeblock>
            </p>
            <p>Log lines have the format of:</p>
            <codeblock><i>timestamp</i> | <i>user</i> | <i>database</i> | <i>statement_id</i> | <i>con#</i><i>cmd#</i> 
|:-<i>LOG_LEVEL</i>: <i>log_message
</i></codeblock>
            <p>You may want to focus your search for <codeph>WARNING</codeph>,
                    <codeph>ERROR</codeph>, <codeph>FATAL</codeph> or <codeph>PANIC</codeph> log
                level messages. You can use the Greenplum utility <codeph>gplogfilter</codeph> to
                search through Greenplum Database log files. For example, when you run the following
                command on the master host, it checks for problem log messages in the standard
                logging locations:</p>
            <p>
                <codeblock>$ gplogfilter -t
</codeblock>
            </p>
            <p>To search for related log entries in the segment log files, you can run
                    <codeph>gplogfilter</codeph> on the segment hosts using <codeph>gpssh</codeph>.
                You can identify corresponding log entries by the
                    <i><codeph>statement_id</codeph></i> or
                    <i><codeph>con</codeph></i><codeph>#</codeph> (session identifier). For example,
                to search for log messages in the segment log files containing the string
                    <codeph>con6</codeph> and save output to a file:</p>
            <p>
                <codeblock>gpssh -f seg_hosts_file -e 'source 
/usr/local/greenplum-db/greenplum_path.sh ; gplogfilter -f 
con6 /gpdata/*/pg_log/gpdb*.csv' &gt; seglog.out
</codeblock>
            </p>
        </body>
        <topic id="topic9" xml:lang="en" otherprops="pivotal">
            <title id="jc155267">Gathering Information for Pivotal Customer Support</title>
            <body>
                <p>The Greenplum Magic Tool (GPMT) utility can run diagnostics and collect
                    information from a Greenplum Database system. You can then send the information
                    to Pivotal Customer Support to aid the diagnosis of Greenplum Database errors or
                    system failures.</p>
                <p>The GPMT utility is available from the <xref
                        href="https://discuss.pivotal.io/hc/en-us/categories/200072608-Pivotal-Greenplum-Knowledge-Base"
                        format="html" scope="external">Pivotal Knowledge Base</xref> on the <xref
                        href="https://discuss.pivotal.io/hc/en-us/articles/217546277-Greenplum-Magic-Tool-GPMT-"
                        format="html" scope="external">GPMT</xref> page.</p>
            </body>
        </topic>
    </topic>
</topic>
