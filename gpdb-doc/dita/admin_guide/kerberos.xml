<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1" xml:lang="en">
  <title id="nr110126">Using Kerberos Authentication</title>
  <shortdesc>You can control access to Greenplum Database with a Kerberos authentication server. </shortdesc>
  <body>
    <p>Greenplum Database supports the Generic Security Service Application
      Program Interface (GSSAPI) with Kerberos authentication. GSSAPI provides
      automatic authentication (single sign-on) for systems that support it. You
      specify the Greenplum Database users (roles) that require Kerberos
      authentication in the Greenplum Database configuration file
        <filepath>pg_hba.conf</filepath>. The login fails if Kerberos
      authentication is not available when a role attempts to log in to
      Greenplum Database.</p>
    <p>Kerberos provides a secure, encrypted authentication service. It does not encrypt data
      exchanged between the client and database and provides no authorization services. To encrypt
      data exchanged over the network, you must use an SSL connection. To manage authorization for
      access to Greenplum databases and objects such as schemas and tables, you use settings in the
        <filepath>pg_hba.conf</filepath> file and privileges given to Greenplum Database users and
      roles within the database. For information about managing authorization privileges, see <xref
        href="roles_privs.xml#topic1" type="topic" format="dita"/>.</p>
    <p>For more information about Kerberos, see <xref href="http://web.mit.edu/kerberos/"
        format="html">http://web.mit.edu/kerberos/</xref>.</p>
    <section id="kerberos_prereq">
      <title id="nr159116">Prerequisites</title>
      <p>Before configuring Kerberos authentication for Greenplum Database,
        ensure that:</p>
      <ul id="ul_ojr_rvj_2p">
        <li id="nr157373">You can identify the KDC server you use for Kerberos
          authentication and the Kerberos realm for your Greenplum Database
            system.<ul id="ul_cn2_nfc_c2b">
            <li>If you plan to use an MIT Kerberos KDC server but have not yet
              configured it, see <xref href="#task_setup_kdc" format="dita"/>
              for example instructions.</li>
            <li>If you are using an existing Active Directory KDC server, also
              ensure that you have:<ul id="ul_oq5_tfc_c2b">
                <li>Installed all Active Directory service roles on your AD KDC
                  server.</li>
                <li>Enabled the LDAP service.</li>
              </ul></li>
          </ul></li>
        <li>System time on the Kerberos Key Distribution Center (KDC) server and
          Greenplum Database master is synchronized. (For example, install the
            <codeph>ntp</codeph> package on both servers.) </li>
        <li id="nr163891">Network connectivity exists between the KDC server and
          the Greenplum Database master host. </li>
        <li id="nr166917">Java 1.7.0_17 or later is installed on all Greenplum
          Database hosts. Java 1.7.0_17 is required to use
          Kerberos-authenticated JDBC on Red Hat Enterprise Linux 6.x or
          7.x.</li>
       </ul>
    </section>
    <section id="nr166539">
      <title>Procedure</title>
      <p>Following are the tasks to complete to set up Kerberos authentication for
        Greenplum Database.</p>
      <ul>
        <li><xref href="#task_m43_vwl_2p" format="dita"/></li>
        <li><xref href="#topic6" format="dita"/></li>
        <li id="nr165111"><xref href="#topic7" format="dita"/></li>
        <li><xref href="#topic_kmr_gws_d2b" format="dita"/></li>
        <li><xref href="#topic9" format="dita"/></li>
        <li><xref href="kerberos-win-client.xml#topic_vjg_d5m_sv" format="dita"
          /></li>
        <li><xref href="kerberos-win-client.xml#topic_uzb_t5m_sv" format="dita"
          /></li>
      </ul>
    </section>
  </body>
  <topic id="task_m43_vwl_2p">
    <title>Creating Greenplum Database Principals in the KDC Database</title>
    <body>
      <p>Create a service principal for the Greenplum Database service and a
        Kerberos admin principal that allows managing the KDC database as the
        gpadmin user. </p>
      <ol id="steps_gq5_hzl_2p">
        <li>Log in to the Kerberos KDC server as the root user.
          <codeblock>$ ssh root@&lt;kdc-server></codeblock></li>
        <li>Create a principal for the Greenplum Database service.
            <codeblock># kadmin.local -q "addprinc -randkey postgres/mdw@GPDB.KRB"</codeblock><p>The
              <codeph>-randkey</codeph> option prevents the command from
            prompting for a password.</p><p>The <codeph>postgres</codeph> part
            of the principal names matches the value of the Greenplum Database
              <codeph>krb_srvname</codeph> server configuration parameter, which
            is <codeph>postgres</codeph> by default.</p><p>The host name part of
            the principal name must match the output of the
              <codeph>hostname</codeph> command on the Greenplum Database master
            host. If the <codeph>hostname</codeph> command shows the fully
            qualified domain name (FQDN), use it in the principal name, for
            example <codeph>postgres/mdw.example.com@GPDB.KRB</codeph>.
            </p><p>The <codeph>GPDB.KRB</codeph> part of the principal name is
            the Kerberos realm name.</p></li>
        <li>Create a principal for the gpadmin/admin role.
            <codeblock># kadmin.local -q "addprinc gpadmin/admin@GPDB.KRB"</codeblock><p>This
            principal allows you to manage the KDC database when you are logged
            in as gpadmin. Make sure that the Kerberos <codeph>kadm.acl</codeph>
            configuration file contains an ACL to grant permissions to this
            principal. For example, this ACL grants all permissions to any admin
            user in the GPDB.KRB realm.
            <codeblock>*/admin@GPDB.KRB *</codeblock></p></li>
        <li> Create a keytab file with <codeph>kadmin.local</codeph>. The
          following example creates a keytab file
            <codeph>gpdb-kerberos.keytab</codeph> in the current directory with
          authentication information for the Greenplum Database service
          principal and the gpadmin/admin principal.
          <codeblock># kadmin.local -q "ktadd -k gpdb-kerberos.keytab postgres/mdw@GPDB.KRB gadmin/admin@GPDB.KRB"</codeblock></li>
        <li>Copy the keytab file to the master host.
          <codeblock># scp gpdb-kerberos.keytab gpadmin@mdw:~</codeblock></li>
      </ol>
    </body>
  </topic>
  <topic id="topic6">
    <title id="nr162022">Installing the Kerberos Client on the Master
      Host</title>
    <body>
      <p>Install the Kerberos client utilities and libraries on the
        Greenplum Database master.</p>
      <ol id="steps_ikn_z1l_d2b">
        <li id="nr162024">
         Install the Kerberos packages on the Greenplum Database master.
            <codeblock>$ sudo yum install krb5-libs krb5-workstation</codeblock>
        </li>
        <li id="nr162025"> Copy the  <codeph>/etc/krb5.conf</codeph> file from
          the KDC server to <codeph>/etc/krb5.conf</codeph> on the Greenplum
          Master host. </li>
      </ol>
    </body>
  </topic>
  <topic id="topic7" xml:lang="en">
    <title id="nr157582">Configuring Greenplum Database to use Kerberos
      Authentication</title>
    <body>
      <p>Configure Greenplum Database to use Kerberos.</p>
      <ol id="steps_mhd_l3w_c2b">
        <li>Log in to the Greenplum Database master host as the gpadmin user.
            <codeblock>$ ssh gpadmin@&lt;master>
$ source /usr/local/greenplum-db/greenplum_path.sh</codeblock>          
        </li>
        <li>Set the ownership and permissions of the keytab file you copied
            from the KDC server.
            <codeblock>$ chown gpadmin:gpadmin /home/gpadmin/gpdb-kerberos.keytab
$ chmod 400 /home/gpadmin/gpdb-kerberos.keytab</codeblock>         
        </li>
        <li id="nr157586">Configure the location of the keytab file by setting the
            Greenplum Database <codeph>krb_server_keyfile</codeph> server
            configuration parameter. This <codeph>gpconfig</codeph> command
            specifies the folder <filepath>/home/gpadmin</filepath> as the
            location of the keytab file
              <filepath>gpdb-kerberos.keytab</filepath>.
            <codeblock>$ gpconfig -c krb_server_keyfile -v  '/home/gpadmin/gpdb-kerberos.keytab'</codeblock>         
        </li>
        <li id="nr157589">Modify the Greenplum Database file <codeph>pg_hba.conf</codeph>
            to enable Kerberos support. For example, adding the following line
            to <codeph>pg_hba.conf</codeph> adds GSSAPI and Kerberos
            authentication support for connection requests from all users and
            hosts on the same network to all Greenplum Database databases. 
            <codeblock>host all all 0.0.0.0/0 gss include_realm=0 krb_realm=GPDB.KRB</codeblock>
          
          <p>Setting the <codeph>krb_realm</codeph> option to a realm name
            ensures that only users from that realm can successfully
            authenticate with Kerberos. Setting the
              <codeph>include_realm</codeph> option to <codeph>0</codeph>
            excludes the realm name from the authenticated user name. For
            information about the <codeph>pg_hba.conf</codeph> file, see <xref
              href="https://www.postgresql.org/docs/9.4/auth-pg-hba-conf.html"
              scope="external" format="html">The pg_hba.conf file</xref> in the
            PostgreSQL documentation.</p>
        </li>
        <li>Restart Greenplum Database after updating the
              <codeph>krb_server_keyfile</codeph> parameter and the
              <codeph>pg_hba.conf</codeph> file.
            <codeblock>$ gpstop -ar</codeblock>         
        </li>
        <li>Create the gpadmin/admin Greenplum Database superuser role.
            <codeblock>$ createuser gpadmin/admin
Shall the new role be a superuser? (y/n) y</codeblock>         
          <p>The Kerberos keys for this database role are in the keyfile you
            copied from the KDC server.</p>
        </li>
        <li id="nr166157">Create a ticket using <codeph>kinit</codeph> and show the tickets
            in the Kerberos ticket cache with <codeph>klist</codeph>.
            <codeblock>$ LD_LIBRARY_PATH= kinit -k -t /home/gpadmin/gpdb-kerberos.keytab gpadmin/admin@GPDB.KRB
$ LD_LIBRARY_PATH= klist
Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: gpadmin/admin@GPDB.KRB

Valid starting       Expires              Service principal
06/13/2018 17:37:35  06/14/2018 17:37:35  krbtgt/GPDB.KRB@GPDB.KRB</codeblock>
            <note>When you set up the Greenplum Database environment by sourcing
              the <codeph>greenplum-db_path.sh</codeph> script, the
                <codeph>LD_LIBRARY_PATH</codeph> environment variable is set to
              include the Greenplum Database <codeph>lib</codeph> directory,
              which includes Kerberos libraries. This may cause Kerberos utility
              commands such as <codeph>kinit</codeph> and
                <codeph>klist</codeph> to fail due to version conflicts. The
              solution is to run Kerberos utilities before you source the
                <codeph>greenplum-db_path.sh</codeph> file or temporarily unset
              the <codeph>LD_LIBRARY_PATH</codeph> variable when you execute
              Kerberos utilities, as shown in the example.</note>         
        </li>
        <li id="nr166158">As a test, log in to the postgres database with the
            <codeph>gpadmin/admin</codeph> role: <codeblock>$ psql -U "gpadmin/admin" -h mdw postgres
psql (9.4.20)
Type "help" for help.

postgres=# select current_user;
 current_user
---------------
 gpadmin/admin
(1 row)</codeblock>
          <note>When you start <codeph>psql</codeph> on the master host, you
            must include the <codeph>-h &lt;master-hostname></codeph> option to
            force a TCP connection because Kerberos authentication does not work
            with local connections.</note>
        </li>
      </ol>
      <p>If a Kerberos principal is not a Greenplum Database
        user, a message similar to the following is displayed from the
        <codeph>psql</codeph> command line when the user attempts to log in to
        the database:
        <codeblock>psql: krb5_sendauth: Bad response</codeblock></p>
      <p>The
        principal must be added as a Greenplum Database user.</p>
    </body>
  </topic>
  <topic id="topic_kmr_gws_d2b">
    <title>Mapping Kerberos Principals to Greenplum Database Roles</title>
    <body>
      <p>To connect to a Greenplum Database system with Kerberos authentication
        enabled, a user first requests a ticket-granting ticket from the KDC
        server using the <codeph>kinit</codeph> utility with a password or a
        keytab file provided by the Kerberos admin. When the user then connects
        to the Kerberos-enabled Greenplum Database system, the user's Kerberos
        principle name will be the Greenplum Database role name, subject to
        transformations specified in the options field of the
          <codeph>gss</codeph> entry in the Greenplum Database
          <codeph>pg_hba.conf</codeph> file:</p>
      <ul id="ul_hzh_rjw_22b">
        <li>If the <codeph>krb_realm=&lt;realm></codeph> option is present,
          Greenplum Database only accepts Kerberos principals who are members pf
          the specified realm. </li>
        <li>If the <codeph>include_realm=0</codeph> option is specified, the
          Greenplum Database role name is the Kerberos principal name without
          the Kerberos realm. If the <codeph>include_realm=1</codeph> option is
          instead specified, the Kerberos realm is not stripped from the
          Greenplum Database rolename. The role must have been created with the
          Greenplum Database <codeph>CREATE ROLE</codeph> command.</li>
        <li>If the <codeph>map=&lt;map-name></codeph> option is specified, the
          Kerberos principal name is compared to entries labeled with the
          specified <codeph>&lt;map-name></codeph> in the
            <codeph>$MASTER_DATA_DIRECTORY/pg_ident.conf</codeph> file and
          replaced with the Greenplum Database role name specified in the first
          matching entry.</li>
      </ul>
      <p>A user name map is defined in the
          <codeph>$MASTER_DATA_DIRECTORY/pg_ident.conf</codeph> configuration
        file. This example defines a map named <codeph>mymap</codeph> with two
        entries.</p>
      <p>
        <codeblock>
# MAPNAME   SYSTEM-USERNAME        GP-USERNAME
mymap       /^admin@GPDB.KRB$      gpadmin
mymap       /^(.*)_gp)@GPDB.KRB$   \1</codeblock>
      </p>
      <p>The map name is specified in the <codeph>pg_hba.conf</codeph> Kerberos
        entry in the options field:</p>
      <p>
        <codeblock>host all all 0.0.0.0/0 gss include_realm=0 krb_realm=GPDB.KRB map=mymap</codeblock>
      </p>
      <p>The first map entry matches the Kerberos principal admin@GPDB.KRB and
        replaces it with the Greenplum Database gpadmin role name. The second
        entry uses a wildcard to match any Kerberos principal in the GPDB-KRB
        realm with a name ending with the characters <codeph>_gp</codeph> and
        replaces it with the initial portion of the principal name. Greenplum
        Database applies the first matching map entry in the
          <codeph>pg_ident.conf</codeph> file, so the order of entries is
        significant.</p>
      <p>For more information about using username maps see <xref
          href="https://www.postgresql.org/docs/9.4/auth-username-maps.html"
          scope="external" format="html">Username maps</xref> in the PostgreSQL
        documentation.</p>
    </body>
  </topic>
  <topic id="topic9" xml:lang="en">
    <title id="nr168681">Configuring JDBC Kerberos Authentication for Greenplum
      Database</title>
    <shortdesc>Enable Kerberos-authenticated JDBC access to Greenplum
      Database.</shortdesc>
    <body>
      <p>You can configure Greenplum Database to use Kerberos to run
        user-defined Java functions. </p>
      <ol id="steps_tj3_q3w_c2b">
        <li>
          <p id="nr161502">Ensure that Kerberos is installed and configured on
            the Greenplum Database master. See <xref href="#topic6" type="task"
              format="dita"/>.</p>
        </li>
        <li>
          <p id="nr161503">Create the file
              <filepath>.java.login.config</filepath> in the folder
              <codeph>/home/gpadmin</codeph> and add the following text to the
            file:</p>
            <codeblock>pgjdbc {
  com.sun.security.auth.module.Krb5LoginModule required
  doNotPrompt=true
  useTicketCache=true
  debug=true
  client=true;
};</codeblock>         
        </li>
        <li id="nr157728">
          <p>Create a Java application that connects to Greenplum Database
            using Kerberos authentication. The following example database
            connection URL uses a PostgreSQL JDBC driver and specifies
            parameters for Kerberos authentication:</p>
            <codeblock>jdbc:postgresql://mdw:5432/mytest?kerberosServerName=postgres
&amp;jaasApplicationName=pgjdbc&amp;user=gpadmin/gpdb-kdc</codeblock>        
          <p>The parameter names and values specified depend on how the Java
            application performs Kerberos authentication.</p>
        </li>
        <li id="nr157717">
          <p>Test the Kerberos login by running a sample Java application from
            Greenplum Database.</p>
        </li>
      </ol>
    </body>
  </topic>
  <topic id="task_setup_kdc">
    <title>Installing and Configuring a Kerberos KDC Server</title>
    <shortdesc>Steps to set up a Kerberos Key Distribution Center (KDC) server
      on a Red Hat Enterprise Linux host for use with Greenplum
      Database.</shortdesc>
    <body>
      <p>If you do not already have a KDC, follow these steps to install
        and configure a KDC server on a Red Hat Enterprise Linux host with a
          <codeph>GPDB.KRB</codeph> realm. The host name of the KDC server in
        this example is gpdb-kdc.</p>
      <ol id="steps_r5w_rtc_2p">
        <li>Install the Kerberos server and client
          packages:<codeblock>$ sudo yum install krb5-libs krb5-server krb5-workstation</codeblock></li>
        <li>Edit the <filepath>/etc/krb5.conf</filepath> configuration file. The
          following example shows a Kerberos server configured with a default
            <codeph>GPDB.KRB</codeph> realm.
            <codeblock>[logging]
 default = FILE:/var/log/krb5libs.log
 kdc = FILE:/var/log/krb5kdc.log
 admin_server = FILE:/var/log/kadmind.log

[libdefaults]
 default_realm = GPDB.KRB
 dns_lookup_realm = false
 dns_lookup_kdc = false
 ticket_lifetime = 24h
 renew_lifetime = 7d
 forwardable = true
 default_tgs_enctypes = aes128-cts des3-hmac-sha1 des-cbc-crc des-cbc-md5
 default_tkt_enctypes = aes128-cts des3-hmac-sha1 des-cbc-crc des-cbc-md5
 permitted_enctypes = aes128-cts des3-hmac-sha1 des-cbc-crc des-cbc-md5

[realms]
 GPDB.KRB = {
  kdc = gpdb-kdc:88
  admin_server = gpdb-kdc:749
  default_domain = gpdb.krb
 }

[domain_realm]
 .gpdb.krb = GPDB.KRB
 gpdb.krb = GPDB.KRB

[appdefaults]
 pam = {
    debug = false
    ticket_lifetime = 36000
    renew_lifetime = 36000
    forwardable = true
    krb4_convert = false
 }
</codeblock><p>The
              <codeph>kdc</codeph> and <codeph>admin_server</codeph> keys in the
              <codeph>[realms]</codeph> section specify the host
              (<codeph>gpdb-kdc</codeph>) and port where the Kerberos server is
            running. IP numbers can be used in place of host names. </p><p>If
            your Kerberos server manages authentication for other realms, you
            would instead add the <codeph>GPDB.KRB</codeph> realm in the
              <codeph>[realms]</codeph> and <codeph>[domain_realm]</codeph>
            section of the <codeph>kdc.conf</codeph> file. See the <xref
              href="http://web.mit.edu/kerberos/krb5-latest/doc/" format="html"
              scope="external">Kerberos documentation</xref> for information
            about the <codeph>kdc.conf</codeph> file.</p></li>
        <li>To create the Kerberos database, run the <codeph>kdb5_util</codeph>.
            <codeblock># kdb5_util create -s</codeblock><p>The
              <codeph>kdb5_util</codeph>
            <option>create</option> command creates the database to store keys
            for the Kerberos realms that are managed by this KDC server. The
              <option>-s</option> option creates a stash file. Without the stash
            file, every time the KDC server starts it requests a
          password.</p></li>
        <li>Add an administrative user to the KDC database with the
            <codeph>kadmin.local</codeph> utility. Because it does not itself
          depend on Kerberos authentication, the <codeph>kadmin.local</codeph>
          utility allows you to add an initial administrative user to the local
          Kerberos server. To add the user <codeph>gpadmin</codeph> as an
          administrative user to the KDC database, run the following
            command:<codeblock># kadmin.local -q "addprinc gpadmin/admin"</codeblock><p>Most
            users do not need administrative access to the Kerberos server. They
            can use <codeph>kadmin</codeph> to manage their own principals (for
            example, to change their own password). For information about
              <codeph>kadmin</codeph>, see the <xref
              href="http://web.mit.edu/kerberos/krb5-latest/doc/" format="html"
              scope="external">Kerberos documentation</xref>. </p></li>
        <li>If needed, edit the
            <filepath>/var/kerberos/krb5kdc/kadm5.acl</filepath> file to grant
          the appropriate permissions to <codeph>gpadmin</codeph>.</li>
        <li>Start the Kerberos
          daemons:<codeblock># /sbin/service krb5kdc start#
/sbin/service kadmin start</codeblock></li>
        <li>To start Kerberos automatically upon
          restart:<codeblock># /sbin/chkconfig krb5kdc on
# /sbin/chkconfig kadmin on</codeblock></li>
      </ol>
    </body>
  </topic>
</topic>
