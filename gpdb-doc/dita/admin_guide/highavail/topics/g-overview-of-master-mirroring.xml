<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic4">
    <title>Overview of Master Mirroring</title>
    <body>
        <p>You can deploy a backup or mirror of the master instance on a separate host machine. The
            backup master instance, called the <i>standby master</i>, serves as a warm standby if
            the primary master becomes nonoperational. You create a standby master from the primary
            master while the primary is online. </p>
        <p>When you enable master mirroring for an existing system, the primary master continues to
            provide service to users while a snapshot of the primary master instance is taken. While
            the snapshot is taken and deployed on the standby master, changes to the primary master
            are also recorded. After the snapshot has been deployed on the standby master, the
            standby master is synchronized and kept current using Write-Ahead Logging (WAL)-based
            streaming replication. Greenplum Database WAL replication uses the
                <codeph>walsender</codeph> and <codeph>walreceiver</codeph> replication processes.
            The <codeph>walsender</codeph> process is a primary master process. The
                <codeph>walreceiver</codeph> is a standby master process. </p>
        <fig id="ki155262">
            <title>Master Mirroring in Greenplum Database</title>
            <image href="../../graphics/standby_master.jpg" placement="break" width="271px"
                height="165px" id="image_xrf_qpw_2fb"/>
        </fig>
        <p>Since the master does not house user data, only system catalog tables are synchronized
            between the primary and standby masters. When these tables are updated, the replication
            logs that capture the changes are streamed to the standby master to keep it current with
            the primary. During WAL replication, all database modifications are written to
            replication logs before being applied, to ensure data integrity for any in-process
            operations. </p>
        <p>This is how Greenplum Database handles a master failure. <ul id="ul_lf2_br4_3fb">
                <li>If the primary master fails, the Greenplum Database system shuts down and the
                    master replication process stops. The administrator runs the
                        <codeph>gpactivatestandby</codeph> utility to have the standby master take
                    over as the new primary master. Upon activation of the standby master, the
                    replicated logs reconstruct the state of the primary master at the time of the
                    last successfully committed transaction. The activated standby master then
                    functions as the Greenplum Database master, accepting connections on the port
                    specified when standby master was initialized. See <xref
                        href="g-recovering-a-failed-master.xml#topic16"/>.</li>
                <li>If the standby master fails or becomes inaccessible while the primary master is
                    active, the primary master tracks database changes in logs that are applied to
                    the standby master when it is recovered.</li>
            </ul></p>
        <p>These Greenplum Database system catalog tables contain mirroring and replication
            information. <ul id="ul_tfw_btw_2fb">
                <li>The catalog table <codeph><xref
                            href="../../../ref_guide/system_catalogs/gp_segment_configuration.xml#topic1"
                        /></codeph> contains the current configuration and state of primary and
                    mirror segment instances and the master and standby master instance.</li>
                <li>The catalog view <codeph><xref
                            href="../../../ref_guide/system_catalogs/gp_stat_replication.xml#topic1"
                        /></codeph> contains replication statistics of the
                        <codeph>walsender</codeph> processes that are used for Greenplum Database
                    master and segment mirroring.</li>
            </ul></p>
    </body>
</topic>
