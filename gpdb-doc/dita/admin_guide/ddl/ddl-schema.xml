<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_ivc_qvy_sp">
  <title id="im177965">Creating and Managing Schemas</title>
  <body>
    <p>Schemas logically organize objects and data in a database. Schemas allow you to have more
      than one object (such as tables) with the same name in the database without conflict if the
      objects are in different schemas.</p>
  </body>
  <topic id="topic18" xml:lang="en">
    <title>The Default "Public" Schema</title>
    <body>
      <p>Every database has a default schema named <i>public</i>. If you do not create any schemas,
        objects are created in the <i>public</i> schema. All database roles (users) have
          <codeph>CREATE</codeph> and <codeph>USAGE</codeph> privileges in the <i>public</i> schema.
        When you create a schema, you grant privileges to your users to allow access to the
        schema.</p>
    </body>
  </topic>
  <topic id="topic19" xml:lang="en">
    <title>Creating a Schema</title>
    <body>
      <p>Use the <codeph>CREATE SCHEMA</codeph> command to create a new schema. For example:</p>
      <p>
        <codeblock>=&gt; CREATE SCHEMA myschema;
</codeblock>
      </p>
      <p>To create or access objects in a schema, write a qualified name consisting of the schema
        name and table name separated by a period. For example:</p>
      <p>
        <codeblock>myschema.table
</codeblock>
      </p>
      <p>See <xref href="#topic20" type="topic" format="dita"/> for information about accessing a
        schema.</p>
      <p>You can create a schema owned by someone else, for example, to restrict the activities of
        your users to well-defined namespaces. The syntax is:</p>
      <p>
        <codeblock>=&gt; CREATE SCHEMA <codeph>schemaname</codeph> AUTHORIZATION <codeph>username</codeph>;
</codeblock>
      </p>
    </body>
  </topic>
  <topic id="topic20" xml:lang="en">
    <title id="im142167">Schema Search Paths</title>
    <body>
      <p>To specify an object's location in a database, use the schema-qualified name. For
        example:</p>
      <p>
        <codeblock>=&gt; SELECT * FROM myschema.mytable;
</codeblock>
      </p>
      <p>You can set the <codeph>search_path</codeph> configuration parameter to specify the order
        in which to search the available schemas for objects. The schema listed first in the search
        path becomes the <i>default</i> schema. If a schema is not specified, objects are created in
        the default schema.</p>
    </body>
    <topic id="topic21" xml:lang="en">
      <title>Setting the Schema Search Path</title>
      <body>
        <p>The <codeph>search_path</codeph> configuration parameter sets the schema search order.
          The <codeph>ALTER DATABASE</codeph> command sets the search path. For example:</p>
        <p>
          <codeblock>=&gt; ALTER DATABASE mydatabase SET search_path TO myschema, 
public, pg_catalog;
</codeblock>
        </p>
        <p>You can also set <codeph>search_path</codeph> for a particular role (user) using the
            <codeph>ALTER ROLE</codeph> command. For example:</p>
        <p>
          <codeblock>=&gt; ALTER ROLE sally SET search_path TO myschema, public, 
pg_catalog;
</codeblock>
        </p>
      </body>
    </topic>
    <topic id="topic22" xml:lang="en">
      <title>Viewing the Current Schema</title>
      <body>
        <p>Use the <codeph>current_schema()</codeph> function to view the current schema. For
          example:</p>
        <p>
          <codeblock>=&gt; SELECT current_schema();
</codeblock>
        </p>
        <p>Use the <codeph>SHOW</codeph> command to view the current search path. For example:</p>
        <p>
          <codeblock>=&gt; SHOW search_path;
</codeblock>
        </p>
      </body>
    </topic>
  </topic>
  <topic id="topic23" xml:lang="en">
    <title>Dropping a Schema</title>
    <body>
      <p>Use the <codeph>DROP SCHEMA</codeph> command to drop (delete) a schema. For example:</p>
      <p>
        <codeblock>=&gt; DROP SCHEMA myschema;
</codeblock>
      </p>
      <p>By default, the schema must be empty before you can drop it. To drop a schema and all of
        its objects (tables, data, functions, and so on) use:</p>
      <p>
        <codeblock>=&gt; DROP SCHEMA myschema CASCADE;
</codeblock>
      </p>
    </body>
  </topic>
  <topic id="topic24" xml:lang="en">
    <title>System Schemas</title>
    <body>
      <p>The following system-level schemas exist in every database:</p>
      <ul id="ul_zwq_qvy_sp">
        <li id="im141362"><codeph>pg_catalog</codeph> contains the system catalog tables, built-in
          data types, functions, and operators. It is always part of the schema search path, even if
          it is not explicitly named in the search path.</li>
        <li id="im141363"><codeph>information_schema</codeph> consists of a standardized set of
          views that contain information about the objects in the database. These views get system
          information from the system catalog tables in a standardized way.</li>
        <li id="im141364"><codeph>pg_toast</codeph> stores large objects such as records that exceed
          the page size. This schema is used internally by the Greenplum Database
          system. </li>
        <li id="im141879"><codeph>pg_bitmapindex</codeph> stores bitmap index objects such as lists
          of values. This schema is used internally by the Greenplum Database
          system.</li>
        <li id="im180766"><codeph>pg_aoseg</codeph> stores append-optimized table objects. This
          schema is used internally by the Greenplum Database system.</li>
        <li id="im180819"><codeph>gp_toolkit</codeph> is an administrative schema that contains
          external tables, views, and functions that you can access with SQL commands. All database
          users can access <codeph>gp_toolkit</codeph> to view and query the system log files and
          other system metrics.</li>
      </ul>
    </body>
  </topic>
</topic>
