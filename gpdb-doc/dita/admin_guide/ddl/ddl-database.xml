<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1" xml:lang="en">
  <title id="im140249">Creating and Managing Databases</title>
  <body>
    <p>A Greenplum Database system is a single instance of Greenplum Database. There can be several
      separate Greenplum Database systems installed, but usually just one is selected by environment
      variable settings. See your Greenplum administrator for details.</p>
    <p>There can be multiple databases in a Greenplum Database system. This is different from some
      database management systems (such as Oracle) where the database instance <i>is</i> the
      database. Although you can create many databases in a Greenplum system, client programs can
      connect to and access only one database at a time â€” you cannot cross-query between
      databases.</p>
  </body>
  <topic id="topic3" xml:lang="en">
    <title id="im140508">About Template and Default Databases</title>
    <body>
      <p>Greenplum Database provides some template databases and a default database,
          <i>template1</i>, <i>template0</i>, and <i>postgres</i>.</p>
      <p>By default, each new database you create is based on a <i>template</i> database. Greenplum
        Database uses <i>template1</i> to create databases unless you specify another template.
        Creating objects in <i>template1</i> is not recommended. The objects will be in every
        database you create using the default template database. </p>
      <p>Greenplum Database uses another database template, <i>template0</i>, internally. Do not
        drop or modify <i>template0</i>. You can use <i>template0</i> to create a completely clean
        database containing only the standard objects predefined by Greenplum Database at
        initialization.</p>
      <p>You can use the <i>postgres</i> database to connect to Greenplum Database for the first time.
        Greenplum Database uses <i>postgres</i> as the default database for administrative
        connections. For example, <i>postgres</i> is used by startup processes, the Global Deadlock
        Detector process, and the FTS (Fault Tolerance Server) process for catalog access.</p>
    </body>
  </topic>
  <topic id="topic4" xml:lang="en">
    <title>Creating a Database</title>
    <body>
      <p>The <codeph>CREATE DATABASE</codeph> command creates a new database. For example:</p>
      <p>
        <codeblock>=&gt; CREATE DATABASE <i>new_dbname</i>;</codeblock>
      </p>
      <p>To create a database, you must have privileges to create a database or be a Greenplum
        Database superuser. If you do not have the correct privileges, you cannot create a database.
        Contact your Greenplum Database administrator to either give you the necessary privilege or
        to create a database for you.</p>
      <p>You can also use the client program <codeph>createdb</codeph> to create a database. For
        example, running the following command in a command line terminal connects to Greenplum
        Database using the provided host name and port and creates a database named
          <i>mydatabase</i>:</p>
      <p>
        <codeblock>$ createdb -h masterhost -p 5432 mydatabase</codeblock>
      </p>
      <p>The host name and port must match the host name and port of the installed Greenplum
        Database system.</p>
      <p>Some objects, such as roles, are shared by all the databases in a Greenplum Database
        system. Other objects, such as tables that you create, are known only in the database in
        which you create them.</p>
      <note type="warning">The <codeph>CREATE DATABASE</codeph> command is not transactional.</note>
    </body>
    <topic id="topic5" xml:lang="en">
      <title>Cloning a Database</title>
      <body>
        <p>By default, a new database is created by cloning the standard system database template,
            <i>template1</i>. Any database can be used as a template when creating a new database,
          thereby providing the capability to 'clone' or copy an existing database and all objects
          and data within that database. For example:</p>
        <p>
          <codeblock>=&gt; CREATE DATABASE <i>new_dbname</i> TEMPLATE <i>old_dbname</i>;</codeblock>
        </p>
      </body>
    </topic>
    <topic id="topic6" xml:lang="en">
      <title>Creating a Database with a Different Owner</title>
      <body>
        <p>Another database owner can be assigned when a database is created:</p>
        <p>
          <codeblock>=&gt; CREATE DATABASE <i>new_dbname</i> WITH <i>owner=new_user</i>;</codeblock>
        </p>
      </body>
    </topic>
  </topic>
  <topic id="topic7" xml:lang="en">
    <title>Viewing the List of Databases</title>
    <body>
      <p>If you are working in the <codeph>psql</codeph> client program, you can use the
          <codeph>\l</codeph> meta-command to show the list of databases and templates in your
        Greenplum Database system. If using another client program and you are a superuser, you can
        query the list of databases from the <codeph>pg_database</codeph> system catalog table. For
        example:</p>
      <p>
        <codeblock>=&gt; SELECT datname from pg_database;</codeblock>
      </p>
    </body>
  </topic>
  <topic id="topic8" xml:lang="en">
    <title>Altering a Database</title>
    <body>
      <p>The <ph>ALTER DATABASE</ph> command changes database attributes such as owner, name, or
        default configuration attributes. For example, the following command alters a database by
        setting its default schema search path (the <codeph>search_path</codeph> configuration
        parameter):</p>
      <p>
        <codeblock>=&gt; ALTER DATABASE mydatabase SET search_path TO myschema, public, pg_catalog;</codeblock>
      </p>
      <p>To alter a database, you must be the owner of the database or a superuser. </p>
    </body>
  </topic>
  <topic id="topic9" xml:lang="en">
    <title>Dropping a Database</title>
    <body>
      <p>The <codeph>DROP DATABASE</codeph> command drops (or deletes) a database. It removes the
        system catalog entries for the database and deletes the database directory on disk that
        contains the data. You must be the database owner or a superuser to drop a database, and you
        cannot drop a database while you or anyone else is connected to it. Connect to
          <codeph>postgres</codeph> (or another database) before dropping a database. For
        example:</p>
      <p>
        <codeblock>=&gt; \c postgres
=&gt; DROP DATABASE mydatabase;</codeblock>
      </p>
      <p>You can also use the client program <codeph>dropdb</codeph> to drop a database. For
        example, the following command connects to Greenplum Database using the provided host name
        and port and drops the database <i>mydatabase</i>:</p>
      <p>
        <codeblock>$ dropdb -h masterhost -p 5432 mydatabase</codeblock>
      </p>
      <note type="warning">Dropping a database cannot be undone. <p>The <codeph>DROP
            DATABASE</codeph> command is not transactional.</p></note>
    </body>
  </topic>
</topic>
