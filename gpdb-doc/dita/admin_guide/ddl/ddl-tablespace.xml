<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic9" xml:lang="en">
  <title id="im140259">Creating and Managing Tablespaces</title>
  <body>
    <p>Tablespaces allow database administrators to have multiple file systems per machine and
      decide how to best use physical storage to store database objects. Tablespaces allow you to
      assign different storage for frequently and infrequently used database objects or to control
      the I/O performance on certain database objects. For example, place frequently-used tables on
      file systems that use high performance solid-state drives (SSD), and place other tables on
      standard hard drives.</p>
    <p>A tablespace requires a host file system location to store its database files. In Greenplum
      Database, the file system location must exist on all hosts including the hosts running the
      master, standby master, each primary segment, and each mirror segment. </p>
    <p>A tablespace is Greenplum Database system object (a global object), you can use a tablespace
      from any database if you have appropriate privileges.</p>
  </body>
  <topic id="topic13" xml:lang="en">
    <title>Creating a Tablespace</title>
    <body>
      <p>The <codeph>CREATE TABLESPACE</codeph> command defines a tablespace. For example:</p>
      <p>
        <codeblock>CREATE TABLESPACE fastspace LOCATION '/fastdisk/gpdb';
</codeblock>
      </p>
      <p>Database superusers define tablespaces and grant access to database users with the
          <codeph>GRANT</codeph><codeph>CREATE </codeph><ph>command</ph>. For example:</p>
      <p>
        <codeblock>GRANT CREATE ON TABLESPACE fastspace TO admin;
</codeblock>
      </p>
    </body>
  </topic>
  <topic id="topic14" xml:lang="en">
    <title>Using a Tablespace to Store Database Objects</title>
    <body>
      <p>Users with the <codeph>CREATE</codeph> privilege on a tablespace can create database
        objects in that tablespace, such as tables, indexes, and databases. The command is:</p>
      <p>
        <codeblock>CREATE TABLE tablename(options) TABLESPACE spacename
</codeblock>
      </p>
      <p>For example, the following command creates a table in the tablespace <i>space1</i>:</p>
      <p>
        <codeblock>CREATE TABLE foo(i int) TABLESPACE space1;
</codeblock>
      </p>
      <p>You can also use the <codeph>default_tablespace</codeph> parameter to specify the default
        tablespace for <codeph>CREATE TABLE</codeph> and <codeph>CREATE INDEX</codeph> commands that
        do not specify a tablespace:</p>
      <p>
        <codeblock>SET default_tablespace = space1;
CREATE TABLE foo(i int);
</codeblock>
      </p>
      <p>There is also the <codeph>temp_tablespaces</codeph> configuration parameter, which
        determines the placement of temporary tables and indexes, as well as temporary files that
        are used for purposes such as sorting large data sets. This can be a comma-separate list of
        tablespace names, rather than only one, so that the load associated with temporary objects
        can be spread over multiple tablespaces. A random member of the list is picked each time a
        temporary object is to be created.</p>
      <p>The tablespace associated with a database stores that database's system catalogs, temporary
        files created by server processes using that database, and is the default tablespace
        selected for tables and indexes created within the database, if no
          <codeph>TABLESPACE</codeph> is specified when the objects are created. If you do not
        specify a tablespace when you create a database, the database uses the same tablespace used
        by its template database.</p>
      <p>You can use a tablespace from any database in the Greenplum Database system if you have
        appropriate privileges.</p>
    </body>
  </topic>
  <topic id="topic15" xml:lang="en">
    <title>Viewing Existing Tablespaces</title>
    <body>
      <p>Every Greenplum Database system has the following default tablespaces.</p>
      <ul id="ul_mml_hvy_sp">
        <li id="im200050"><codeph>pg_global</codeph> for shared system catalogs.</li>
        <li id="im200067"><codeph>pg_default</codeph>, the default tablespace. Used by the
            <i>template1</i> and <i>template0</i> databases. </li>
      </ul>
      <p>These tablespaces use the default system location, the data directory locations created at
        system initialization.</p>
      <p>To see tablespace information, use the <codeph>pg_tablespace</codeph> catalog table to get
        the objecct ID (OID) of the tablespace and then use
          <codeph>gp_tablespace_location()</codeph> function to display the tablespace directories.
        This is an example that lists one user-defined tablespace, <codeph>myspace</codeph>:</p>
      <p>
        <codeblock>SELECT oid, * FROM pg_tablespace ;

  oid  |  spcname   | spcowner | spcacl | spcoptions
-------+------------+----------+--------+------------
  1663 | pg_default |       10 |        |
  1664 | pg_global  |       10 |        |
 16391 | myspace    |       10 |        |
(3 rows)
</codeblock>
      </p>
      <p>The OID for the tablespace <codeph>myspace</codeph> is <codeph>16391</codeph>. Run
          <codeph>gp_tablespace_location()</codeph> to display the tablespace locations for a system
        that consists of two segment instances and the master.
        <codeblock># SELECT * FROM gp_tablespace_location(16391);
 gp_segment_id |    tblspc_loc
---------------+------------------
             0 | /data/mytblspace
             1 | /data/mytblspace
            -1 | /data/mytblspace
(3 rows)
</codeblock></p>
      <p>This query uses <codeph>gp_tablespace_location()</codeph> the
          <codeph>gp_segment_configuration</codeph> catalog table to display segment instance
        information with the file system location for the <codeph>myspace</codeph>
        tablespace.<codeblock>WITH spc AS (SELECT * FROM  gp_tablespace_location(16391))
  SELECT seg.role, spc.gp_segment_id as seg_id, seg.hostname, seg.datadir, tblspc_loc 
    FROM spc, gp_segment_configuration AS seg 
    WHERE spc.gp_segment_id = seg.content ORDER BY seg_id;
</codeblock></p>
      <p>This is information for a test system that consists of two segment instances and the master
        on a single host. </p>
      <p>
        <codeblock> role | seg_id | hostname |       datadir        |    tblspc_loc
------+--------+----------+----------------------+------------------
 p    |     -1 | testhost | /data/master/gpseg-1 | /data/mytblspace
 p    |      0 | testhost | /data/data1/gpseg0   | /data/mytblspace
 p    |      1 | testhost | /data/data2/gpseg1   | /data/mytblspace
(3 rows)</codeblock>
      </p>
    </body>
  </topic>
  <topic id="topic16" xml:lang="en">
    <title>Dropping Tablespaces</title>
    <body>
      <p>To drop a tablespace, you must be the tablespace owner or a superuser. You cannot drop a
        tablespace until all objects in all databases using the tablespace are removed.</p>
      <p>The <codeph>DROP TABLESPACE</codeph> command removes an empty tablespace.</p>
      <note type="note">You cannot drop a tablespace if it is not empty or if it stores temporary or
        transaction files.</note>
    </body>
  </topic>
  <topic id="topic11" xml:lang="en">
    <title>Moving the Location of Temporary or Transaction Files</title>
    <body>
      <p>You can move temporary or transaction files to a specific tablespace to improve database
        performance when running queries, creating backups, and to store data more sequentially. </p>
      <p>The Greenplum Database server configuration parameter <codeph>temp_tablespaces</codeph>
        controls the location for both temporary tables and temporary spill files for hash aggregate
        and hash join queries. (Temporary files for purposes such as sorting large data sets are
        stored with general segment data in
            <codeph>&lt;<varname>data_dir</varname>>/&lt;<varname>seg_ID</varname>>/base/pgsql_tmp</codeph>.)</p>
      <p><codeph>temp_tablespaces</codeph> specifies tablespaces in which to create temporary
        objects (temp tables and indexes on temp tables) when a <codeph>CREATE</codeph> command does
        not explicitly specify a tablespace.</p>
      <p>Also note the following information about temporary or transaction files:</p>
      <ul id="ul_z3v_51j_lfb">
        <li>You can dedicate only one tablespace for temporary or transaction files, although you
          can use the same tablespace to store other types of files.</li>
        <li>You cannot drop a tablespace if it used by temporary files.</li>
      </ul>
    </body>
  </topic>
</topic>
