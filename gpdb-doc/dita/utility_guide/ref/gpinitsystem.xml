<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <!--install_guide/refs/gpinitsystem.xml has a conref to this topic. -->
    <title id="it20941">gpinitsystem</title>
    <body>
        <p>Initializes a Greenplum Database system using configuration parameters specified in the
                <codeph>gpinitsystem_config</codeph> file.</p>
        <section id="section2">
            <title>Synopsis</title>
            <codeblock><b>gpinitsystem</b> <b>-c</b> <varname>cluster_configuration_file</varname> 
            [<b>-h</b> <varname>hostfile_gpinitsystem</varname>]
            [<b>-B</b> <varname>parallel_processes</varname>] 
            [<b>-p</b> <varname>postgresql_conf_param_file</varname>]
            [<b>-s</b> <varname>standby_master_host</varname>
                [<b>-P</b> <varname>standby_master_port</varname>]
                [<b>-S</b> <varname>standby_master_datadir</varname> | <b>--standby_datadir</b>=<varname>standby_master_datadir</varname>]]
            [<b>-m</b> <varname>number</varname> | <b>--max_connections</b>=<varname>number</varname>]
            [<b>-b</b> <varname>size</varname> | <b>--shared_buffers</b>=<varname>size</varname>]
            [<b>-n <varname>locale</varname> | --locale</b>=<varname>locale</varname>] [<b>--lc-collate</b>=<varname>locale</varname>] 
            [<b>--lc-ctype</b>=<varname>locale</varname>] [<b>--lc-messages</b>=<varname>locale</varname>] 
            [<b>--lc-monetary</b>=<varname>locale</varname>] [<b>--lc-numeric</b>=<varname>locale</varname>] 
            [<b>--lc-time</b>=<varname>locale</varname>] [<b>-e</b> <varname>password</varname> | <b>--su_password</b>=<varname>password</varname>] 
            [<b>--mirror-mode</b>={group|spread}] [<b>-a</b>] [<b>-q</b>] [<b>-l</b> <varname>logfile_directory</varname>] [<b>-D</b>]
            [<b>-I</b> <varname>input_configuration_file</varname>]
            [<b>-O</b> <varname>output_configuration_file</varname>]

<b>gpinitsystem</b> <b>-v | --version</b>

<b>gpinitsystem</b> <b>-? | --help</b></codeblock>
        </section>
        <section id="section3">
            <title>Description</title>
            <p>The <codeph>gpinitsystem</codeph> utility creates a Greenplum Database instance or
                writes an input configuration file using the values defined in a cluster
                configuration file and any command-line options that you provide. See <xref
                    href="#topic1/section5" type="section" format="dita"/> for more information
                about the configuration file. Before running this utility, make sure that you have
                installed the Greenplum Database software on all the hosts in the array.</p>
            <p>With the <codeph>-O <varname>output_configuration_file</varname></codeph> option,
                    <codeph>gpinitsystem</codeph> does not create a new database instance but
                instead writes all provided configuration information to the specified output file.
                This file uses the <codeph>QD_PRIMARY_ARRAY</codeph> and
                    <codeph>PRIMARY_ARRAY</codeph> parameters to define each member using its
                hostname, port, data directory, segment prefix, segment ID, and content ID. Details
                of the array configuration can be modified as necessary to match values available in
                a Greenplum Database backup, or can simply be used to recreate the same cluster
                configuration at a later time. Configuration files that use
                    <codeph>QD_PRIMARY_ARRAY</codeph> and <codeph>PRIMARY_ARRAY</codeph> must be
                passed into <codeph>gpinitsystem</codeph> using the <codeph>-I
                        <varname>input_configuration_file</varname></codeph> option. See <xref
                    href="#topic1/section5" type="section" format="dita"/> for more information.</p>
            <p>In a Greenplum Database DBMS, each database instance (the master and all segments)
                must be initialized across all of the hosts in the system in such a way that they
                can all work together as a unified DBMS. The <codeph>gpinitsystem</codeph> utility
                takes care of initializing the Greenplum master and each segment instance, and
                configuring the system as a whole.</p>
            <p>Before running <codeph>gpinitsystem</codeph>, you must set the
                    <codeph>$GPHOME</codeph> environment variable to point to the location of your
                Greenplum Database installation on the master host and exchange SSH keys between all
                host addresses in the array using <codeph>gpssh-exkeys</codeph>.</p>
            <p>This utility performs the following tasks:</p>
            <ul>
                <li id="it147947">Verifies that the parameters in the configuration file are
                    correct.</li>
                <li id="it147948">Ensures that a connection can be established to each host address.
                    If a host address cannot be reached, the utility will exit.</li>
                <li id="it147949">Verifies the locale settings.</li>
                <li id="it147950">Displays the configuration that will be used and prompts the user
                    for confirmation.</li>
                <li id="it147951">Initializes the master instance.</li>
                <li id="it147952">Initializes the standby master instance (if specified).</li>
                <li id="it147953">Initializes the primary segment instances.</li>
                <li id="it147954">Initializes the mirror segment instances (if mirroring is
                    configured).</li>
                <li id="it147957">Configures the Greenplum Database system and checks for
                    errors.</li>
                <li id="it147961">Starts the Greenplum Database system.</li>
            </ul>
            <note>This utility uses secure shell (SSH) connections between systems to perform its
                tasks. In large Greenplum Database deployments, cloud deployments, or deployments
                with a large number of segments per host, this utility may exceed the host's maximum
                threshold for unauthenticated connections. Consider updating the SSH
                    <codeph>MaxStartups</codeph> and <codeph>MaxSessions</codeph> configuration
                parameters to increase this threshold. For more information about SSH configuration
                options, refer to the SSH documentation for your Linux distribution.</note>
        </section>
        <section id="section4">
            <title>Options</title>
            <parml>
                <plentry>
                    <pt>-a</pt>
                    <pd>Do not prompt the user for confirmation.</pd>
                </plentry>
                <plentry>
                    <pt>-B <varname>parallel_processes</varname></pt>
                    <pd>The number of segments to create in parallel. If not specified, the utility
                        will start up to 4 parallel processes at a time.</pd>
                </plentry>
                <plentry>
                    <pt>-c <varname>cluster_configuration_file</varname></pt>
                    <pd>Required. The full path and filename of the configuration file, which
                        contains all of the defined parameters to configure and initialize a new
                        Greenplum Database system. See <xref href="#topic1/section5" type="section"
                            format="dita"/> for a description of this file. You must provide either
                        the <codeph>-c <varname>cluster_configuration_file</varname></codeph> option
                        or the <codeph>-I <varname>input_configuration_file</varname></codeph>
                        option to <codeph>gpinitsystem</codeph>. </pd>
                </plentry>
                <plentry>
                    <pt>-D</pt>
                    <pd>Sets log output level to debug.</pd>
                </plentry>
                <plentry>
                    <pt>-h <varname>hostfile_gpinitsystem</varname></pt>
                    <pd>Optional. The full path and filename of a file that contains the host
                        addresses of your segment hosts. If not specified on the command line, you
                        can specify the host file using the <codeph>MACHINE_LIST_FILE</codeph>
                        parameter in the <varname>gpinitsystem_config</varname> file.</pd>
                </plentry>
                <plentry>
                    <pt>-I <varname>input_configuration_file</varname></pt>
                    <pd>The full path and filename of an input configuration file, which defines the
                        Greenplum Database members and segments using the
                            <codeph>QD_PRIMARY_ARRAY</codeph> and <codeph>PRIMARY_ARRAY</codeph>
                        parameters. The input configuration file is typically created by using
                        gpinitsystem with the <codeph>-O
                                <varname>output_configuration_file</varname></codeph> option. You
                        must provide either the <codeph>-c
                                <varname>cluster_configuration_file</varname></codeph> option or the
                            <codeph>-I <varname>input_configuration_file</varname></codeph> option
                        to <codeph>gpinitsystem</codeph>. </pd>
                </plentry>
                <plentry>
                    <pt> -n <varname>locale</varname> | --locale=<varname>locale</varname>
                    </pt>
                    <pd>Sets the default locale used by Greenplum Database. If not specified, the
                            <codeph>LC_ALL</codeph>, <codeph>LC_COLLATE</codeph>, or
                            <codeph>LANG</codeph> environment variable of the master host determines
                        the locale. If these are not set, the default locale is <codeph>C</codeph>
                            (<codeph>POSIX</codeph>). A locale identifier consists of a language
                        identifier and a region identifier, and optionally a character set encoding.
                        For example, <codeph>sv_SE</codeph> is Swedish as spoken in Sweden,
                            <codeph>en_US</codeph> is U.S. English, and <codeph>fr_CA</codeph> is
                        French Canadian. If more than one character set can be useful for a locale,
                        then the specifications look like this: <codeph>en_US.UTF-8</codeph> (locale
                        specification and character set encoding). On most systems, the command
                            <codeph>locale</codeph> will show the locale environment settings and
                            <codeph>locale -a</codeph> will show a list of all available
                        locales.</pd>
                </plentry>
                <plentry>
                    <pt>--lc-collate=<varname>locale</varname></pt>
                    <pd>Similar to <codeph>--locale</codeph>, but sets the locale used for collation
                        (sorting data). The sort order cannot be changed after Greenplum Database is
                        initialized, so it is important to choose a collation locale that is
                        compatible with the character set encodings that you plan to use for your
                        data. There is a special collation name of <codeph>C</codeph> or
                            <codeph>POSIX</codeph> (byte-order sorting as opposed to
                        dictionary-order sorting). The <codeph>C</codeph> collation can be used with
                        any character encoding.</pd>
                </plentry>
                <plentry>
                    <pt>--lc-ctype=<varname>locale</varname></pt>
                    <pd>Similar to <codeph>--locale</codeph>, but sets the locale used for character
                        classification (what character sequences are valid and how they are
                        interpreted). This cannot be changed after Greenplum Database is
                        initialized, so it is important to choose a character classification locale
                        that is compatible with the data you plan to store in Greenplum
                        Database.</pd>
                </plentry>
                <plentry>
                    <pt>--lc-messages=<varname>locale</varname></pt>
                    <pd>Similar to <codeph>--locale</codeph>, but sets the locale used for messages
                        output by Greenplum Database. The current version of Greenplum Database does
                        not support multiple locales for output messages (all messages are in
                        English), so changing this setting will not have any effect.</pd>
                </plentry>
                <plentry>
                    <pt>--lc-monetary=<varname>locale</varname></pt>
                    <pd>Similar to <codeph>--locale</codeph>, but sets the locale used for
                        formatting currency amounts.</pd>
                </plentry>
                <plentry>
                    <pt>--lc-numeric=<varname>locale</varname></pt>
                    <pd>Similar to <codeph>--locale</codeph>, but sets the locale used for
                        formatting numbers.</pd>
                </plentry>
                <plentry>
                    <pt>--lc-time=<varname>locale</varname></pt>
                    <pd>Similar to <codeph>--locale</codeph>, but sets the locale used for
                        formatting dates and times.</pd>
                </plentry>
                <plentry>
                    <pt>-l <varname>logfile_directory</varname></pt>
                    <pd>The directory to write the log file. Defaults to
                            <codeph>~/gpAdminLogs</codeph>.</pd>
                </plentry>
                <plentry>
                    <pt> -m <varname>number</varname> | --max_connections=number</pt>
                    <pd>Sets the maximum number of client connections allowed to the master. The
                        default is 250.</pd>
                </plentry>
                <plentry>
                    <pt>-O <varname>output_configuration_file</varname></pt>
                    <pd>When used with the <codeph>-O</codeph> option, <codeph>gpinitsystem</codeph>
                        does not create a new Greenplum Database cluster but instead writes the
                        supplied cluster configuration information to the specified
                                <codeph><varname>output_configuration_file</varname></codeph>. This
                        file defines Greenplum Database members and segments using the
                            <codeph>QD_PRIMARY_ARRAY</codeph>, <codeph>PRIMARY_ARRAY</codeph>, and
                            <codeph>MIRROR_ARRAY</codeph> parameters, and can be later used with
                            <codeph>-I <varname>input_configuration_file</varname></codeph> to
                        initialize a new cluster.</pd>
                </plentry>
                <plentry>
                    <pt>-p <varname>postgresql_conf_param_file</varname></pt>
                    <pd>Optional. The name of a file that contains <codeph>postgresql.conf</codeph>
                        parameter settings that you want to set for Greenplum Database. These
                        settings will be used when the individual master and segment instances are
                        initialized. You can also set parameters after initialization using the
                            <codeph>gpconfig</codeph> utility.</pd>
                </plentry>
                <plentry>
                    <pt>-q</pt>
                    <pd>Run in quiet mode. Command output is not displayed on the screen, but is
                        still written to the log file.</pd>
                </plentry>
                <plentry>
                    <pt> -b <varname>size</varname> | --shared_buffers=<varname>size</varname></pt>
                    <pd>Sets the amount of memory a Greenplum server instance uses for shared memory
                        buffers. You can specify sizing in kilobytes (kB), megabytes (MB) or
                        gigabytes (GB). The default is 125MB.</pd>
                </plentry>
                <plentry>
                    <pt>-s <varname>standby_master_host</varname></pt>
                    <pd>Optional. If you wish to configure a backup master instance, specify the
                        host name using this option. The Greenplum Database software must already be
                        installed and configured on this host.</pd>
                </plentry>
                <plentry>
                    <pt>-P <varname>standby_master_port</varname></pt>
                    <pd>If you configure a standby master instance with <codeph>-s</codeph>, specify
                        its port number using this option. The default port is the same as the
                        master port. To run the standby and master on the same host, you must use
                        this option to specify a different port for the standby. The Greenplum
                        Database software must already be installed and configured on the standby
                        host.</pd>
                </plentry>
                <plentry>
                    <pt>-S <varname>standby_master_datadir</varname> |
                            --standby_dir=<varname>standby_master_datadir</varname></pt>
                    <pd>If you configure a standby master host with <codeph>-s</codeph>, use this
                        option to specify its data directory. If you configure a standby on the same
                        host as the master instance, the master and standby must have separate data
                        directories.</pd>
                </plentry>
                <plentry>
                    <pt> -e <varname>superuser_password</varname> |
                            --su_password=<varname>superuser_password</varname></pt>
                    <pd>Use this option to specify the password to set for the Greenplum Database
                        superuser account (such as <codeph>gpadmin</codeph>). If this option is not
                        specified, the default password <codeph>gparray</codeph> is assigned to the
                        superuser account. You can use the <codeph>ALTER ROLE</codeph> command to
                        change the password at a later time. <p>Recommended security best
                            practices:</p><ul id="ul_vnd_kt2_44">
                            <li id="it148039">Do not use the default password option for production
                                environments.</li>
                            <li id="it148040">Change the password immediately after
                                installation.</li>
                        </ul></pd>
                </plentry>
                <plentry>
                    <pt>--mirror_mode={group|spread}</pt>
                    <pd>Use this option to specify the placement of mirror segment instances on the
                        segment hosts. The default, <codeph>group</codeph>, groups the mirror
                        segments for all of a host's primary segments on a single alternate host.
                            <codeph>spread</codeph> spreads mirror segments for the primary segments
                        on a host across different hosts in the Greenplum Database array. Spreading
                        is only allowed if the number of hosts is greater than the number of segment
                        instances per host. See <xref
                            href="../../admin_guide/highavail/topics/g-overview-of-segment-mirroring.xml#topic3"
                        /> for information about Greenplum Database mirroring strategies. </pd>
                </plentry>
                <plentry>
                    <pt>-v | --version</pt>
                    <pd>Print the <codeph>gpinitsystem</codeph> version and exit.</pd>
                </plentry>
                <plentry>
                    <pt>-? | --help</pt>
                    <pd>Show help about <codeph>gpinitsystem</codeph> command line arguments, and exit.</pd>
                </plentry>
            </parml>
        </section>
        <section id="section5">
            <title id="it148051">Initialization Configuration File Format</title>
            <p><codeph>gpinitsystem</codeph> requires a cluster configuration file with the
                following parameters defined. An example initialization configuration file can be
                found in <codeph>$GPHOME/docs/cli_help/gpconfigs/gpinitsystem_config</codeph>.</p>
            <p>To avoid port conflicts between Greenplum Database and other applications, the
                Greenplum Database port numbers should not be in the range specified by the
                operating system parameter <codeph>net.ipv4.ip_local_port_range</codeph>. For
                example, if <codeph>net.ipv4.ip_local_port_range = 10000 65535</codeph>, you could
                set Greenplum Database base port numbers to these values.</p>
            <p>
                <codeblock>PORT_BASE = 6000
MIRROR_PORT_BASE = 7000</codeblock>
            </p>
            <parml>
                <plentry>
                    <pt>ARRAY_NAME</pt>
                    <pd><b>Required.</b> A name for the array you are configuring. You can use any
                        name you like. Enclose the name in quotes if the name contains spaces.</pd>
                </plentry>
                <plentry>
                    <pt>MACHINE_LIST_FILE</pt>
                    <pd><b>Optional.</b> Can be used in place of the <codeph>-h</codeph> option.
                        This specifies the file that contains the list of segment host address names
                        that comprise the Greenplum Database system. The master host is assumed to
                        be the host from which you are running the utility and should not be
                        included in this file. If your segment hosts have multiple network
                        interfaces, then this file would include all addresses for the host. Give
                        the absolute path to the file.</pd>
                </plentry>
                <plentry>
                    <pt>SEG_PREFIX</pt>
                    <pd><b>Required.</b> This specifies a prefix that will be used to name the data
                        directories on the master and segment instances. The naming convention for
                        data directories in a Greenplum Database system is
                            <varname>SEG_PREFIXnumber</varname> where <varname>number</varname>
                        starts with 0 for segment instances (the master is always -1). So for
                        example, if you choose the prefix <codeph>gpseg</codeph>, your master
                        instance data directory would be named <codeph>gpseg-1</codeph>, and the
                        segment instances would be named <codeph>gpseg0</codeph>,
                            <codeph>gpseg1</codeph>, <codeph>gpseg2</codeph>,
                            <codeph>gpseg3</codeph>, and so on.</pd>
                </plentry>
                <plentry>
                    <pt id="port_base">PORT_BASE</pt>
                    <pd><b>Required.</b> This specifies the base number by which primary segment
                        port numbers are calculated. The first primary segment port on a host is set
                        as <codeph>PORT_BASE</codeph>, and then incremented by one for each
                        additional primary segment on that host. Valid values range from 1 through
                        65535.</pd>
                </plentry>
                <plentry>
                    <pt id="data_directory">DATA_DIRECTORY</pt>
                    <pd><b>Required.</b> This specifies the data storage location(s) where the
                        utility will create the primary segment data directories. The number of
                        locations in the list dictate the number of primary segments that will get
                        created per physical host (if multiple addresses for a host are listed in
                        the host file, the number of segments will be spread evenly across the
                        specified interface addresses). It is OK to list the same data storage area
                        multiple times if you want your data directories created in the same
                        location. The user who runs <codeph>gpinitsystem</codeph> (for example, the
                            <codeph>gpadmin</codeph> user) must have permission to write to these
                        directories. For example, this will create six primary segments per
                        host:</pd>
                    <pd>
                        <codeblock>declare -a DATA_DIRECTORY=(/data1/primary /data1/primary 
/data1/primary /data2/primary /data2/primary /data2/primary)</codeblock>
                    </pd>
                </plentry>
                <plentry>
                    <pt>MASTER_HOSTNAME</pt>
                    <pd><b>Required.</b> The host name of the master instance. This host name must
                        exactly match the configured host name of the machine (run the
                            <codeph>hostname</codeph> command to determine the correct
                        hostname).</pd>
                </plentry>
                <plentry>
                    <pt>MASTER_DIRECTORY</pt>
                    <pd><b>Required.</b> This specifies the location where the data directory will
                        be created on the master host. You must make sure that the user who runs
                            <codeph>gpinitsystem</codeph> (for example, the <codeph>gpadmin</codeph>
                        user) has permissions to write to this directory.</pd>
                </plentry>
                <plentry>
                    <pt>MASTER_PORT</pt>
                    <pd><b>Required.</b> The port number for the master instance. This is the port
                        number that users and client connections will use when accessing the
                        Greenplum Database system.</pd>
                </plentry>
                <plentry>
                    <pt>TRUSTED_SHELL</pt>
                    <pd><b>Required.</b> The shell the <codeph>gpinitsystem</codeph> utility uses to
                        execute commands on remote hosts. Allowed values are <codeph>ssh</codeph>.
                        You must set up your trusted host environment before running the
                            <codeph>gpinitsystem</codeph> utility (you can use
                            <codeph>gpssh-exkeys</codeph> to do this).</pd>
                </plentry>
                <plentry>
                    <pt>ENCODING</pt>
                    <pd><b>Required.</b> The character set encoding to use. This character set must
                        be compatible with the <codeph>--locale</codeph> settings used, especially
                            <codeph>--lc-collate</codeph> and <codeph>--lc-ctype</codeph>. Greenplum
                        Database supports the same character sets as PostgreSQL.</pd>
                </plentry>
                <plentry>
                    <pt>DATABASE_NAME</pt>
                    <pd><b>Optional.</b> The name of a Greenplum Database database to create after
                        the system is initialized. You can always create a database later using the
                            <codeph>CREATE DATABASE</codeph> command or the
                            <codeph>createdb</codeph> utility.</pd>
                </plentry>
                <plentry>
                    <pt id="mirror_port_base">MIRROR_PORT_BASE</pt>
                    <pd><b>Optional.</b> This specifies the base number by which mirror segment port
                        numbers are calculated. The first mirror segment port on a host is set as
                            <codeph>MIRROR_PORT_BASE</codeph>, and then incremented by one for each
                        additional mirror segment on that host. Valid values range from 1 through
                        65535 and cannot conflict with the ports calculated by
                            <codeph>PORT_BASE</codeph>.</pd>
                </plentry>
                <plentry>
                    <pt>MIRROR_DATA_DIRECTORY</pt>
                    <pd><b>Optional.</b> This specifies the data storage location(s) where the
                        utility will create the mirror segment data directories. There must be the
                        same number of data directories declared for mirror segment instances as for
                        primary segment instances (see the <codeph>DATA_DIRECTORY</codeph>
                        parameter). The user who runs <codeph>gpinitsystem</codeph> (for example,
                        the <codeph>gpadmin</codeph> user) must have permission to write to these
                        directories. For example:</pd>
                    <pd>
                        <codeblock>declare -a MIRROR_DATA_DIRECTORY=(/data1/mirror 
/data1/mirror /data1/mirror /data2/mirror /data2/mirror 
/data2/mirror)</codeblock>
                    </pd>
                </plentry>
                <plentry>
                    <pt>QD_PRIMARY_ARRAY, PRIMARY_ARRAY, MIRROR_ARRAY</pt>
                    <pd>These parameters can only be provided using an input configuration file,
                        with the <codeph>gpinitsystem</codeph>
                        <codeph>-I <varname>input_configuration_file</varname></codeph> option.
                            <codeph>QD_PRIMARY_ARRAY</codeph>, <codeph>PRIMARY_ARRAY</codeph>, and
                            <codeph>MIRROR_ARRAY</codeph> define the Greenplum Database master host
                        and the primary and mirror instances on the segment hosts, respectively,
                        using the format:
                        <codeblock><varname>host</varname>~<varname>port</varname>~<varname>data_directory</varname>/<varname>seg_prefix&lt;segment_id></varname>~<varname>dbid</varname>~<varname>content_id</varname></codeblock>The
                        Greenplum Database master always uses the value -1 for the segment ID and
                        content ID. For
                        example:<codeblock>QD_PRIMARY_ARRAY=127.0.0.1~5432~/gpmaster/gpsne-1~1~-1~0
declare -a PRIMARY_ARRAY=(
127.0.0.1~40000~/gpdata1/gpsne0~2~0
127.0.0.1~40001~/gpdata2/gpsne1~3~1
)
declare -a MIRROR_ARRAY=(
127.0.0.1~50000~/gpmirror1/gpsne0~4~0
127.0.0.1~50001~/gpmirror2/gpsne1~5~1
)</codeblock></pd>
                    <pd>You can use the <codeph>gpinitsystem</codeph>
                        <codeph>-O <varname>output_configuration_file</varname></codeph> to populate
                            <codeph>QD_PRIMARY_ARRAY</codeph>, <codeph>PRIMARY_ARRAY</codeph>,
                            <codeph>MIRROR_ARRAY</codeph> using the hosts, data directories, segment
                        prefix, and base port values that you provide to the command. For recovery
                        purposes, you can edit the segment and content IDs to match the values of an
                        existing Greenplum Database backup.</pd>
                </plentry>
                <plentry>
                    <pt>HEAP_CHECKSUM</pt>
                    <pd><b>Optional.</b> This parameter specifies if checksums are enabled for heap
                        data. When enabled, checksums are calculated for heap storage in all
                        databases, enabling Greenplum Database to detect corruption in the I/O
                        system. This option is set when the system is initialized and cannot be
                        changed later.</pd>
                    <pd>The <codeph>HEAP_CHECKSUM</codeph> option is on by default and turning it
                        off is strongly discouraged. If you set this option to off, data corruption
                        in storage can go undetected and make recovery much more difficult.</pd>
                    <pd>To determine if heap checksums are enabled in a Greenplum Database system,
                        you can query the <codeph>data_checksums</codeph> server configuration
                        parameter with the <codeph>gpconfig</codeph> management
                        utility:<codeblock>$ gpconfig -s data_checksums</codeblock></pd>
                </plentry>
                <plentry>
                    <pt>HBA_HOSTNAMES</pt>
                    <pd><b>Optional.</b> This parameter controls whether
                            <codeph>gpinitsystem</codeph> uses IP addresses or host names in the
                            <codeph>pg_hba.conf</codeph> file when updating the file with addresses
                        that can connect to Greenplum Database. The default value is
                            <codeph>0</codeph>, the utility uses IP addresses when updating the
                        file. When initializing a Greenplum Database system, specify
                            <codeph>HBA_HOSTNAMES=1</codeph> to have the utility use host names in
                        the <codeph>pg_hba.conf</codeph> file. </pd>
                    <pd>For information about how Greenplum Database resolves host names in the
                            <codeph>pg_hba.conf</codeph> file, see <xref
                            href="../../admin_guide/client_auth.xml#topic1"/>.</pd>
                </plentry>
            </parml>
        </section>
        <section id="section6">
            <title>Examples</title>
            <p>Initialize a Greenplum Database array by supplying a cluster configuration file and a
                segment host address file, and set up a spread mirroring
                    (<codeph>--mirror-mode=spread</codeph>) configuration:</p>
            <codeblock>$ gpinitsystem -c gpinitsystem_config -h hostfile_gpinitsystem --mirror-mode=spread</codeblock>
            <p>Initialize a Greenplum Database array and set the superuser remote password:</p>
            <codeblock>$ gpinitsystem -c gpinitsystem_config -h hostfile_gpinitsystem --su-password=mypassword</codeblock>
            <p>Initialize a Greenplum Database array with an optional standby master host:</p>
            <codeblock>$ gpinitsystem -c gpinitsystem_config -h hostfile_gpinitsystem -s host09</codeblock>
            <p>Instead of initializing a Greenplum Database array, write the provided configuration
                to an output file. The output file uses the <codeph>QD_PRIMARY_ARRAY</codeph> and
                    <codeph>PRIMARY_ARRAY</codeph> parameters to define master and segment
                hosts:</p>
            <codeblock>$ gpinitsystem -c gpinitsystem_config -h hostfile_gpinitsystem --mirror-mode=spread -O cluster_init.config</codeblock>
            <p>Initialize a Greenplum Database using an input configuration file (a file that
                defines the Greenplum Database array) using <codeph>QD_PRIMARY_ARRAY</codeph> and
                    <codeph>PRIMARY_ARRAY</codeph> parameters:</p>
            <codeblock>$ gpinitsystem -I cluster_init.config</codeblock>
        </section>
        <section id="section7">
            <title>See Also</title>
            <p><codeph><xref href="./gpssh-exkeys.xml#topic1" type="topic" format="dita"/></codeph>,
                        <codeph><xref href="gpdeletesystem.xml#topic1" type="topic" format="dita"
                    /></codeph></p>
        </section>
    </body>
</topic>
