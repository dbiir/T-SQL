<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="analyze">
  <title>Updating Statistics with ANALYZE</title>
  <body>
    <p>The most important prerequisite for good query performance is to begin with accurate
      statistics for the tables. Updating stastistics with the <codeph>ANALYZE</codeph> statement
      enables the query planner to generate optimal query plans. When a table is analyzed,
      information about the data is stored in the system catalog tables. If the stored information
      is out of date, the planner can generate inefficient plans.</p>
    <section>
      <title>Generating Statistics Selectively</title>
      <p>Running <codeph><xref href="../ref_guide/sql_commands/ANALYZE.xml">ANALYZE</xref></codeph>
        with no arguments updates statistics for all tables in the database. This can be a very
        long-running process and it is not recommended. You should <codeph>ANALYZE</codeph> tables
        selectively when data has changed or use the <codeph><xref
            href="../utility_guide/ref/analyzedb.xml">analyzedb</xref></codeph> utility. </p>
      <p>Running <codeph>ANALYZE</codeph> on a large table can take a long time. If it is not
        feasible to run <codeph>ANALYZE</codeph> on all columns of a very large table, you can
        generate statistics for selected columns only using <codeph>ANALYZE table(column,
          ...)</codeph>. Be sure to include columns used in joins, <codeph>WHERE</codeph> clauses,
          <codeph>SORT</codeph> clauses, <codeph>GROUP BY</codeph> clauses, or
          <codeph>HAVING</codeph> clauses. </p>
      <p>For a partitioned table, you can run <codeph>ANALYZE</codeph> on just partitions that have
        changed, for example, if you add a new partition. Note that for partitioned tables, you can
        run <codeph>ANALYZE</codeph> on the parent (main) table, or on the leaf nodes&#8212;the
        partition files where data and statistics are actually stored. The intermediate files for
        sub-partitioned tables store no data or statistics, so running <codeph>ANALYZE</codeph> on
        them does not work. You can find the names of the partition tables in the
          <codeph>pg_partitions</codeph> system
        catalog:<codeblock>SELECT partitiontablename from pg_partitions WHERE tablename='<i>parent_table</i>;</codeblock></p>
    </section>
    <section>
      <title>Improving Statistics Quality</title>
      <p>There is a trade-off between the amount of time it takes to generate statistics and the
        quality, or accuracy, of the statistics. </p>
      <p>To allow large tables to be analyzed in a reasonable amount of time,
          <codeph>ANALYZE</codeph> takes a random sample of the table contents, rather than
        examining every row. To increase the number of sample values for all table columns adjust
        the <codeph>default_statistics_target</codeph> configuration parameter. The target value
        ranges from 1 to 1000; the default target value is 100. The
          <codeph>default_statistics_target</codeph> variable applies to all columns by default, and
        specifies the number of values that are stored in the list of common values. A larger target
        may improve the quality of the query plannerâ€™s estimates, especially for columns with
        irregular data patterns. <codeph>default_statistics_target</codeph> can be set at the
        master/session level and requires a reload. </p>
    </section>
    <section>
      <title>When to Run ANALYZE</title>
    </section>
    <p>Run <codeph>ANALYZE</codeph>:<ul id="ul_f5c_gnj_bp">
        <li>after loading data,</li>
        <li>after <codeph>CREATE INDEX</codeph> operations,</li>
        <li>and after <codeph>INSERT</codeph>, <codeph>UPDATE</codeph>, and <codeph>DELETE</codeph>
          operations that significantly change the underlying data.</li>
      </ul><codeph>ANALYZE</codeph> requires only a read lock on the table, so it may be run in
      parallel with other database activity, but do not run <codeph>ANALYZE</codeph> while
      performing loads, <codeph>INSERT</codeph>, <codeph>UPDATE</codeph>, <codeph>DELETE</codeph>,
      and <codeph>CREATE INDEX</codeph> operations.</p>
    <section>
      <title>Configuring Automatic Statistics Collection</title>
      <p>The <codeph>gp_autostats_mode</codeph> configuration parameter, together with the
          <codeph>gp_autostats_on_change_threshold</codeph> parameter, determines when an automatic
        analyze operation is triggered. When automatic statistics collection is triggered, the
        planner adds an <codeph>ANALYZE</codeph> step to the query. </p>
      <p>By default, <codeph>gp_autostats_mode</codeph> is <codeph>on_no_stats</codeph>, which
        triggers statistics collection for <codeph>CREATE TABLE AS SELECT</codeph>,
          <codeph>INSERT</codeph>, or <codeph>COPY</codeph> operations on any table that has no
        existing statistics. </p>
      <p>Setting <codeph>gp_autostats_mode</codeph> to <codeph>on_change</codeph> triggers
        statistics collection only when the number of rows affected exceeds the threshold defined by
          <codeph>gp_autostats_on_change_threshold</codeph>, which has a default value of
        2147483647. Operations that can trigger automatic statistics collection with
          <codeph>on_change</codeph> are: <codeph>CREATE TABLE AS SELECT</codeph>,
          <codeph>UPDATE</codeph>, <codeph>DELETE</codeph>, <codeph>INSERT</codeph>, and
          <codeph>COPY</codeph>.</p>
      <p>Setting <codeph>gp_autostats_mode</codeph> to <codeph>none</codeph> disables automatics
        statistics collection. </p>
      <p> For partitioned tables, automatic statistics collection is not triggered if data is
        inserted from the top-level parent table of a partitioned table. But automatic statistics
        collection <i>is</i> triggered if data is inserted directly in a leaf table (where the data
        is stored) of the partitioned table.</p>
    </section>
  </body>
</topic>
