<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_hhc_z5w_r4">
  <title>Memory and Resource Management with Resource Groups</title>
  <shortdesc>Managing Greenplum Database resources with resource groups.</shortdesc>
  <body>
    <p>Memory, CPU, and concurrent transaction management have a significant impact on
      performance in a Greenplum Database cluster. Resource groups are a newer resource
      management scheme that enforce memory, CPU, and concurrent transaction limits in
      Greenplum Database.</p>
    <ul id="ul_agm_sbl_zt">
      <li>
        <xref href="#topic_hhc_z5w_r4/section_r52_rbl_zt" format="dita"/>
      </li>
      <li>
        <xref href="#topic_hhc_z5w_r4/toolowmem" format="dita"/>
      </li>
      <li>
        <xref href="#topic_hhc_z5w_r4/configuring_rg" format="dita"/>
      </li>
      <li>
        <xref href="#topic_hhc_z5w_r4/section113x" format="dita"/>
      </li>
      <li>
        <xref href="#topic_hhc_z5w_r4/section177x" format="dita"/>
      </li>
    </ul>
    <section id="section_r52_rbl_zt">
      <title>Configuring Memory for Greenplum Database</title>
      <p>While it is not always possible to increase system memory, you can avoid
        many out-of-memory conditions by configuring resource groups to manage expected
        workloads. </p>
      <p>The following operating system and Greenplum Database memory settings are
        significant when you manage Greenplum Database resources with resource groups:</p>
      <ul id="ul_xv2_phn_1s">
        <li>
          <b>vm.overcommit_memory</b>
          <p>This Linux kernel parameter, set in <xref href="../install_guide/prep_os.html#topic3"
              scope="peer" format="dita"><codeph>/etc/sysctl.conf</codeph></xref>, identifies the
            method that the operating system uses to determine how much memory can be allocated to
            processes. <codeph>vm.overcommit_memory</codeph> must always be set to 2 for Greenplum
            Database systems. </p>
        </li>
        <li>
          <b>vm.overcommit_ratio</b>
          <p>This Linux kernel parameter, set in <xref href="../install_guide/prep_os.html#topic3"
              scope="peer" format="dita"><codeph>/etc/sysctl.conf</codeph></xref>,  identifies the
            percentage of RAM that is used for application processes; the remainder is reserved for
            the operating system. Tune the setting as necessary. If your memory utilization is too
            low, increase the value; if your memory or swap usage is too high, decrease the
            setting.</p>
        </li>
        <li>
          <b>gp_resource_group_memory_limit</b>
          <p>The percentage of system memory to allocate to Greenplum Database. The
            default value is .7 (70%).</p> 
        </li>
        <li>
          <b>gp_workfile_limit_files_per_query</b>
          <p>Set <codeph>gp_workfile_limit_files_per_query</codeph> to limit the maximum number of
            temporary spill files (workfiles) allowed per query. Spill files are created when a
            query requires more memory than it is allocated. When the limit is exceeded the query is
            terminated. The default is zero, which allows an unlimited number of spill files and may
            fill up the file system. </p>
        </li>
        <li>
          <p>
            <b>gp_workfile_compression</b>
          </p>
          <p>If there are numerous spill files then set
              <codeph>gp_workfile_compression</codeph> to compress the spill files.
            Compressing spill files may help to avoid overloading the disk subsystem with IO
            operations. </p>
        </li>
        <li>
          <p>
            <b>memory_spill_ratio</b>
          </p>
          <p>Set <codeph>memory_spill_ratio</codeph> to increase or decrease the amount
            of query operator memory Greenplum Database allots to a query. When <codeph>memory_spill_ratio</codeph>
            is larger than 0, it represents the percentage of resource group memory to
            allot to query operators. If concurrency is high, this memory amount may be small
            even when <codeph>memory_spill_ratio</codeph> is set to the max value of 100.
            When you set <codeph>memory_spill_ratio</codeph> to 0, Greenplum Database uses
            the <codeph>statement_mem</codeph> setting to determine the initial amount of
            query operator memory to allot.</p>
        </li>
        <li>
          <b>statement_mem</b>
          <p>When <codeph>memory_spill_ratio</codeph> is 0, Greenplum Database uses the
            <codeph>statement_mem</codeph> setting to determine the amount of memory
            to allocate to a query.</p>
        </li>
      </ul>
      <p>Other considerations:</p>
      <ul id="ul_xv2_phn_2z">
        <li>Do not configure the operating system to use huge pages. See the <xref format="dita"
            href="../install_guide/prep_os.xml#topic3/huge_pages" scope="peer">Recommended OS
            Parameters Settings</xref> in the <cite>Greenplum Installation Guide</cite>.</li>
        <li>When you configure resource group memory, consider memory requirements
           for mirror segments that become primary segments during a failure to ensure
           that database operations can continue when primary segments or segment hosts
           fail.
        </li>
      </ul>
    </section>
    <section id="toolowmem">
      <title>Memory Considerations when using Resource Groups</title>
      <p>Available memory for resource groups may be limited on systems that use
        low or no swap space, and that use the default <codeph>vm.overcommit_ratio</codeph>
         and <codeph>gp_resource_group_memory_limit</codeph> settings. To ensure that
         Greenplum Database has a reasonable per-segment-host memory limit, you may be
         required to increase one or more of the following configuration settings:</p><ol>
           <li>The swap size on the system.</li>
           <li>The system's <codeph>vm.overcommit_ratio</codeph> setting.</li>
           <li>The resource group <codeph>gp_resource_group_memory_limit</codeph> setting.</li>
       </ol>
    </section>
    <section id="configuring_rg">
      <title>Configuring Resource Groups</title>
      <p>Greenplum Database resource groups provide a powerful mechanism for managing the workload
        of the cluster. Consider these general guidelines when you configure resource groups
        for your system:</p>
      <ul id="ul_svy_b3n_1s">
        <li>A transaction submitted by any Greenplum Database role with
            <codeph>SUPERUSER</codeph> privileges runs under the default resource
            group named <codeph>admin_group</codeph>. Keep this in mind when
            scheduling and running Greenplum administration utilities.</li>
        <li>Ensure that you assign each non-admin role a resource group. If you do not assign
            a resource group to a role, queries submitted by the role are handled by the
            default resource group named <codeph>default_group</codeph>.</li>
        <li>Use the <codeph>CONCURRENCY</codeph> resource group parameter to limit the
            number of active queries that members of a particular resource group can run
            concurrently.</li>
        <li>Use the <codeph>MEMORY_LIMIT</codeph> and <codeph>MEMORY_SPILL_RATIO</codeph>
            parameters to control the maximum amount of memory that queries running in the
           resource group can consume.</li>
        <li>Greenplum Database assigns unreserved memory (100 - (sum of all resource
          group <codeph>MEMORY_LIMIT</codeph>s) to a global shared memory pool. This
          memory is available to all queries on a first-come, first-served basis.</li>
        <li>Alter resource groups dynamically to match the real requirements of the
          group for the workload and the time of day.</li>
        <li>Use the <codeph>gp_toolkit</codeph> views to examine resource group resource
            usage and to monitor how the groups are working.</li>
        <li otherprops="pivotal">Consider using Pivotal Greenplum Command Center
          to create and manage resource groups, and to define the criteria under which
          Command Center dynamically assigns a transaction to a resource group.</li>
      </ul>
    </section>
    <section id="section113x" xml:lang="en">
      <title>Low Memory Queries</title>
      <p>A low <codeph>statement_mem</codeph> setting (for example, in the 10MB range)
        has been shown to increase the performance of queries with low memory requirements.
        Use the <codeph>memory_spill_ratio</codeph> and <codeph>statement_mem</codeph> server
        configuration parameters to override
        the setting on a per-query basis. For example:
        <codeblock>SET memory_spill_ratio=0;
SET statement_mem='10 MB';</codeblock></p>
    </section>
    <section id="section177x" xml:lang="en">
      <title>Administrative Utilities and admin_group Concurrency</title>
      <p>The default resource group for database transactions initiated by Greenplum
        Database <codeph>SUPERUSER</codeph>s is the group named <codeph>admin_group</codeph>.
        The default <codeph>CONCURRENCY</codeph> value for the <codeph>admin_group</codeph>
        resource group is 10.</p>
      <p>Certain Greenplum Database administrative utilities may use more than one
        <codeph>CONCURRENCY</codeph> slot at runtime, such as <codeph>gpbackup</codeph>
        that you invoke with the <codeph>--jobs</codeph> option. If the utility(s) you run
        require more concurrent transactions than that configured for <codeph>admin_group</codeph>,
        consider temporarily increasing the group's <codeph>MEMORY_LIMIT</codeph> and
        <codeph>CONCURRENCY</codeph> values to meet the utility's requirement, making sure to
        return these parameters back to their original settings when the utility completes.
        <note>Memory allocation changes that you initiate with <codeph>ALTER RESOURCE GROUP</codeph>
        may not take affect immediately due to resource consumption by currently running
        queries. Be sure to alter resource group parameters in advance of your maintenance
        window.</note></p>
    </section>
  </body>
</topic>
