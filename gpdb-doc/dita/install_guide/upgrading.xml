<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic_tbx_szy_kbb">
  <title class="- topic/title ">Upgrading from an Earlier Greenplum 6 Release</title>
  <shortdesc>The upgrade path supported for this release is Greenplum Database 6.x to a newer
    Greenplum Database 6.x release. <ph otherprops="pivotal">Direct upgrade from Greenplum Database
      4 or 5 to Greenplum 6 is not supported.</ph></shortdesc>
  <body class="- topic/body ">
    <note type="important">Set the Greenplum Database timezone to a value that is compatible with
      your host systems. Setting the Greenplum Database timezone prevents Greenplum Database from
      selecting a timezone each time the cluster is restarted and sets the timezone for the
      Greenplum Database master and segment instances. After you upgrade to this release and if you
      have not set a Greenplum Database timezone value, verify that the selected Greenplum Database
      timezone is acceptable for your deployment. See <xref href="localization.xml" format="dita"
        scope="peer">Configuring Timezone and Localization Settings</xref> for more
      information.</note>
    <section id="gpdb_prereq">
      <title>Prerequisites</title>
      <p>Before starting the upgrade process, perform the following checks. </p>
      <ul id="ul_ubx_szy_kbb">
        <li>Verify the health of the Greenplum Database host hardware, and verify that the hosts
          meet the requirements for running Greenplum Database. The Greenplum Database
            <codeph>gpcheckperf</codeph> utility can assist you in confirming the host requirements.
            <note>If you need to run the <codeph>gpcheckcat</codeph> utility, run it a few weeks
            before the upgrade during a maintenance period. If necessary, you can resolve any issues
            found by the utility before the scheduled upgrade.</note><p>The utility is in
              <codeph>$GPHOME/bin</codeph>. Place Greenplum Database in restricted mode when you run
            the <codeph>gpcheckcat</codeph> utility. See the <cite>Greenplum Database Utility
              Guide</cite> for information about the <codeph>gpcheckcat</codeph> utility.</p><p>If
              <codeph>gpcheckcat</codeph> reports catalog inconsistencies, you can run
              <codeph>gpcheckcat</codeph> with the <codeph>-g</codeph> option to generate SQL
            scripts to fix the inconsistencies.</p><p>After you run the SQL scripts, run
              <codeph>gpcheckcat</codeph> again. You might need to repeat the process of running
              <codeph>gpcheckcat</codeph> and creating SQL scripts to ensure that there are no
            inconsistencies. Run the SQL scripts generated by <codeph>gpcheckcat</codeph> on a
            quiescent system. The utility might report false alerts if there is activity on the
            system. </p>
          <note type="important" otherprops="pivotal">If the <codeph>gpcheckcat</codeph> utility
            reports errors, but does not generate a SQL script to fix the errors, contact Pivotal
            Support. Information for contacting Pivotal Support is at <xref
              href="https://support.pivotal.io" scope="external" format="html" class="- topic/xref "
              >https://support.pivotal.io</xref>.</note></li>
        <li>During the migration process from Greenplum Database 6, a backup is made of some files
          and directories in <codeph>$MASTER_DATA_DIRECTORY</codeph>. Manually back up and remove
          any remaining files and directories from the <codeph>$MASTER_DATA_DIRECTORY</codeph>
          before migration. For information about the Greenplum Database migration utilities, see
          the <cite>Release Notes</cite>.</li>
      </ul>
    </section>
    <p>If you have configured the Greenplum Platform Extension Framework (PXF) in your previous
      Greenplum Database installation, you must stop the PXF service, and you might need to back up
      PXF configuration files before upgrading to a new version of Greenplum Database. Refer to
        <xref href="../pxf/upgrade_pxf_6x.html#pxfpre" type="topic" format="html">PXF Pre-Upgrade
        Actions</xref> for instructions.</p>
    <p>If you have not yet configured PXF, no action is necessary.</p>
  </body>
  <topic id="topic17">
    <title id="pm440937" class="- topic/title ">Upgrading from <ph otherprops="0_or_x">6.x</ph> to a
      Newer 6.x Release</title>
    <body class="- topic/body ">
      <p>An upgrade from Greenplum Database <ph otherprops="0_or_x">6.x</ph> to a newer 6.x release
        involves stopping Greenplum Database, updating the Greenplum Database software binaries, and
        restarting Greenplum Database. If you are using Greenplum Database extension packages there
        are additional requirements. See <xref href="#topic_tbx_szy_kbb/gpdb_prereq" format="dita"/>
        in the previous section.</p>
      <ol class="- topic/ol " id="ol_wbx_szy_kbb">
        <li class="- topic/li ">Log in to your Greenplum Database master host as the Greenplum
          administrative user:<codeblock>$ su - gpadmin</codeblock></li>
        <li class="- topic/li ">Perform a smart shutdown of your Greenplum Database 6.x system
          (there can be no active connections to the database). This example uses the
            <codeph>-a</codeph> option to disable confirmation
          prompts:<codeblock>$ gpstop -a</codeblock></li>
        <li>Copy the new Greenplum Database software installation package to the
            <codeph>gpadmin</codeph> user's home directory on each master, standby, and segment
          host.</li>
        <li class="- topic/li ">As <codeph>root</codeph>, install the new Greenplum Database
          software release on each host. For example, on RHEL/CentOS
            systems:<codeblock>$ sudo yum install greenplum-db-&lt;version>-&lt;platform>.rpm</codeblock><p>On
            Ubuntu
            systems:<codeblock># apt install ./greenplum-db-&lt;version>-&lt;platform>.deb</codeblock></p></li>
        <li>Update the permissions for the new installation. For example, run this command as
            <codeph>root</codeph> to change the user and group of the installed files to
            <codeph>gpadmin</codeph>.<codeblock>$ sudo chown -R gpadmin:gpadmin /usr/local/greenplum*</codeblock></li>
        <li>If needed, update the <codeph>greenplum_path.sh</codeph> file on the master and standby
          master hosts for use with your specific installation. These are some examples.<ul
            id="ul_mk3_xjq_cgb">
            <li>If Greenplum Database uses LDAP authentication, edit the
                <codeph>greenplum_path.sh</codeph> file to add the
              line:<codeblock>export LDAPCONF=/etc/openldap/ldap.conf</codeblock></li>
            <li>If Greenplum Database uses PL/Java, you might need to set or update the environment
              variables <codeph>JAVA_HOME</codeph> and <codeph>LD_LIBRARY_PATH</codeph> in
                <codeph>greenplum_path.sh</codeph>. </li>
          </ul>
          <note>When comparing the previous and new <codeph>greenplum_path.sh</codeph> files, be
            aware that installing some Greenplum Database extensions also updates the
              <codeph>greenplum_path.sh</codeph> file. The <codeph>greenplum_path.sh</codeph> from
            the previous release might contain updates that were the result of installing those
            extensions.</note></li>
        <li class="- topic/li ">Edit the environment of the Greenplum Database superuser
            (<codeph>gpadmin</codeph>) and make sure you are sourcing the <codeph
            class="+ topic/ph pr-d/codeph ">greenplum_path.sh</codeph> file for the new
          installation. For example change the following line in the <codeph
            class="+ topic/ph pr-d/codeph ">.bashrc</codeph> or your chosen profile
            file:<codeblock>source /usr/local/greenplum-db-&lt;current_version>/greenplum_path.sh</codeblock><p>to:</p><codeblock>source /usr/local/greenplum-db-&lt;new_version>/greenplum_path.sh</codeblock><p>Or
            if you are sourcing a symbolic link (<codeph>/usr/local/greenplum-db</codeph>) in your
            profile files, update the link to point to the newly installed version. For
          example:</p><codeblock>$ rm /usr/local/greenplum-db
$ ln -s /usr/local/greenplum-db-&lt;new_version> /usr/local/greenplum-db</codeblock></li>
        <li class="- topic/li ">Source the environment file you just edited. For
          example:<codeblock>$ source ~/.bashrc</codeblock></li>
        <li class="- topic/li " otherprops="pivotal">Use the Greenplum Database
            <codeph>gppkg</codeph> utility to re-install Greenplum Database extensions. If you were
          previously using any Greenplum Database extensions such as pgcrypto, PL/R, PL/Java, or
          PostGIS, download the corresponding packages from <xref
            href="https://network.pivotal.io/products/pivotal-gpdb" scope="external" format="html"
            class="- topic/xref ">Pivotal Network</xref>, and install using this utility. See the
          extension documentation for details.<p>Also copy any files that are used by the extensions
            (such as JAR files, shared object files, and libraries) from the previous version
            installation directory to the new version installation directory on the master and
            segment host systems. </p></li>
        <li class="- topic/li ">After all segment hosts have been upgraded, log in as the
            <codeph>gpadmin</codeph> user and restart your Greenplum Database
          system:<codeblock># su - gpadmin
$ gpstart</codeblock></li>
        <li>If you configured PXF in your previous Greenplum Database installation, you must
          re-initialize the PXF service after you upgrade Greenplum Database. Refer to <xref
            href="../pxf/upgrade_pxf_6x.html#pxfup" type="topic" format="html">Upgrading PXF</xref>
          for instructions.</li>
      </ol>
      <p>After upgrading Greenplum Database, ensure that all features work as expected. For example,
        test that backup and restore perform as expected, and Greenplum Database features such as
        user-defined functions, and extensions such as MADlib and PostGIS perform as expected.</p>
    </body>
  </topic>
  <topic id="topic_zbx_szy_kbb" otherprops="pivotal">
    <title class="- topic/title ">Troubleshooting a Failed Upgrade</title>
    <body class="- topic/body ">
      <p>If you experience issues during the migration process and have active entitlements for
        Greenplum Database that were purchased through Pivotal, contact Pivotal Support. Information
        for contacting Pivotal Support is at <xref href="https://support.pivotal.io"
          scope="external" format="html" class="- topic/xref ">https://support.pivotal.io</xref>. </p>
      <p>
        <b class="+ topic/ph hi-d/b ">Be prepared to provide the following information:</b>
      </p>
      <ul class="- topic/ul " id="ul_acx_szy_kbb">
        <li class="- topic/li ">A completed <xref href="#topic17" format="dita">Upgrade
            Procedure</xref></li>
        <li class="- topic/li ">Log output from <codeph class="+ topic/ph pr-d/codeph "
            >gpcheckcat</codeph> (located in <codeph class="+ topic/ph pr-d/codeph "
            >~/gpAdminLogs</codeph>)</li>
      </ul>
    </body>
  </topic>
</topic>
