/*-------------------------------------------------------------------------
 *
 * pg_proc_gp.h
 *	  Additional system function definitions.
 *
 * src/include/catalog/pg_proc_gp.h
 *
 * NOTES
 *    This file contains additional Greenplum-added entries into pg_proc,
 *    on top of the upstream entries from pg_proc.h
 *
 *	  The contents of this file are generated from pg_proc.sql by
 *    catullus.pl. DO NOT EDIT MANUALLY!
 *
 *-------------------------------------------------------------------------
 */
/* no guard ifndef, because this should only be included from pg_proc.h */


/* TIDYCAT_BEGIN_PG_PROC_GEN


   WARNING: DO NOT MODIFY THE FOLLOWING SECTION: 
   Generated by catullus.pl version 8
   on Wed May 29 10:02:27 2019

   Please make your changes in pg_proc.sql
*/

/* All GPDB-added functions are here, instead of pg_proc.h. pg_proc.h should */
/* kept as close as possible to the upstream version, to make merging easier. */
/* */
/* This file is translated into DATA rows by catullus.pl. See */
/* README.add_catalog_function for instructions on how to run it. */

/* MPP -- array_add -- special for prospective customer  */
/* array_add(_int4, _int4) => _int4 */
DATA(insert OID = 6012 ( array_add  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 1007 "1007 1007" _null_ _null_ _null_ _null_ array_int4_add _null_ _null_ _null_ n a ));
DESCR("itemwise add two integer arrays");

/* interval_interval_div("interval", "interval") => float8 */
DATA(insert OID = 6115 ( interval_interval_div  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 701 "1186 1186" _null_ _null_ _null_ _null_ interval_interval_div _null_ _null_ _null_ n a ));

/* interval_interval_mod("interval", "interval") => "interval" */
DATA(insert OID = 6116 ( interval_interval_mod  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 1186 "1186 1186" _null_ _null_ _null_ _null_ interval_interval_mod _null_ _null_ _null_ n a ));


/* System-view support functions  */
/* pg_get_partition_def(oid) => text */
DATA(insert OID = 5024 ( pg_get_partition_def  PGNSP PGUID 12 1 0 0 0 f f f f t f s 1 0 25 "26" _null_ _null_ _null_ _null_ pg_get_partition_def _null_ _null_ _null_ n a ));
DESCR("partition configuration for a given relation");

/* pg_get_partition_def(oid, bool) => text */
DATA(insert OID = 5025 ( pg_get_partition_def  PGNSP PGUID 12 1 0 0 0 f f f f t f s 2 0 25 "26 16" _null_ _null_ _null_ _null_ pg_get_partition_def_ext _null_ _null_ _null_ n a ));
DESCR("partition configuration for a given relation");

/* pg_get_partition_def(oid, bool, bool) => text */
DATA(insert OID = 5034 ( pg_get_partition_def  PGNSP PGUID 12 1 0 0 0 f f f f t f s 3 0 25 "26 16 16" _null_ _null_ _null_ _null_ pg_get_partition_def_ext2 _null_ _null_ _null_ n a ));
DESCR("partition configuration for a given relation");

/* pg_get_partition_rule_def(oid) => text */
DATA(insert OID = 5027 ( pg_get_partition_rule_def  PGNSP PGUID 12 1 0 0 0 f f f f t f s 1 0 25 "26" _null_ _null_ _null_ _null_ pg_get_partition_rule_def _null_ _null_ _null_ n a ));
DESCR("partition configuration for a given rule");

/* pg_get_partition_rule_def(oid, bool) => text */
DATA(insert OID = 5028 ( pg_get_partition_rule_def  PGNSP PGUID 12 1 0 0 0 f f f f t f s 2 0 25 "26 16" _null_ _null_ _null_ _null_ pg_get_partition_rule_def_ext _null_ _null_ _null_ n a ));
DESCR("partition configuration for a given rule");

/* pg_get_partition_template_def(oid, bool, bool) => text */
DATA(insert OID = 5037 ( pg_get_partition_template_def  PGNSP PGUID 12 1 0 0 0 f f f f t f s 3 0 25 "26 16 16" _null_ _null_ _null_ _null_ pg_get_partition_template_def _null_ _null_ _null_ n a ));
DESCR("ALTER statement to recreate subpartition templates for a give relation");

/* numeric_dec("numeric") => "numeric" */
DATA(insert OID = 6997 ( numeric_dec  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 1700 "1700" _null_ _null_ _null_ _null_ numeric_dec _null_ _null_ _null_ n a ));
DESCR("increment by one");


/* Sequences and time series */
/* interval_bound(numeric, numeric) => numeric */
DATA(insert OID = 7082 ( interval_bound  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 1700 "1700 1700" _null_ _null_ _null_ _null_ numeric_interval_bound _null_ _null_ _null_ n a ));
DESCR("boundary of the interval containing the given value");

/* interval_bound(numeric, numeric, int4) => numeric */
DATA(insert OID = 7083 ( interval_bound  PGNSP PGUID 12 1 0 0 0 f f f f f f i 3 0 1700 "1700 1700 23" _null_ _null_ _null_ _null_ numeric_interval_bound_shift _null_ _null_ _null_ n a ));
DESCR("boundary of the interval containing the given value");

/* interval_bound(numeric, numeric, int4, numeric) => numeric */
DATA(insert OID = 7084 ( interval_bound  PGNSP PGUID 12 1 0 0 0 f f f f f f i 4 0 1700 "1700 1700 23 1700" _null_ _null_ _null_ _null_ numeric_interval_bound_shift_rbound _null_ _null_ _null_ n a ));
DESCR("boundary of the interval containing the given value");

/* interval_bound(timestamp, "interval") => timestamp */
DATA(insert OID = 7085 ( interval_bound  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 1114 "1114 1186" _null_ _null_ _null_ _null_ timestamp_interval_bound _null_ _null_ _null_ n a ));
DESCR("boundary of the interval containing the given value");

/* interval_bound(timestamp, "interval", int4) => timestamp */
DATA(insert OID = 7086 ( interval_bound  PGNSP PGUID 12 1 0 0 0 f f f f f f i 3 0 1114 "1114 1186 23" _null_ _null_ _null_ _null_ timestamp_interval_bound_shift _null_ _null_ _null_ n a ));
DESCR("boundary of the interval containing the given value");

/* interval_bound(timestamp, "interval", int4, timestamp) => timestamp */
DATA(insert OID = 7087 ( interval_bound  PGNSP PGUID 12 1 0 0 0 f f f f f f i 4 0 1114 "1114 1186 23 1114" _null_ _null_ _null_ _null_ timestamp_interval_bound_shift_reg _null_ _null_ _null_ n a ));
DESCR("boundary of the interval containing the given value");

/* interval_bound(timestamptz, "interval") => timestamptz */
DATA(insert OID = 7088 ( interval_bound  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 1184 "1184 1186" _null_ _null_ _null_ _null_ timestamptz_interval_bound _null_ _null_ _null_ n a ));
DESCR("boundary of the interval containing the given value");

/* interval_bound(timestamptz, "interval", int4) => timestamptz */
DATA(insert OID = 7089 ( interval_bound  PGNSP PGUID 12 1 0 0 0 f f f f f f i 3 0 1184 "1184 1186 23" _null_ _null_ _null_ _null_ timestamptz_interval_bound_shift _null_ _null_ _null_ n a ));
DESCR("boundary of the interval containing the given value");

/* interval_bound(timestamptz, "interval", int4, timestamptz) => timestamptz */
DATA(insert OID = 7090 ( interval_bound  PGNSP PGUID 12 1 0 0 0 f f f f f f i 4 0 1184 "1184 1186 23 1184" _null_ _null_ _null_ _null_ timestamptz_interval_bound_shift_reg _null_ _null_ _null_ n a ));
DESCR("boundary of the interval containing the given value");


/* Aggregate-related functions */
/* pg_stat_get_backend_waiting_reason(int4) => text */
DATA(insert OID = 7298 ( pg_stat_get_backend_waiting_reason  PGNSP PGUID 12 1 0 0 0 f f f f t f s 1 0 25 "23" _null_ _null_ _null_ _null_ pg_stat_get_backend_waiting_reason _null_ _null_ _null_ n a ));
DESCR("Statistics: Reason backend is waiting for");

/* pg_stat_get_queue_num_exec(oid) => int8 */
DATA(insert OID = 6031 ( pg_stat_get_queue_num_exec  PGNSP PGUID 12 1 0 0 0 f f f f t f s 1 0 20 "26" _null_ _null_ _null_ _null_ pg_stat_get_queue_num_exec _null_ _null_ _null_ n a ));
DESCR("Statistics: Number of queries that executed in queue");

/* pg_stat_get_queue_num_wait(oid) => int8 */
DATA(insert OID = 6032 ( pg_stat_get_queue_num_wait  PGNSP PGUID 12 1 0 0 0 f f f f t f s 1 0 20 "26" _null_ _null_ _null_ _null_ pg_stat_get_queue_num_wait _null_ _null_ _null_ n a ));
DESCR("Statistics: Number of queries that waited in queue");

/* pg_stat_get_queue_elapsed_exec(oid) => int8 */
DATA(insert OID = 6033 ( pg_stat_get_queue_elapsed_exec  PGNSP PGUID 12 1 0 0 0 f f f f t f s 1 0 20 "26" _null_ _null_ _null_ _null_ pg_stat_get_queue_elapsed_exec _null_ _null_ _null_ n a ));
DESCR("Statistics:  Elapsed seconds for queries that executed in queue");

/* pg_stat_get_queue_elapsed_wait(oid) => int8 */
DATA(insert OID = 6034 ( pg_stat_get_queue_elapsed_wait  PGNSP PGUID 12 1 0 0 0 f f f f t f s 1 0 20 "26" _null_ _null_ _null_ _null_ pg_stat_get_queue_elapsed_wait _null_ _null_ _null_ n a ));
DESCR("Statistics:  Elapsed seconds for queries that waited in queue");

/* pg_stat_get_backend_session_id(int4) => int4 */
DATA(insert OID = 6039 ( pg_stat_get_backend_session_id  PGNSP PGUID 12 1 0 0 0 f f f f t f s 1 0 23 "23" _null_ _null_ _null_ _null_ pg_stat_get_backend_session_id _null_ _null_ _null_ n a ));
DESCR("Statistics: Greenplum session id of backend");

/* pg_renice_session(int4, int4) => int4 */
DATA(insert OID = 6042 ( pg_renice_session  PGNSP PGUID 12 1 0 0 0 f f f f t f v 2 0 23 "23 23" _null_ _null_ _null_ _null_ pg_renice_session _null_ _null_ _null_ n a ));
DESCR("change priority of all the backends for a given session id");

/* gp_replication_error() => text */
DATA(insert OID = 7098 ( gp_replication_error  PGNSP PGUID 12 1 0 0 0 f f f f t f v 0 0 25 "" _null_ _null_ _null_ _null_ gp_replication_error _null_ _null_ _null_ n a ));
DESCR("get replication error");

/* pg_terminate_backend(int4, text) => bool */
DATA(insert OID = 7154 ( pg_terminate_backend  PGNSP PGUID 12 1 0 0 0 f f f f t f v 2 0 16 "23 25" _null_ _null_ _null_ _null_ pg_terminate_backend_msg _null_ _null_ _null_ n a ));
DESCR("terminate a server process");

/* pg_resgroup_get_status_kv(IN prop_in text, OUT rsgid oid, OUT prop text, OUT value text) => SETOF pg_catalog.record */
DATA(insert OID = 6065 ( pg_resgroup_get_status_kv  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 1 0 2249 "25" "{25,26,25,25}" "{i,o,o,o}" "{prop_in,rsgid,prop,value}" _null_ pg_resgroup_get_status_kv _null_ _null_ _null_ n a ));
DESCR("statistics: information about resource groups in key-value style");

/* pg_resgroup_get_status(IN groupid oid, OUT groupid oid, OUT num_running int4, OUT num_queueing int4, OUT num_queued int4, OUT num_executed int4, OUT total_queue_duration interval, OUT cpu_usage json, OUT memory_usage json) => SETOF pg_catalog.record */
DATA(insert OID = 6066 ( pg_resgroup_get_status  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 1 0 2249 "26" "{26,26,23,23,23,23,1186,114,114}" "{i,o,o,o,o,o,o,o,o}" "{groupid,groupid,num_running,num_queueing,num_queued,num_executed,total_queue_duration,cpu_usage,memory_usage}" _null_ pg_resgroup_get_status _null_ _null_ _null_ n a ));
DESCR("statistics: information about resource groups");

/* gp_dist_wait_status(OUT segid int4, OUT waiter_dxid xid, OUT holder_dxid xid, OUT holdTillEndXact bool, OUT waiter_lpid int4, OUT holder_lpid int4, OUT waiter_lockmode text, OUT waiter_locktype text, OUT waiter_sessionid int4, OUT holder_sessionid int4) => SETOF pg_catalog.record */
DATA(insert OID = 6036 ( gp_dist_wait_status  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 0 0 2249 "" "{23,28,28,16,23,23,25,25,23,23}" "{o,o,o,o,o,o,o,o,o,o}" "{segid,waiter_dxid,holder_dxid,holdTillEndXact,waiter_lpid,holder_lpid,waiter_lockmode,waiter_locktype,waiter_sessionid,holder_sessionid}" _null_ gp_dist_wait_status _null_ _null_ _null_ n a ));
DESCR("waiting relation information");

/* pg_resqueue_status() => SETOF record */
DATA(insert OID = 6030 ( pg_resqueue_status  PGNSP PGUID 12 1 1000 0 0 f f f f t t v 0 0 2249 "" _null_ _null_ _null_ _null_ pg_resqueue_status _null_ _null_ _null_ n a ));
DESCR("Return resource queue information");

/* pg_resqueue_status_kv() => SETOF record */
DATA(insert OID = 6069 ( pg_resqueue_status_kv  PGNSP PGUID 12 1 1000 0 0 f f f f t t v 0 0 2249 "" _null_ _null_ _null_ _null_ pg_resqueue_status_kv _null_ _null_ _null_ n a ));
DESCR("Return resource queue information");

/* pg_file_read(text, int8, int8) => text */
DATA(insert OID = 6045 ( pg_file_read  PGNSP PGUID 12 1 0 0 0 f f f f t f v 3 0 25 "25 20 20" _null_ _null_ _null_ _null_ pg_read_file _null_ _null_ _null_ n a ));
DESCR("Read text from a file");

/* pg_logfile_rotate() => bool */
DATA(insert OID = 6046 ( pg_logfile_rotate  PGNSP PGUID 12 1 0 0 0 f f f f t f v 0 0 16 "" _null_ _null_ _null_ _null_ pg_rotate_logfile _null_ _null_ _null_ n a ));
DESCR("Rotate log file");

/* pg_file_write(text, text, bool) => int8 */
DATA(insert OID = 6047 ( pg_file_write  PGNSP PGUID 12 1 0 0 0 f f f f t f v 3 0 20 "25 25 16" _null_ _null_ _null_ _null_ pg_file_write _null_ _null_ _null_ n a ));
DESCR("Write text to a file");

/* pg_file_rename(text, text, text) => bool */
DATA(insert OID = 6048 ( pg_file_rename  PGNSP PGUID 12 1 0 0 0 f f f f f f v 3 0 16 "25 25 25" _null_ _null_ _null_ _null_ pg_file_rename _null_ _null_ _null_ n a ));
DESCR("Rename a file");

/* pg_file_unlink(text) => bool */
DATA(insert OID = 6049 ( pg_file_unlink  PGNSP PGUID 12 1 0 0 0 f f f f t f v 1 0 16 "25" _null_ _null_ _null_ _null_ pg_file_unlink _null_ _null_ _null_ n a ));
DESCR("Delete (unlink) a file");

/* pg_logdir_ls() => SETOF record */
DATA(insert OID = 6050 ( pg_logdir_ls  PGNSP PGUID 12 1 1000 0 0 f f f f t t v 0 0 2249 "" _null_ _null_ _null_ _null_ pg_logdir_ls _null_ _null_ _null_ n a ));
DESCR("ls the log dir");

/* pg_file_length(text) => int8 */
DATA(insert OID = 6051 ( pg_file_length  PGNSP PGUID 12 1 0 0 0 f f f f t f v 1 0 20 "25" _null_ _null_ _null_ _null_ pg_file_length _null_ _null_ _null_ n a ));
DESCR("Get the length of a file (via stat)");


/* Aggregates (moved here from pg_aggregate for 7.3)  */

/* MPP Aggregate -- array_sum -- special for prospective customer.  */
/* array_sum(_int4) => _int4 */
DATA(insert OID = 6013 ( array_sum  PGNSP PGUID 12 1 0 0 0 t f f f f f i 1 0 1007 "1007" _null_ _null_ _null_ _null_ aggregate_dummy _null_ _null_ _null_ n a ));
DESCR("array sum aggregate");


/* Greenplum Analytic functions */
/* int2_matrix_accum(_int8, _int2) => _int8 */
DATA(insert OID = 6212 ( int2_matrix_accum  PGNSP PGUID 12 1 0 0 0 f f f f f f i 2 0 1016 "1016 1005" _null_ _null_ _null_ _null_ matrix_add _null_ _null_ _null_ n a ));
DESCR("perform matrix addition on two conformable matrices");

/* int4_matrix_accum(_int8, _int4) => _int8 */
DATA(insert OID = 6213 ( int4_matrix_accum  PGNSP PGUID 12 1 0 0 0 f f f f f f i 2 0 1016 "1016 1007" _null_ _null_ _null_ _null_ matrix_add _null_ _null_ _null_ n a ));
DESCR("perform matrix addition on two conformable matrices");

/* int8_matrix_accum(_int8, _int8) => _int8 */
DATA(insert OID = 6214 ( int8_matrix_accum  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 1016 "1016 1016" _null_ _null_ _null_ _null_ matrix_add _null_ _null_ _null_ n a ));
DESCR("perform matrix addition on two conformable matrices");

/* float8_matrix_accum(_float8, _float8) => _float8 */
DATA(insert OID = 6215 ( float8_matrix_accum  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 1022 "1022 1022" _null_ _null_ _null_ _null_ matrix_add _null_ _null_ _null_ n a ));
DESCR("perform matrix addition on two conformable matrices");

/* sum(_int2) => _int8 */
DATA(insert OID = 6216 ( sum  PGNSP PGUID 12 1 0 0 0 t f f f f f i 1 0 1016 "1005" _null_ _null_ _null_ _null_ aggregate_dummy _null_ _null_ _null_ n a ));
DESCR("sum of matrixes");

/* sum(_int4) => _int8 */
DATA(insert OID = 6217 ( sum  PGNSP PGUID 12 1 0 0 0 t f f f f f i 1 0 1016 "1007" _null_ _null_ _null_ _null_ aggregate_dummy _null_ _null_ _null_ n a ));
DESCR("sum of matrixes");

/* sum(_int8) => _int8 */
DATA(insert OID = 6218 ( sum  PGNSP PGUID 12 1 0 0 0 t f f f f f i 1 0 1016 "1016" _null_ _null_ _null_ _null_ aggregate_dummy _null_ _null_ _null_ n a ));
DESCR("sum of matrixes");

/* sum(_float8) => _float8 */
DATA(insert OID = 6219 ( sum  PGNSP PGUID 12 1 0 0 0 t f f f f f i 1 0 1022 "1022" _null_ _null_ _null_ _null_ aggregate_dummy _null_ _null_ _null_ n a ));
DESCR("sum of matrixes");


/* 3220 - reserved for sum(numeric[])  */
/* int4_pivot_accum(_int4, _text, text, int4) => _int4 */
DATA(insert OID = 6225 ( int4_pivot_accum  PGNSP PGUID 12 1 0 0 0 f f f f f f i 4 0 1007 "1007 1009 25 23" _null_ _null_ _null_ _null_ int4_pivot_accum _null_ _null_ _null_ n a ));
DESCR("aggregate transition function");

/* pivot_sum(_text, text, int4) => _int4 */
DATA(insert OID = 6226 ( pivot_sum  PGNSP PGUID 12 1 0 0 0 t f f f f f i 3 0 1007 "1009 25 23" _null_ _null_ _null_ _null_ aggregate_dummy _null_ _null_ _null_ n a ));
DESCR("pivot sum aggregate");

/* int8_pivot_accum(_int8, _text, text, int8) => _int8 */
DATA(insert OID = 6227 ( int8_pivot_accum  PGNSP PGUID 12 1 0 0 0 f f f f f f i 4 0 1016 "1016 1009 25 20" _null_ _null_ _null_ _null_ int8_pivot_accum _null_ _null_ _null_ n a ));
DESCR("aggregate transition function");

/* pivot_sum(_text, text, int8) => _int8 */
DATA(insert OID = 6228 ( pivot_sum  PGNSP PGUID 12 1 0 0 0 t f f f f f i 3 0 1016 "1009 25 20" _null_ _null_ _null_ _null_ aggregate_dummy _null_ _null_ _null_ n a ));
DESCR("pivot sum aggregate");

/* float8_pivot_accum(_float8, _text, text, float8) => _float8 */
DATA(insert OID = 6229 ( float8_pivot_accum  PGNSP PGUID 12 1 0 0 0 f f f f f f i 4 0 1022 "1022 1009 25 701" _null_ _null_ _null_ _null_ float8_pivot_accum _null_ _null_ _null_ n a ));
DESCR("aggregate transition function");

/* pivot_sum(_text, text, float8) => _float8 */
DATA(insert OID = 6230 ( pivot_sum  PGNSP PGUID 12 1 0 0 0 t f f f f f i 3 0 1022 "1009 25 701" _null_ _null_ _null_ _null_ aggregate_dummy _null_ _null_ _null_ n a ));
DESCR("pivot sum aggregate");


/* 3241-324? reserved for unpivot, see pivot.c  */

/* Greenplum MPP exposed internally-defined functions.  */
/* gp_pgdatabase() => SETOF record */
DATA(insert OID = 6007 ( gp_pgdatabase  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 0 0 2249 "" _null_ _null_ _null_ _null_ gp_pgdatabase__ _null_ _null_ _null_ n a ));
DESCR("view mpp pgdatabase state");

/* gp_execution_segment() => SETOF int4 */
DATA(insert OID = 6022 ( gp_execution_segment  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 0 0 23 "" _null_ _null_ _null_ _null_ mpp_execution_segment _null_ _null_ _null_ n a ));
DESCR("segment executing function");


#define MPP_EXECUTION_SEGMENT_OID 6022
#define MPP_EXECUTION_SEGMENT_TYPE 23
/* pg_highest_oid() => oid */
DATA(insert OID = 6023 ( pg_highest_oid  PGNSP PGUID 12 1 0 0 0 f f f f t f v 0 0 26 "" _null_ _null_ _null_ _null_ pg_highest_oid _null_ _null_ _null_ r a ));
DESCR("Highest oid used so far");

/* gp_distributed_xacts() => SETOF record */
DATA(insert OID = 6035 ( gp_distributed_xacts  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 0 0 2249 "" _null_ _null_ _null_ _null_ gp_distributed_xacts__ _null_ _null_ _null_ n a ));
DESCR("view mpp distributed transaction state");

/* gp_distributed_xid() => xid */
DATA(insert OID = 6037 ( gp_distributed_xid  PGNSP PGUID 12 1 0 0 0 f f f f t f v 0 0 28 "" _null_ _null_ _null_ _null_ gp_distributed_xid _null_ _null_ _null_ n a ));
DESCR("Current distributed transaction id");

/* gp_transaction_log() => SETOF record */
DATA(insert OID = 6043 ( gp_transaction_log  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 0 0 2249 "" _null_ _null_ _null_ _null_ gp_transaction_log _null_ _null_ _null_ n a ));
DESCR("view logged local transaction status");

/* gp_distributed_log() => SETOF record */
DATA(insert OID = 6044 ( gp_distributed_log  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 0 0 2249 "" _null_ _null_ _null_ _null_ gp_distributed_log _null_ _null_ _null_ n a ));
DESCR("view logged distributed transaction status");

/* gp_execution_dbid() => int4 */
DATA(insert OID = 6068 ( gp_execution_dbid  PGNSP PGUID 12 1 0 0 0 f f f f f f v 0 0 23 "" _null_ _null_ _null_ _null_ gp_execution_dbid _null_ _null_ _null_ n a ));
DESCR("dbid executing function");

/* get_ao_distribution(IN rel regclass, OUT segmentid int4, OUT tupcount int8) => SETOF pg_catalog.record */
DATA(insert OID = 7169 ( get_ao_distribution  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 1 0 2249 "2205" "{2205,23,20}" "{i,o,o}" "{rel,segmentid,tupcount}" _null_ get_ao_distribution _null_ _null_ _null_ r a ));
DESCR("show append only table tuple distribution across segment databases");

/* get_ao_compression_ratio(regclass) => float8 */
DATA(insert OID = 7171 ( get_ao_compression_ratio  PGNSP PGUID 12 1 0 0 0 f f f f t f v 1 0 701 "2205" _null_ _null_ _null_ _null_ get_ao_compression_ratio _null_ _null_ _null_ r a ));
DESCR("show append only table compression ratio");

/* gp_update_ao_master_stats(regclass) => int8 */
DATA(insert OID = 7173 ( gp_update_ao_master_stats  PGNSP PGUID 12 1 0 0 0 f f f f f f v 1 0 20 "2205" _null_ _null_ _null_ _null_ gp_update_ao_master_stats _null_ _null_ _null_ m a ));
DESCR("append only tables utility function");


/* the bitmap index access method routines */
/* bmgettuple(internal, internal) => bool */
DATA(insert OID = 7050 ( bmgettuple  PGNSP PGUID 12 1 0 0 0 f f f f t f v 2 0 16 "2281 2281" _null_ _null_ _null_ _null_ bmgettuple _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmgetbitmap(internal, internal) => internal */
DATA(insert OID = 7051 ( bmgetbitmap  PGNSP PGUID 12 1 0 0 0 f f f f t f v 2 0 2281 "2281 2281" _null_ _null_ _null_ _null_ bmgetbitmap _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bminsert(internal, internal, internal, internal, internal, internal) => bool */
DATA(insert OID = 7187 ( bminsert  PGNSP PGUID 12 1 0 0 0 f f f f t f v 6 0 16 "2281 2281 2281 2281 2281 2281" _null_ _null_ _null_ _null_ bminsert _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmbeginscan(internal, internal, internal) => internal */
DATA(insert OID = 7188 ( bmbeginscan  PGNSP PGUID 12 1 0 0 0 f f f f t f v 3 0 2281 "2281 2281 2281" _null_ _null_ _null_ _null_ bmbeginscan _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmrescan(internal, internal) => void */
DATA(insert OID = 7189 ( bmrescan  PGNSP PGUID 12 1 0 0 0 f f f f t f v 2 0 2278 "2281 2281" _null_ _null_ _null_ _null_ bmrescan _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmendscan(internal) => void */
DATA(insert OID = 7190 ( bmendscan  PGNSP PGUID 12 1 0 0 0 f f f f t f v 1 0 2278 "2281" _null_ _null_ _null_ _null_ bmendscan _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmmarkpos(internal) => void */
DATA(insert OID = 7191 ( bmmarkpos  PGNSP PGUID 12 1 0 0 0 f f f f t f v 1 0 2278 "2281" _null_ _null_ _null_ _null_ bmmarkpos _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmrestrpos(internal) => void */
DATA(insert OID = 7192 ( bmrestrpos  PGNSP PGUID 12 1 0 0 0 f f f f t f v 1 0 2278 "2281" _null_ _null_ _null_ _null_ bmrestrpos _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmbuild(internal, internal, internal) => internal */
DATA(insert OID = 7193 ( bmbuild  PGNSP PGUID 12 1 0 0 0 f f f f t f v 3 0 2281 "2281 2281 2281" _null_ _null_ _null_ _null_ bmbuild _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmbuildempty(internal) => internal */
DATA(insert OID = 7011 ( bmbuildempty  PGNSP PGUID 12 1 0 0 0 f f f f t f v 1 0 2281 "2281" _null_ _null_ _null_ _null_ bmbuildempty _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmbulkdelete(internal, internal, internal, internal) => internal */
DATA(insert OID = 7194 ( bmbulkdelete  PGNSP PGUID 12 1 0 0 0 f f f f t f v 4 0 2281 "2281 2281 2281 2281" _null_ _null_ _null_ _null_ bmbulkdelete _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmvacuumcleanup(internal, internal) => internal */
DATA(insert OID = 7195 ( bmvacuumcleanup  PGNSP PGUID 12 1 0 0 0 f f f f t f v 2 0 2281 "2281 2281" _null_ _null_ _null_ _null_ bmvacuumcleanup _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmcostestimate(internal, internal, internal, internal, internal, internal, internal) => void */
DATA(insert OID = 7196 ( bmcostestimate  PGNSP PGUID 12 1 0 0 0 f f f f t f v 7 0 2278 "2281 2281 2281 2281 2281 2281 2281" _null_ _null_ _null_ _null_ bmcostestimate _null_ _null_ _null_ n a ));
DESCR("bitmap(internal)");

/* bmoptions(_text, bool) => bytea */
DATA(insert OID = 7197 ( bmoptions  PGNSP PGUID 12 1 0 0 0 f f f f t f s 2 0 17 "1009 16" _null_ _null_ _null_ _null_ bmoptions _null_ _null_ _null_ n a ));
DESCR("btree(internal)");


/* AOCS functions. */
/* aocsvpinfo_decode(bytea, int4, int4) => int8 */
DATA(insert OID = 9900 ( aocsvpinfo_decode  PGNSP PGUID 12 1 0 0 0 f f f f t f i 3 0 20 "17 23 23" _null_ _null_ _null_ _null_ aocsvpinfo_decode _null_ _null_ _null_ n a ));
DESCR("decode internal AOCSVPInfo struct");


/* raises deprecation error */
/* gp_deprecated() => void */
DATA(insert OID = 9997 ( gp_deprecated  PGNSP PGUID 12 1 0 0 0 f f f f f f i 0 0 2278 "" _null_ _null_ _null_ _null_ gp_deprecated _null_ _null_ _null_ n a ));
DESCR("raises function deprecation error");


/* Fault injection */
/* gp_fault_inject(int4, int8) => int8 */
DATA(insert OID = 9999 ( gp_fault_inject  PGNSP PGUID 12 1 0 0 0 f f f f t f v 2 0 20 "23 20" _null_ _null_ _null_ _null_ gp_fault_inject _null_ _null_ _null_ n a ));
DESCR("Greenplum fault testing only");


/* Analyze related */
/* gp_acquire_sample_rows(oid, int4, bool) => SETOF record */
DATA(insert OID = 6038 ( gp_acquire_sample_rows  PGNSP PGUID 12 1 1000 0 0 f f f f t t v 3 0 2249 "26 23 16" _null_ _null_ _null_ _null_ gp_acquire_sample_rows _null_ _null_ _null_ n s ));
DESCR("Collect a random sample of rows from table");


/* Backoff related */
/* gp_adjust_priority(int4, int4, int4) => int4 */
DATA(insert OID = 5040 ( gp_adjust_priority  PGNSP PGUID 12 1 0 0 0 f f f f t f v 3 0 23 "23 23 23" _null_ _null_ _null_ _null_ gp_adjust_priority_int _null_ _null_ _null_ n a ));
DESCR("change weight of all the backends for a given session id");

/* gp_adjust_priority(int4, int4, text) => int4 */
DATA(insert OID = 5041 ( gp_adjust_priority  PGNSP PGUID 12 1 0 0 0 f f f f t f v 3 0 23 "23 23 25" _null_ _null_ _null_ _null_ gp_adjust_priority_value _null_ _null_ _null_ n a ));
DESCR("change weight of all the backends for a given session id");

/* gp_list_backend_priorities() => SETOF record */
DATA(insert OID = 5042 ( gp_list_backend_priorities  PGNSP PGUID 12 1 1000 0 0 f f f f f t v 0 0 2249 "" _null_ _null_ _null_ _null_ gp_list_backend_priorities _null_ _null_ _null_ n a ));
DESCR("list priorities of backends");


/* Functions to deal with SREH error logs */
/* gp_read_error_log(exttable text, OUT cmdtime timestamptz, OUT relname text, OUT filename text, OUT linenum int4, OUT bytenum int4, OUT errmsg text, OUT rawdata text, OUT rawbytes bytea) => SETOF record */
DATA(insert OID = 7076 ( gp_read_error_log  PGNSP PGUID 12 1 1000 0 0 f f f f t t v 1 0 2249 "25" "{25,1184,25,25,23,23,25,25,17}" "{i,o,o,o,o,o,o,o,o}" "{exttable,cmdtime,relname,filename,linenum,bytenum,errmsg,rawdata,rawbytes}" _null_ gp_read_error_log _null_ _null_ _null_ n s ));
DESCR("read the error log for the specified external table");

/* gp_truncate_error_log(text) => bool */
DATA(insert OID = 7069 ( gp_truncate_error_log  PGNSP PGUID 12 1 0 0 0 f f f f t f v 1 0 16 "25" _null_ _null_ _null_ _null_ gp_truncate_error_log _null_ _null_ _null_ n a ));
DESCR("truncate the error log for the specified external table");


/* elog related */
/* gp_elog(text) => void */
DATA(insert OID = 5044 ( gp_elog  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 2278 "25" _null_ _null_ _null_ _null_ gp_elog _null_ _null_ _null_ n a ));
DESCR("Insert text into the error log");

/* gp_elog(text, bool) => void */
DATA(insert OID = 5045 ( gp_elog  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 2278 "25 16" _null_ _null_ _null_ _null_ gp_elog _null_ _null_ _null_ n a ));
DESCR("Insert text into the error log");


/* Segment and master administration functions, see utils/gp/segadmin.c */
/* gp_add_master_standby(text, text, text) => int2 */
DATA(insert OID = 5046 ( gp_add_master_standby  PGNSP PGUID 12 1 0 0 0 f f f f f f v 3 0 21 "25 25 25" _null_ _null_ _null_ _null_ gp_add_master_standby _null_ _null_ _null_ n a ));
DESCR("Perform the catalog operations necessary for adding a new standby");

/* gp_add_master_standby(text, text, text, int4) => int2 */
DATA(insert OID = 5038 ( gp_add_master_standby  PGNSP PGUID 12 1 0 0 0 f f f f f f v 4 0 21 "25 25 25 23" _null_ _null_ _null_ _null_ gp_add_master_standby_port _null_ _null_ _null_ n a ));
DESCR("Perform the catalog operations necessary for adding a new standby");

/* gp_remove_master_standby() => bool */
DATA(insert OID = 5047 ( gp_remove_master_standby  PGNSP PGUID 12 1 0 0 0 f f f f f f v 0 0 16 "" _null_ _null_ _null_ _null_ gp_remove_master_standby _null_ _null_ _null_ n a ));
DESCR("Remove a master standby from the system catalog");

/* gp_add_segment_primary(text, text, int4, text) => int2 */
DATA(insert OID = 5039 ( gp_add_segment_primary  PGNSP PGUID 12 1 0 0 0 f f f f f f v 4 0 21 "25 25 23 25" _null_ _null_ _null_ _null_ gp_add_segment_primary _null_ _null_ _null_ n a ));
DESCR("Perform the catalog operations necessary for adding a new primary segment");

/* gp_add_segment_mirror(int2, text, text, int4, text) => int2 */
DATA(insert OID = 5048 ( gp_add_segment_mirror  PGNSP PGUID 12 1 0 0 0 f f f f f f v 5 0 21 "21 25 25 23 25" _null_ _null_ _null_ _null_ gp_add_segment_mirror _null_ _null_ _null_ n a ));
DESCR("Perform the catalog operations necessary for adding a new segment mirror");

/* gp_remove_segment_mirror(int2) => bool */
DATA(insert OID = 5049 ( gp_remove_segment_mirror  PGNSP PGUID 12 1 0 0 0 f f f f f f v 1 0 16 "21" _null_ _null_ _null_ _null_ gp_remove_segment_mirror _null_ _null_ _null_ n a ));
DESCR("Remove a segment mirror from the system catalog");

/* gp_add_segment(int2, int2, "char", "char", "char", "char", int4, text, text, text, "char") => int2 */
DATA(insert OID = 5050 ( gp_add_segment  PGNSP PGUID 12 1 0 0 0 f f f f f f v 11 0 21 "21 21 18 18 18 18 23 25 25 25 18" _null_ _null_ _null_ _null_ gp_add_segment _null_ _null_ _null_ n a ));
DESCR("Perform the catalog operations necessary for adding a new segment");

/* gp_expand_lock_catalog() => void */
DATA(insert OID = 5080 ( gp_expand_lock_catalog  PGNSP PGUID 12 1 0 0 0 f f f f f f v 0 0 2278 "" _null_ _null_ _null_ _null_ gp_expand_lock_catalog _null_ _null_ _null_ n a ));
DESCR("Lock catalog changes for gpexpand");

/* gp_expand_bump_version() => void */
DATA(insert OID = 5081 ( gp_expand_bump_version  PGNSP PGUID 12 1 0 0 0 f f f f f f v 0 0 2278 "" _null_ _null_ _null_ _null_ gp_expand_bump_version _null_ _null_ _null_ n a ));
DESCR("bump gpexpand version");

/* gp_remove_segment(int2) => bool */
DATA(insert OID = 5051 ( gp_remove_segment  PGNSP PGUID 12 1 0 0 0 f f f f f f v 1 0 16 "21" _null_ _null_ _null_ _null_ gp_remove_segment _null_ _null_ _null_ n a ));
DESCR("Remove a primary segment from the system catalog");

/* catalog_update_standby_info() => bool */
DATA(insert OID = 5052 ( catalog_update_standby_info  PGNSP PGUID 12 1 0 0 0 f f f f f f v 0 0 16 "" _null_ _null_ _null_ _null_ catalog_update_standby_info _null_ _null_ _null_ n a ));
DESCR("Update the information of a master standby from system catalog");

/* catalog_del_info_by_port(int4) => bool */
DATA(insert OID = 5053 ( catalog_del_info_by_port  PGNSP PGUID 12 1 0 0 0 f f f f f f v 1 0 16 "23" _null_ _null_ _null_ _null_ catalog_del_info_by_port _null_ _null_ _null_ n a ));
DESCR("Delete the information of a secondary master by given port");

/* gp_request_fts_probe_scan() => bool */
DATA(insert OID = 5035 ( gp_request_fts_probe_scan  PGNSP PGUID 12 1 0 0 0 f f f f f f v 0 0 16 "" _null_ _null_ _null_ _null_ gp_request_fts_probe_scan _null_ _null_ _null_ n m ));
DESCR("Request a FTS probe scan and wait for response");

/* cosh(float8) => float8 */
DATA(insert OID = 7539 ( cosh  PGNSP PGUID 12 1 0 0 0 f f f f f f i 1 0 701 "701" _null_ _null_ _null_ _null_ dcosh _null_ _null_ _null_ n a ));
DESCR("Hyperbolic cosine function");

/* sinh(float8) => float8 */
DATA(insert OID = 7540 ( sinh  PGNSP PGUID 12 1 0 0 0 f f f f f f i 1 0 701 "701" _null_ _null_ _null_ _null_ dsinh _null_ _null_ _null_ n a ));
DESCR("Hyperbolic sine function");

/* tanh(float8) => float8 */
DATA(insert OID = 7541 ( tanh  PGNSP PGUID 12 1 0 0 0 f f f f f f i 1 0 701 "701" _null_ _null_ _null_ _null_ dtanh _null_ _null_ _null_ n a ));
DESCR("Hyperbolic tangent function");

/* anytable_in(cstring) => anytable */
DATA(insert OID = 7054 ( anytable_in  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7053 "2275" _null_ _null_ _null_ _null_ anytable_in _null_ _null_ _null_ n a ));
DESCR("anytable type serialization input function");

/* anytable_out(anytable) => cstring */
DATA(insert OID = 7055 ( anytable_out  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 2275 "7053" _null_ _null_ _null_ _null_ anytable_out _null_ _null_ _null_ n a ));
DESCR("anytable type serialization output function");

/* gp_zlib_constructor(internal, internal, bool) => internal */
DATA(insert OID = 9910 ( gp_zlib_constructor  PGNSP PGUID 12 1 0 0 0 f f f f f f v 3 0 2281 "2281 2281 16" _null_ _null_ _null_ _null_ zlib_constructor _null_ _null_ _null_ n a ));
DESCR("zlib constructor");

/* gp_zlib_destructor(internal) => void */
DATA(insert OID = 9911 ( gp_zlib_destructor  PGNSP PGUID 12 1 0 0 0 f f f f f f v 1 0 2278 "2281" _null_ _null_ _null_ _null_ zlib_destructor _null_ _null_ _null_ n a ));
DESCR("zlib destructor");

/* gp_zlib_compress(internal, int4, internal, int4, internal, internal) => void */
DATA(insert OID = 9912 ( gp_zlib_compress  PGNSP PGUID 12 1 0 0 0 f f f f f f i 6 0 2278 "2281 23 2281 23 2281 2281" _null_ _null_ _null_ _null_ zlib_compress _null_ _null_ _null_ n a ));
DESCR("zlib compressor");

/* gp_zlib_decompress(internal, int4, internal, int4, internal, internal) => void */
DATA(insert OID = 9913 ( gp_zlib_decompress  PGNSP PGUID 12 1 0 0 0 f f f f f f i 6 0 2278 "2281 23 2281 23 2281 2281" _null_ _null_ _null_ _null_ zlib_decompress _null_ _null_ _null_ n a ));
DESCR("zlib decompressor");

/* gp_zlib_validator(internal) => void */
DATA(insert OID = 9924 ( gp_zlib_validator  PGNSP PGUID 12 1 0 0 0 f f f f f f i 1 0 2278 "2281" _null_ _null_ _null_ _null_ zlib_validator _null_ _null_ _null_ n a ));
DESCR("zlib compression validator");

/* gp_rle_type_constructor(internal, internal, bool) => internal */
DATA(insert OID = 9914 ( gp_rle_type_constructor  PGNSP PGUID 12 1 0 0 0 f f f f f f v 3 0 2281 "2281 2281 16" _null_ _null_ _null_ _null_ rle_type_constructor _null_ _null_ _null_ n a ));
DESCR("Type specific RLE constructor");

/* gp_rle_type_destructor(internal) => void */
DATA(insert OID = 9915 ( gp_rle_type_destructor  PGNSP PGUID 12 1 0 0 0 f f f f f f v 1 0 2278 "2281" _null_ _null_ _null_ _null_ rle_type_destructor _null_ _null_ _null_ n a ));
DESCR("Type specific RLE destructor");

/* gp_rle_type_compress(internal, int4, internal, int4, internal, internal) => void */
DATA(insert OID = 9916 ( gp_rle_type_compress  PGNSP PGUID 12 1 0 0 0 f f f f f f i 6 0 2278 "2281 23 2281 23 2281 2281" _null_ _null_ _null_ _null_ rle_type_compress _null_ _null_ _null_ n a ));
DESCR("Type specific RLE compressor");

/* gp_rle_type_decompress(internal, int4, internal, int4, internal, internal) => void */
DATA(insert OID = 9917 ( gp_rle_type_decompress  PGNSP PGUID 12 1 0 0 0 f f f f f f i 6 0 2278 "2281 23 2281 23 2281 2281" _null_ _null_ _null_ _null_ rle_type_decompress _null_ _null_ _null_ n a ));
DESCR("Type specific RLE decompressor");

/* gp_rle_type_validator(internal) => void */
DATA(insert OID = 9923 ( gp_rle_type_validator  PGNSP PGUID 12 1 0 0 0 f f f f f f i 1 0 2278 "2281" _null_ _null_ _null_ _null_ rle_type_validator _null_ _null_ _null_ n a ));
DESCR("Type specific RLE compression validator");

/* gp_dummy_compression_constructor(internal, internal, bool) => internal */
DATA(insert OID = 7064 ( gp_dummy_compression_constructor  PGNSP PGUID 12 1 0 0 0 f f f f f f v 3 0 2281 "2281 2281 16" _null_ _null_ _null_ _null_ dummy_compression_constructor _null_ _null_ _null_ n a ));
DESCR("Dummy compression destructor");

/* gp_dummy_compression_destructor(internal) => internal */
DATA(insert OID = 7065 ( gp_dummy_compression_destructor  PGNSP PGUID 12 1 0 0 0 f f f f f f v 1 0 2281 "2281" _null_ _null_ _null_ _null_ dummy_compression_destructor _null_ _null_ _null_ n a ));
DESCR("Dummy compression destructor");

/* gp_dummy_compression_compress(internal, int4, internal, int4, internal, internal) => internal */
DATA(insert OID = 7066 ( gp_dummy_compression_compress  PGNSP PGUID 12 1 0 0 0 f f f f f f v 6 0 2281 "2281 23 2281 23 2281 2281" _null_ _null_ _null_ _null_ dummy_compression_compress _null_ _null_ _null_ n a ));
DESCR("Dummy compression compressor");

/* gp_dummy_compression_decompress(internal, int4, internal, int4, internal, internal) => internal */
DATA(insert OID = 7067 ( gp_dummy_compression_decompress  PGNSP PGUID 12 1 0 0 0 f f f f f f v 6 0 2281 "2281 23 2281 23 2281 2281" _null_ _null_ _null_ _null_ dummy_compression_decompress _null_ _null_ _null_ n a ));
DESCR("Dummy compression decompressor");

/* gp_dummy_compression_validator(internal) => internal */
DATA(insert OID = 7068 ( gp_dummy_compression_validator  PGNSP PGUID 12 1 0 0 0 f f f f f f v 1 0 2281 "2281" _null_ _null_ _null_ _null_ dummy_compression_validator _null_ _null_ _null_ n a ));
DESCR("Dummy compression validator");

/* linear_interpolate( anyelement, anyelement, int8, anyelement, int8) => int8 */
DATA(insert OID = 6072 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 20 "2283 2283 20 2283 20" _null_ _null_ _null_ _null_ linterp_int64 _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, int4, anyelement, int4) => int4 */
DATA(insert OID = 6073 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 23 "2283 2283 23 2283 23" _null_ _null_ _null_ _null_ linterp_int32 _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, int2, anyelement, int2) => int2 */
DATA(insert OID = 6074 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 21 "2283 2283 21 2283 21" _null_ _null_ _null_ _null_ linterp_int16 _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, float8, anyelement, float8) => float8 */
DATA(insert OID = 6075 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 701 "2283 2283 701 2283 701" _null_ _null_ _null_ _null_ linterp_float8 _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, float4, anyelement, float4) => float4 */
DATA(insert OID = 6076 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 700 "2283 2283 700 2283 700" _null_ _null_ _null_ _null_ linterp_float4 _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, date, anyelement, date) => date */
DATA(insert OID = 6077 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 1082 "2283 2283 1082 2283 1082" _null_ _null_ _null_ _null_ linterp_DateADT _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, time, anyelement, time) => time */
DATA(insert OID = 6078 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 1083 "2283 2283 1083 2283 1083" _null_ _null_ _null_ _null_ linterp_TimeADT _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, timestamp, anyelement, timestamp) => timestamp */
DATA(insert OID = 6079 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 1114 "2283 2283 1114 2283 1114" _null_ _null_ _null_ _null_ linterp_Timestamp _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, timestamptz, anyelement, timestamptz) => timestamptz */
DATA(insert OID = 6080 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 1184 "2283 2283 1184 2283 1184" _null_ _null_ _null_ _null_ linterp_TimestampTz _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, "interval", anyelement, "interval") => "interval" */
DATA(insert OID = 6081 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 1186 "2283 2283 1186 2283 1186" _null_ _null_ _null_ _null_ linterp_Interval _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* linear_interpolate( anyelement, anyelement, "numeric", anyelement, "numeric") => "numeric" */
DATA(insert OID = 6082 ( linear_interpolate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 5 0 1700 "2283 2283 1700 2283 1700" _null_ _null_ _null_ _null_ linterp_Numeric _null_ _null_ _null_ n a ));
DESCR("linear interpolation: x, x0,y0, x1,y1");

/* gp_dump_query_oids(text) => text */
DATA(insert OID = 6086 ( gp_dump_query_oids  PGNSP PGUID 12 1 0 0 0 f f f f t f v 1 0 25 "25" _null_ _null_ _null_ _null_ gp_dump_query_oids _null_ _null_ _null_ n a ));
DESCR("List function and relation OIDs that a query depends on, as a JSON object");

/* disable_xform(text) => text */
DATA(insert OID = 6087 ( disable_xform  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 25 "25" _null_ _null_ _null_ _null_ disable_xform _null_ _null_ _null_ n a ));
DESCR("disables transformations in the optimizer");

/* enable_xform(text) => text */
DATA(insert OID = 6088 ( enable_xform  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 25 "25" _null_ _null_ _null_ _null_ enable_xform _null_ _null_ _null_ n a ));
DESCR("enables transformations in the optimizer");

/* gp_opt_version() => text */
DATA(insert OID = 6089 ( gp_opt_version  PGNSP PGUID 12 1 0 0 0 f f f f t f i 0 0 25 "" _null_ _null_ _null_ _null_ gp_opt_version _null_ _null_ _null_ n a ));
DESCR("Returns the optimizer and gpos library versions");


  /* functions for the complex data type */
/* complex_in(cstring) => complex */
DATA(insert OID = 6460 ( complex_in  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "2275" _null_ _null_ _null_ _null_ complex_in _null_ _null_ _null_ n a ));
DESCR("I/O");

/* complex_out(complex) => cstring */
DATA(insert OID = 6548 ( complex_out  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 2275 "7198" _null_ _null_ _null_ _null_ complex_out _null_ _null_ _null_ n a ));
DESCR("I/O");

/* complex_recv(internal) => complex */
DATA(insert OID = 6549 ( complex_recv  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "2281" _null_ _null_ _null_ _null_ complex_recv _null_ _null_ _null_ n a ));
DESCR("I/O");

/* complex_send(complex) => bytea */
DATA(insert OID = 6550 ( complex_send  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 17 "7198" _null_ _null_ _null_ _null_ complex_send _null_ _null_ _null_ n a ));
DESCR("I/O");

/* complex(float8, float8) => complex */
DATA(insert OID = 6551 ( complex  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "701 701" _null_ _null_ _null_ _null_ construct_complex _null_ _null_ _null_ n a ));
DESCR("constructs a complex number with given real part and imaginary part");

/* complex_trig(float8, float8) => complex */
DATA(insert OID = 6552 ( complex_trig  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "701 701" _null_ _null_ _null_ _null_ construct_complex_trig _null_ _null_ _null_ n a ));
DESCR("constructs a complex number with given magnitude and phase");

/* re(complex) => float8 */
DATA(insert OID = 6553 ( re  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 701 "7198" _null_ _null_ _null_ _null_ complex_re _null_ _null_ _null_ n a ));
DESCR("returns the real part of the argument");

/* im(complex) => float8 */
DATA(insert OID = 6554 ( im  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 701 "7198" _null_ _null_ _null_ _null_ complex_im _null_ _null_ _null_ n a ));
DESCR("returns the imaginary part of the argument");

/* radians(complex) => float8 */
DATA(insert OID = 6555 ( radians  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 701 "7198" _null_ _null_ _null_ _null_ complex_arg _null_ _null_ _null_ n a ));
DESCR("returns the phase of the argument");

/* complexabs(complex) => float8 */
DATA(insert OID = 6556 ( complexabs  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 701 "7198" _null_ _null_ _null_ _null_ complex_mag _null_ _null_ _null_ n a ));

/* abs(complex) => float8 */
DATA(insert OID = 6557 ( abs  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 701 "7198" _null_ _null_ _null_ _null_ complex_mag _null_ _null_ _null_ n a ));
DESCR("returns the magnitude of the argument");

/* conj(complex) => complex */
DATA(insert OID = 6558 ( conj  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_conj _null_ _null_ _null_ n a ));
DESCR("returns the conjunction of the argument");

/* hashcomplex(complex) => int4 */
DATA(insert OID = 6559 ( hashcomplex  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "7198" _null_ _null_ _null_ _null_ complex_hash _null_ _null_ _null_ n a ));
DESCR("hash");

/* complex_eq(complex, complex) => bool */
DATA(insert OID = 6560 ( complex_eq  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 16 "7198 7198" _null_ _null_ _null_ _null_ complex_eq _null_ _null_ _null_ n a ));

/* complex_ne(complex, complex) => bool */
DATA(insert OID = 6561 ( complex_ne  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 16 "7198 7198" _null_ _null_ _null_ _null_ complex_ne _null_ _null_ _null_ n a ));

/* complex_pl(complex, complex) => complex */
DATA(insert OID = 6562 ( complex_pl  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "7198 7198" _null_ _null_ _null_ _null_ complex_pl _null_ _null_ _null_ n a ));

/* complex_up(complex) => complex */
DATA(insert OID = 6563 ( complex_up  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_up _null_ _null_ _null_ n a ));

/* complex_mi(complex, complex) => complex */
DATA(insert OID = 6564 ( complex_mi  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "7198 7198" _null_ _null_ _null_ _null_ complex_mi _null_ _null_ _null_ n a ));

/* complex_um(complex) => complex */
DATA(insert OID = 6565 ( complex_um  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_um _null_ _null_ _null_ n a ));

/* complex_mul(complex, complex) => complex */
DATA(insert OID = 6566 ( complex_mul  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "7198 7198" _null_ _null_ _null_ _null_ complex_mul _null_ _null_ _null_ n a ));

/* complex_div(complex, complex) => complex */
DATA(insert OID = 6567 ( complex_div  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "7198 7198" _null_ _null_ _null_ _null_ complex_div _null_ _null_ _null_ n a ));

/* complex_power(complex, complex) => complex */
DATA(insert OID = 6568 ( complex_power  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "7198 7198" _null_ _null_ _null_ _null_ complex_pow _null_ _null_ _null_ n a ));

/* complex_sqrt(complex) => complex */
DATA(insert OID = 6569 ( complex_sqrt  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_sqrt _null_ _null_ _null_ n a ));

/* complex_cbrt(complex) => complex */
DATA(insert OID = 6570 ( complex_cbrt  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_cbrt _null_ _null_ _null_ n a ));

/* degrees(complex) => float8 */
DATA(insert OID = 6571 ( degrees  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 701 "7198" _null_ _null_ _null_ _null_ complex_degrees _null_ _null_ _null_ n a ));
DESCR("phase to degrees");

/* exp(complex) => complex */
DATA(insert OID = 6572 ( exp  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_exp _null_ _null_ _null_ n a ));
DESCR("natural exponential (e^x)");

/* ln(complex) => complex */
DATA(insert OID = 3573 ( ln  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_ln _null_ _null_ _null_ n a ));
DESCR("natural logarithm");

/* log(complex) => complex */
DATA(insert OID = 3574 ( log  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_log10 _null_ _null_ _null_ n a ));
DESCR("base 10 logarithm");

/* log(complex, complex) => complex */
DATA(insert OID = 3575 ( log  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "7198 7198" _null_ _null_ _null_ _null_ complex_log _null_ _null_ _null_ n a ));
DESCR("logarithm base arg1 of arg2");

/* acos(complex) => complex */
DATA(insert OID = 3576 ( acos  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_acos _null_ _null_ _null_ n a ));
DESCR("acos");

/* asin(complex) => complex */
DATA(insert OID = 3577 ( asin  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_asin _null_ _null_ _null_ n a ));
DESCR("asin");

/* atan(complex) => complex */
DATA(insert OID = 3578 ( atan  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_atan _null_ _null_ _null_ n a ));
DESCR("atan");

/* cos(complex) => complex */
DATA(insert OID = 3579 ( cos  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_cos _null_ _null_ _null_ n a ));
DESCR("cos");

/* cot(complex) => complex */
DATA(insert OID = 3580 ( cot  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_cot _null_ _null_ _null_ n a ));
DESCR("cot");

/* sin(complex) => complex */
DATA(insert OID = 3581 ( sin  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_sin _null_ _null_ _null_ n a ));
DESCR("sin");

/* tan(complex) => complex */
DATA(insert OID = 3582 ( tan  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_tan _null_ _null_ _null_ n a ));
DESCR("tan");

/* dotproduct(_complex, _complex) => complex */
DATA(insert OID = 3583 ( dotproduct  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "7199 7199" _null_ _null_ _null_ _null_ complex_dot_product _null_ _null_ _null_ n a ));
DESCR("dot product");

/* float82complex(float8) => complex */
DATA(insert OID = 3584 ( float82complex  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "701" _null_ _null_ _null_ _null_ float82complex _null_ _null_ _null_ n a ));
DESCR("(internal) type cast from float8 to complex");

/* float42complex(float4) => complex */
DATA(insert OID = 3585 ( float42complex  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "700" _null_ _null_ _null_ _null_ float42complex _null_ _null_ _null_ n a ));
DESCR("(internal) type cast from float4 to complex");

/* int82complex(int8) => complex */
DATA(insert OID = 3586 ( int82complex  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "20" _null_ _null_ _null_ _null_ int82complex _null_ _null_ _null_ n a ));
DESCR("(internal) type cast from int8 to complex");

/* int42complex(int4) => complex */
DATA(insert OID = 3587 ( int42complex  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "23" _null_ _null_ _null_ _null_ int42complex _null_ _null_ _null_ n a ));
DESCR("(internal) type cast from int4 to complex");

/* int22complex(int2) => complex */
DATA(insert OID = 3588 ( int22complex  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "21" _null_ _null_ _null_ _null_ int22complex _null_ _null_ _null_ n a ));
DESCR("(internal) type cast from int2 to complex");

/* power(complex, complex) => complex */
DATA(insert OID = 3589 ( power  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 7198 "7198 7198" _null_ _null_ _null_ _null_ complex_pow _null_ _null_ _null_ n a ));
DESCR("exponentiation (x^y)");

/* sqrt(complex) => complex */
DATA(insert OID = 3590 ( sqrt  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_sqrt _null_ _null_ _null_ n a ));
DESCR("squre root");

/* cbrt(complex) => complex */
DATA(insert OID = 3591 ( cbrt  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "7198" _null_ _null_ _null_ _null_ complex_cbrt _null_ _null_ _null_ n a ));
DESCR("cube root");

/* numeric2point("numeric") => complex */
DATA(insert OID = 7597 ( numeric2point  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7198 "1700" _null_ _null_ _null_ _null_ numeric2complex _null_ _null_ _null_ n a ));
DESCR("(internal) type cast from numeric to complex");

/* complex_lt(complex, complex) => bool */
DATA(insert OID = 7598 ( complex_lt  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 16 "7198 7198" _null_ _null_ _null_ _null_ complex_lt _null_ _null_ _null_ n a ));

/* complex_gt(complex, complex) => bool */
DATA(insert OID = 6594 ( complex_gt  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 16 "7198 7198" _null_ _null_ _null_ _null_ complex_gt _null_ _null_ _null_ n a ));

/* complex_lte(complex, complex) => bool */
DATA(insert OID = 6595 ( complex_lte  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 16 "7198 7198" _null_ _null_ _null_ _null_ complex_lte _null_ _null_ _null_ n a ));

/* complex_gte(complex, complex) => bool */
DATA(insert OID = 7596 ( complex_gte  PGNSP PGUID 12 1 0 0 0 f f f f t f i 2 0 16 "7198 7198" _null_ _null_ _null_ _null_ complex_gte _null_ _null_ _null_ n a ));

/* gp_hyperloglog_in(value cstring) => gp_hyperloglog_estimator */
DATA(insert OID = 7158 ( gp_hyperloglog_in  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7157 "2275" _null_ _null_ "{value}" _null_ gp_hyperloglog_in _null_ _null_ _null_ n a ));
DESCR("Decode a bytea into gp_hyperloglog counter");

/* gp_hyperloglog_out(counter gp_hyperloglog_estimator) => cstring */
DATA(insert OID = 7159 ( gp_hyperloglog_out  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 2275 "7157" _null_ _null_ "{counter}" _null_ gp_hyperloglog_out _null_ _null_ _null_ n a ));
DESCR("Encode a gp_hyperloglog counter into a bytea");

/* gp_hyperloglog_comp(counter gp_hyperloglog_estimator) => gp_hyperloglog_estimator */
DATA(insert OID = 7160 ( gp_hyperloglog_comp  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 7157 "7157" _null_ _null_ "{counter}" _null_ gp_hyperloglog_comp _null_ _null_ _null_ n a ));
DESCR("Compress a gp_hyperloglog counter");

/* gp_hyperloglog_merge(estimator1 gp_hyperloglog_estimator, estimator2 gp_hyperloglog_estimator) => gp_hyperloglog_estimator */
DATA(insert OID = 7161 ( gp_hyperloglog_merge  PGNSP PGUID 12 1 0 0 0 f f f f f f i 2 0 7157 "7157 7157" _null_ _null_ "{estimator1,estimator2}" _null_ gp_hyperloglog_merge _null_ _null_ _null_ n a ));
DESCR("Merge two gp_hyperloglog counters into one");

/* gp_hyperloglog_get_estimate(counter gp_hyperloglog_estimator) => float8 */
DATA(insert OID = 7162 ( gp_hyperloglog_get_estimate  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 701 "7157" _null_ _null_ "{counter}" _null_ gp_hyperloglog_get_estimate _null_ _null_ _null_ n a ));
DESCR("Estimates the number of distinct values stored in a gp_hyperloglog counter");

/* gp_hyperloglog_add_item_agg_default(counter gp_hyperloglog_estimator, item anyelement) => gp_hyperloglog_estimator */
DATA(insert OID = 7163 ( gp_hyperloglog_add_item_agg_default  PGNSP PGUID 12 1 0 0 0 f f f f f f i 2 0 7157 "7157 2283" _null_ _null_ "{counter,item}" _null_ gp_hyperloglog_add_item_agg_default _null_ _null_ _null_ n a ));
DESCR("Includes a data value into a gp_hyperloglog counter");

/* gp_hyperloglog_accum(anyelement) => gp_hyperloglog_estimator */
DATA(insert OID = 7164 ( gp_hyperloglog_accum  PGNSP PGUID 12 1 0 0 0 t f f f f f i 1 0 7157 "2283" _null_ _null_ _null_ _null_ aggregate_dummy _null_ _null_ _null_ n a ));
DESCR("Adds every data value to a gp_hyperloglog counter and returns the counter");

/* pg_get_table_distributedby(oid) => text */
DATA(insert OID = 6232 ( pg_get_table_distributedby  PGNSP PGUID 12 1 0 0 0 f f f f t f s 1 0 25 "26" _null_ _null_ _null_ _null_ pg_get_table_distributedby _null_ _null_ _null_ n a ));
DESCR("deparse DISTRIBUTED BY clause for a given relation");


/* hash functions for a few built-in datatypes that are missing hash support */
/* in upstream for some reason. */
/* hashtid(tid) => int4 */
DATA(insert OID = 6114 ( hashtid  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "27" _null_ _null_ _null_ _null_ hashtid _null_ _null_ _null_ n a ));
DESCR("hash function for tid");

/* bithash(bit) => int4 */
DATA(insert OID = 6117 ( bithash  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1560" _null_ _null_ _null_ _null_ bithash _null_ _null_ _null_ n a ));
DESCR("hash function for bit");

/* bithash(varbit) => int4 */
DATA(insert OID = 6118 ( bithash  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1562" _null_ _null_ _null_ _null_ bithash _null_ _null_ _null_ n a ));
DESCR("hash function for bit varbit");


/* Legacy cdbhash functions. */
/* cdblegacyhash_int2(int2) => int4 */
DATA(insert OID = 6140 ( cdblegacyhash_int2  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "21" _null_ _null_ _null_ _null_ cdblegacyhash_int2 _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_int4(int4) => int4 */
DATA(insert OID = 6141 ( cdblegacyhash_int4  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "23" _null_ _null_ _null_ _null_ cdblegacyhash_int4 _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_int8(int8) => int4 */
DATA(insert OID = 6142 ( cdblegacyhash_int8  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "20" _null_ _null_ _null_ _null_ cdblegacyhash_int8 _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_float4(float4) => int4 */
DATA(insert OID = 6143 ( cdblegacyhash_float4  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "700" _null_ _null_ _null_ _null_ cdblegacyhash_float4 _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_float8(float8) => int4 */
DATA(insert OID = 6144 ( cdblegacyhash_float8  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "701" _null_ _null_ _null_ _null_ cdblegacyhash_float8 _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_numeric(numeric) => int4 */
DATA(insert OID = 6145 ( cdblegacyhash_numeric  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1700" _null_ _null_ _null_ _null_ cdblegacyhash_numeric _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_char(char) => int4 */
DATA(insert OID = 6146 ( cdblegacyhash_char  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "18" _null_ _null_ _null_ _null_ cdblegacyhash_char _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_text(text) => int4 */
DATA(insert OID = 6147 ( cdblegacyhash_text  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "25" _null_ _null_ _null_ _null_ cdblegacyhash_text _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_bpchar(bpchar) => int4 */
DATA(insert OID = 6148 ( cdblegacyhash_bpchar  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1042" _null_ _null_ _null_ _null_ cdblegacyhash_text _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_bytea(bytea) => int4 */
DATA(insert OID = 6149 ( cdblegacyhash_bytea  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "17" _null_ _null_ _null_ _null_ cdblegacyhash_bytea _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_name(name) => int4 */
DATA(insert OID = 6150 ( cdblegacyhash_name  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "19" _null_ _null_ _null_ _null_ cdblegacyhash_name _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_oid(oid) => int4 */
DATA(insert OID = 6151 ( cdblegacyhash_oid  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "26" _null_ _null_ _null_ _null_ cdblegacyhash_oid _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_tid(tid) => int4 */
DATA(insert OID = 6152 ( cdblegacyhash_tid  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "27" _null_ _null_ _null_ _null_ cdblegacyhash_tid _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_timestamp(timestamp) => int4 */
DATA(insert OID = 6153 ( cdblegacyhash_timestamp  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1114" _null_ _null_ _null_ _null_ cdblegacyhash_timestamp _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_timestamptz(timestamptz) => int4 */
DATA(insert OID = 6154 ( cdblegacyhash_timestamptz  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1184" _null_ _null_ _null_ _null_ cdblegacyhash_timestamptz _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_date(date) => int4 */
DATA(insert OID = 6155 ( cdblegacyhash_date  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1082" _null_ _null_ _null_ _null_ cdblegacyhash_date _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_time(time) => int4 */
DATA(insert OID = 6156 ( cdblegacyhash_time  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1083" _null_ _null_ _null_ _null_ cdblegacyhash_time _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_timetz(timetz) => int4 */
DATA(insert OID = 6157 ( cdblegacyhash_timetz  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1266" _null_ _null_ _null_ _null_ cdblegacyhash_timetz _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_interval(interval) => int4 */
DATA(insert OID = 6158 ( cdblegacyhash_interval  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1186" _null_ _null_ _null_ _null_ cdblegacyhash_interval _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_abstime(abstime) => int4 */
DATA(insert OID = 6159 ( cdblegacyhash_abstime  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "702" _null_ _null_ _null_ _null_ cdblegacyhash_abstime _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_reltime(reltime) => int4 */
DATA(insert OID = 6160 ( cdblegacyhash_reltime  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "703" _null_ _null_ _null_ _null_ cdblegacyhash_reltime _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_tinterval(tinterval) => int4 */
DATA(insert OID = 6161 ( cdblegacyhash_tinterval  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "704" _null_ _null_ _null_ _null_ cdblegacyhash_tinterval _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_inet(inet) => int4 */
DATA(insert OID = 6162 ( cdblegacyhash_inet  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "869" _null_ _null_ _null_ _null_ cdblegacyhash_inet _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_macaddr(macaddr) => int4 */
DATA(insert OID = 6163 ( cdblegacyhash_macaddr  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "829" _null_ _null_ _null_ _null_ cdblegacyhash_macaddr _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_bit(bit) => int4 */
DATA(insert OID = 6164 ( cdblegacyhash_bit  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "1560" _null_ _null_ _null_ _null_ cdblegacyhash_bit _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_bool(bool) => int4 */
DATA(insert OID = 6165 ( cdblegacyhash_bool  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "16" _null_ _null_ _null_ _null_ cdblegacyhash_bool _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_array(anyarray) => int4 */
DATA(insert OID = 6166 ( cdblegacyhash_array  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "2277" _null_ _null_ _null_ _null_ cdblegacyhash_array _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_oidvector(oidvector) => int4 */
DATA(insert OID = 6167 ( cdblegacyhash_oidvector  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "30" _null_ _null_ _null_ _null_ cdblegacyhash_oidvector _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_cash(money) => int4 */
DATA(insert OID = 6168 ( cdblegacyhash_cash  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "790" _null_ _null_ _null_ _null_ cdblegacyhash_cash _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_complex(complex) => int4 */
DATA(insert OID = 6169 ( cdblegacyhash_complex  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "7198" _null_ _null_ _null_ _null_ cdblegacyhash_complex _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_uuid(uuid) => int4 */
DATA(insert OID = 6170 ( cdblegacyhash_uuid  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "2950" _null_ _null_ _null_ _null_ cdblegacyhash_uuid _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");

/* cdblegacyhash_anyenum(anyenum) => int4 */
DATA(insert OID = 6171 ( cdblegacyhash_anyenum  PGNSP PGUID 12 1 0 0 0 f f f f t f i 1 0 23 "3500" _null_ _null_ _null_ _null_ cdblegacyhash_anyenum _null_ _null_ _null_ n a ));
DESCR("Legacy cdbhash function");


/* TIDYCAT_END_PG_PROC_GEN */
