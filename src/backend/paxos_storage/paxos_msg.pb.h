// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paxos_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_paxos_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_paxos_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_paxos_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_paxos_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_paxos_5fmsg_2eproto;
namespace phxpaxos {
class AcceptorStateData;
class AcceptorStateDataDefaultTypeInternal;
extern AcceptorStateDataDefaultTypeInternal _AcceptorStateData_default_instance_;
class BatchPaxosValues;
class BatchPaxosValuesDefaultTypeInternal;
extern BatchPaxosValuesDefaultTypeInternal _BatchPaxosValues_default_instance_;
class CheckpointMsg;
class CheckpointMsgDefaultTypeInternal;
extern CheckpointMsgDefaultTypeInternal _CheckpointMsg_default_instance_;
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class MasterOperator;
class MasterOperatorDefaultTypeInternal;
extern MasterOperatorDefaultTypeInternal _MasterOperator_default_instance_;
class MasterVariables;
class MasterVariablesDefaultTypeInternal;
extern MasterVariablesDefaultTypeInternal _MasterVariables_default_instance_;
class PaxosMsg;
class PaxosMsgDefaultTypeInternal;
extern PaxosMsgDefaultTypeInternal _PaxosMsg_default_instance_;
class PaxosNodeInfo;
class PaxosNodeInfoDefaultTypeInternal;
extern PaxosNodeInfoDefaultTypeInternal _PaxosNodeInfo_default_instance_;
class PaxosValue;
class PaxosValueDefaultTypeInternal;
extern PaxosValueDefaultTypeInternal _PaxosValue_default_instance_;
class SystemVariables;
class SystemVariablesDefaultTypeInternal;
extern SystemVariablesDefaultTypeInternal _SystemVariables_default_instance_;
}  // namespace phxpaxos
PROTOBUF_NAMESPACE_OPEN
template<> ::phxpaxos::AcceptorStateData* Arena::CreateMaybeMessage<::phxpaxos::AcceptorStateData>(Arena*);
template<> ::phxpaxos::BatchPaxosValues* Arena::CreateMaybeMessage<::phxpaxos::BatchPaxosValues>(Arena*);
template<> ::phxpaxos::CheckpointMsg* Arena::CreateMaybeMessage<::phxpaxos::CheckpointMsg>(Arena*);
template<> ::phxpaxos::Header* Arena::CreateMaybeMessage<::phxpaxos::Header>(Arena*);
template<> ::phxpaxos::MasterOperator* Arena::CreateMaybeMessage<::phxpaxos::MasterOperator>(Arena*);
template<> ::phxpaxos::MasterVariables* Arena::CreateMaybeMessage<::phxpaxos::MasterVariables>(Arena*);
template<> ::phxpaxos::PaxosMsg* Arena::CreateMaybeMessage<::phxpaxos::PaxosMsg>(Arena*);
template<> ::phxpaxos::PaxosNodeInfo* Arena::CreateMaybeMessage<::phxpaxos::PaxosNodeInfo>(Arena*);
template<> ::phxpaxos::PaxosValue* Arena::CreateMaybeMessage<::phxpaxos::PaxosValue>(Arena*);
template<> ::phxpaxos::SystemVariables* Arena::CreateMaybeMessage<::phxpaxos::SystemVariables>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace phxpaxos {

// ===================================================================

class Header :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }
  inline void Swap(Header* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const final {
    return CreateMaybeMessage<Header>(nullptr);
  }

  Header* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Header>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Header* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.Header";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGidFieldNumber = 1,
    kRidFieldNumber = 2,
    kCmdidFieldNumber = 3,
    kVersionFieldNumber = 4,
  };
  // required uint64 gid = 1;
  bool has_gid() const;
  void clear_gid();
  ::PROTOBUF_NAMESPACE_ID::uint64 gid() const;
  void set_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 rid = 2;
  bool has_rid() const;
  void clear_rid();
  ::PROTOBUF_NAMESPACE_ID::uint64 rid() const;
  void set_rid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required int32 cmdid = 3;
  bool has_cmdid() const;
  void clear_cmdid();
  ::PROTOBUF_NAMESPACE_ID::int32 cmdid() const;
  void set_cmdid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 version = 4;
  bool has_version() const;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::int32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:phxpaxos.Header)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 rid_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmdid_;
  ::PROTOBUF_NAMESPACE_ID::int32 version_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class PaxosMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.PaxosMsg) */ {
 public:
  PaxosMsg();
  virtual ~PaxosMsg();

  PaxosMsg(const PaxosMsg& from);
  PaxosMsg(PaxosMsg&& from) noexcept
    : PaxosMsg() {
    *this = ::std::move(from);
  }

  inline PaxosMsg& operator=(const PaxosMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline PaxosMsg& operator=(PaxosMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PaxosMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PaxosMsg* internal_default_instance() {
    return reinterpret_cast<const PaxosMsg*>(
               &_PaxosMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PaxosMsg& a, PaxosMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(PaxosMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PaxosMsg* New() const final {
    return CreateMaybeMessage<PaxosMsg>(nullptr);
  }

  PaxosMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PaxosMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PaxosMsg& from);
  void MergeFrom(const PaxosMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PaxosMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.PaxosMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 6,
    kSystemVariablesFieldNumber = 14,
    kMasterVariablesFieldNumber = 15,
    kInstanceIDFieldNumber = 2,
    kNodeIDFieldNumber = 3,
    kProposalIDFieldNumber = 4,
    kProposalNodeIDFieldNumber = 5,
    kMsgTypeFieldNumber = 1,
    kLastChecksumFieldNumber = 12,
    kPreAcceptIDFieldNumber = 7,
    kPreAcceptNodeIDFieldNumber = 8,
    kRejectByPromiseIDFieldNumber = 9,
    kNowInstanceIDFieldNumber = 10,
    kMinChosenInstanceIDFieldNumber = 11,
    kFlagFieldNumber = 13,
  };
  // optional bytes Value = 6;
  bool has_value() const;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);

  // optional bytes SystemVariables = 14;
  bool has_systemvariables() const;
  void clear_systemvariables();
  const std::string& systemvariables() const;
  void set_systemvariables(const std::string& value);
  void set_systemvariables(std::string&& value);
  void set_systemvariables(const char* value);
  void set_systemvariables(const void* value, size_t size);
  std::string* mutable_systemvariables();
  std::string* release_systemvariables();
  void set_allocated_systemvariables(std::string* systemvariables);

  // optional bytes MasterVariables = 15;
  bool has_mastervariables() const;
  void clear_mastervariables();
  const std::string& mastervariables() const;
  void set_mastervariables(const std::string& value);
  void set_mastervariables(std::string&& value);
  void set_mastervariables(const char* value);
  void set_mastervariables(const void* value, size_t size);
  std::string* mutable_mastervariables();
  std::string* release_mastervariables();
  void set_allocated_mastervariables(std::string* mastervariables);

  // optional uint64 InstanceID = 2;
  bool has_instanceid() const;
  void clear_instanceid();
  ::PROTOBUF_NAMESPACE_ID::uint64 instanceid() const;
  void set_instanceid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 NodeID = 3;
  bool has_nodeid() const;
  void clear_nodeid();
  ::PROTOBUF_NAMESPACE_ID::uint64 nodeid() const;
  void set_nodeid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 ProposalID = 4;
  bool has_proposalid() const;
  void clear_proposalid();
  ::PROTOBUF_NAMESPACE_ID::uint64 proposalid() const;
  void set_proposalid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 ProposalNodeID = 5;
  bool has_proposalnodeid() const;
  void clear_proposalnodeid();
  ::PROTOBUF_NAMESPACE_ID::uint64 proposalnodeid() const;
  void set_proposalnodeid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required int32 MsgType = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype() const;
  void set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional uint32 LastChecksum = 12;
  bool has_lastchecksum() const;
  void clear_lastchecksum();
  ::PROTOBUF_NAMESPACE_ID::uint32 lastchecksum() const;
  void set_lastchecksum(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint64 PreAcceptID = 7;
  bool has_preacceptid() const;
  void clear_preacceptid();
  ::PROTOBUF_NAMESPACE_ID::uint64 preacceptid() const;
  void set_preacceptid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 PreAcceptNodeID = 8;
  bool has_preacceptnodeid() const;
  void clear_preacceptnodeid();
  ::PROTOBUF_NAMESPACE_ID::uint64 preacceptnodeid() const;
  void set_preacceptnodeid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 RejectByPromiseID = 9;
  bool has_rejectbypromiseid() const;
  void clear_rejectbypromiseid();
  ::PROTOBUF_NAMESPACE_ID::uint64 rejectbypromiseid() const;
  void set_rejectbypromiseid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 NowInstanceID = 10;
  bool has_nowinstanceid() const;
  void clear_nowinstanceid();
  ::PROTOBUF_NAMESPACE_ID::uint64 nowinstanceid() const;
  void set_nowinstanceid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 MinChosenInstanceID = 11;
  bool has_minchoseninstanceid() const;
  void clear_minchoseninstanceid();
  ::PROTOBUF_NAMESPACE_ID::uint64 minchoseninstanceid() const;
  void set_minchoseninstanceid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint32 Flag = 13;
  bool has_flag() const;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:phxpaxos.PaxosMsg)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr systemvariables_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mastervariables_;
  ::PROTOBUF_NAMESPACE_ID::uint64 instanceid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nodeid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 proposalid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 proposalnodeid_;
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lastchecksum_;
  ::PROTOBUF_NAMESPACE_ID::uint64 preacceptid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 preacceptnodeid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 rejectbypromiseid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nowinstanceid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 minchoseninstanceid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flag_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class CheckpointMsg :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.CheckpointMsg) */ {
 public:
  CheckpointMsg();
  virtual ~CheckpointMsg();

  CheckpointMsg(const CheckpointMsg& from);
  CheckpointMsg(CheckpointMsg&& from) noexcept
    : CheckpointMsg() {
    *this = ::std::move(from);
  }

  inline CheckpointMsg& operator=(const CheckpointMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckpointMsg& operator=(CheckpointMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CheckpointMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckpointMsg* internal_default_instance() {
    return reinterpret_cast<const CheckpointMsg*>(
               &_CheckpointMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CheckpointMsg& a, CheckpointMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CheckpointMsg* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CheckpointMsg* New() const final {
    return CreateMaybeMessage<CheckpointMsg>(nullptr);
  }

  CheckpointMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CheckpointMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CheckpointMsg& from);
  void MergeFrom(const CheckpointMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckpointMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.CheckpointMsg";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilePathFieldNumber = 8,
    kBufferFieldNumber = 11,
    kNodeIDFieldNumber = 2,
    kMsgTypeFieldNumber = 1,
    kFlagFieldNumber = 3,
    kUUIDFieldNumber = 4,
    kSequenceFieldNumber = 5,
    kCheckpointInstanceIDFieldNumber = 6,
    kChecksumFieldNumber = 7,
    kSMIDFieldNumber = 9,
    kOffsetFieldNumber = 10,
  };
  // optional string FilePath = 8;
  bool has_filepath() const;
  void clear_filepath();
  const std::string& filepath() const;
  void set_filepath(const std::string& value);
  void set_filepath(std::string&& value);
  void set_filepath(const char* value);
  void set_filepath(const char* value, size_t size);
  std::string* mutable_filepath();
  std::string* release_filepath();
  void set_allocated_filepath(std::string* filepath);

  // optional bytes Buffer = 11;
  bool has_buffer() const;
  void clear_buffer();
  const std::string& buffer() const;
  void set_buffer(const std::string& value);
  void set_buffer(std::string&& value);
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  std::string* mutable_buffer();
  std::string* release_buffer();
  void set_allocated_buffer(std::string* buffer);

  // required uint64 NodeID = 2;
  bool has_nodeid() const;
  void clear_nodeid();
  ::PROTOBUF_NAMESPACE_ID::uint64 nodeid() const;
  void set_nodeid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required int32 MsgType = 1;
  bool has_msgtype() const;
  void clear_msgtype();
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype() const;
  void set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 Flag = 3;
  bool has_flag() const;
  void clear_flag();
  ::PROTOBUF_NAMESPACE_ID::int32 flag() const;
  void set_flag(::PROTOBUF_NAMESPACE_ID::int32 value);

  // required uint64 UUID = 4;
  bool has_uuid() const;
  void clear_uuid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uuid() const;
  void set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 Sequence = 5;
  bool has_sequence() const;
  void clear_sequence();
  ::PROTOBUF_NAMESPACE_ID::uint64 sequence() const;
  void set_sequence(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint64 CheckpointInstanceID = 6;
  bool has_checkpointinstanceid() const;
  void clear_checkpointinstanceid();
  ::PROTOBUF_NAMESPACE_ID::uint64 checkpointinstanceid() const;
  void set_checkpointinstanceid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // optional uint32 Checksum = 7;
  bool has_checksum() const;
  void clear_checksum();
  ::PROTOBUF_NAMESPACE_ID::uint32 checksum() const;
  void set_checksum(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional int32 SMID = 9;
  bool has_smid() const;
  void clear_smid();
  ::PROTOBUF_NAMESPACE_ID::int32 smid() const;
  void set_smid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional uint64 Offset = 10;
  bool has_offset() const;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint64 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:phxpaxos.CheckpointMsg)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filepath_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr buffer_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nodeid_;
  ::PROTOBUF_NAMESPACE_ID::int32 msgtype_;
  ::PROTOBUF_NAMESPACE_ID::int32 flag_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uuid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sequence_;
  ::PROTOBUF_NAMESPACE_ID::uint64 checkpointinstanceid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 checksum_;
  ::PROTOBUF_NAMESPACE_ID::int32 smid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 offset_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class AcceptorStateData :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.AcceptorStateData) */ {
 public:
  AcceptorStateData();
  virtual ~AcceptorStateData();

  AcceptorStateData(const AcceptorStateData& from);
  AcceptorStateData(AcceptorStateData&& from) noexcept
    : AcceptorStateData() {
    *this = ::std::move(from);
  }

  inline AcceptorStateData& operator=(const AcceptorStateData& from) {
    CopyFrom(from);
    return *this;
  }
  inline AcceptorStateData& operator=(AcceptorStateData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AcceptorStateData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AcceptorStateData* internal_default_instance() {
    return reinterpret_cast<const AcceptorStateData*>(
               &_AcceptorStateData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AcceptorStateData& a, AcceptorStateData& b) {
    a.Swap(&b);
  }
  inline void Swap(AcceptorStateData* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AcceptorStateData* New() const final {
    return CreateMaybeMessage<AcceptorStateData>(nullptr);
  }

  AcceptorStateData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AcceptorStateData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AcceptorStateData& from);
  void MergeFrom(const AcceptorStateData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AcceptorStateData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.AcceptorStateData";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAcceptedValueFieldNumber = 6,
    kInstanceIDFieldNumber = 1,
    kPromiseIDFieldNumber = 2,
    kPromiseNodeIDFieldNumber = 3,
    kAcceptedIDFieldNumber = 4,
    kAcceptedNodeIDFieldNumber = 5,
    kChecksumFieldNumber = 7,
  };
  // required bytes AcceptedValue = 6;
  bool has_acceptedvalue() const;
  void clear_acceptedvalue();
  const std::string& acceptedvalue() const;
  void set_acceptedvalue(const std::string& value);
  void set_acceptedvalue(std::string&& value);
  void set_acceptedvalue(const char* value);
  void set_acceptedvalue(const void* value, size_t size);
  std::string* mutable_acceptedvalue();
  std::string* release_acceptedvalue();
  void set_allocated_acceptedvalue(std::string* acceptedvalue);

  // required uint64 InstanceID = 1;
  bool has_instanceid() const;
  void clear_instanceid();
  ::PROTOBUF_NAMESPACE_ID::uint64 instanceid() const;
  void set_instanceid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 PromiseID = 2;
  bool has_promiseid() const;
  void clear_promiseid();
  ::PROTOBUF_NAMESPACE_ID::uint64 promiseid() const;
  void set_promiseid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 PromiseNodeID = 3;
  bool has_promisenodeid() const;
  void clear_promisenodeid();
  ::PROTOBUF_NAMESPACE_ID::uint64 promisenodeid() const;
  void set_promisenodeid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 AcceptedID = 4;
  bool has_acceptedid() const;
  void clear_acceptedid();
  ::PROTOBUF_NAMESPACE_ID::uint64 acceptedid() const;
  void set_acceptedid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 AcceptedNodeID = 5;
  bool has_acceptednodeid() const;
  void clear_acceptednodeid();
  ::PROTOBUF_NAMESPACE_ID::uint64 acceptednodeid() const;
  void set_acceptednodeid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint32 Checksum = 7;
  bool has_checksum() const;
  void clear_checksum();
  ::PROTOBUF_NAMESPACE_ID::uint32 checksum() const;
  void set_checksum(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:phxpaxos.AcceptorStateData)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr acceptedvalue_;
  ::PROTOBUF_NAMESPACE_ID::uint64 instanceid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 promiseid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 promisenodeid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 acceptedid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 acceptednodeid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 checksum_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class PaxosNodeInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.PaxosNodeInfo) */ {
 public:
  PaxosNodeInfo();
  virtual ~PaxosNodeInfo();

  PaxosNodeInfo(const PaxosNodeInfo& from);
  PaxosNodeInfo(PaxosNodeInfo&& from) noexcept
    : PaxosNodeInfo() {
    *this = ::std::move(from);
  }

  inline PaxosNodeInfo& operator=(const PaxosNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline PaxosNodeInfo& operator=(PaxosNodeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PaxosNodeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PaxosNodeInfo* internal_default_instance() {
    return reinterpret_cast<const PaxosNodeInfo*>(
               &_PaxosNodeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PaxosNodeInfo& a, PaxosNodeInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(PaxosNodeInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PaxosNodeInfo* New() const final {
    return CreateMaybeMessage<PaxosNodeInfo>(nullptr);
  }

  PaxosNodeInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PaxosNodeInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PaxosNodeInfo& from);
  void MergeFrom(const PaxosNodeInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PaxosNodeInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.PaxosNodeInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRidFieldNumber = 1,
    kNodeidFieldNumber = 2,
  };
  // required uint64 Rid = 1;
  bool has_rid() const;
  void clear_rid();
  ::PROTOBUF_NAMESPACE_ID::uint64 rid() const;
  void set_rid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 Nodeid = 2;
  bool has_nodeid() const;
  void clear_nodeid();
  ::PROTOBUF_NAMESPACE_ID::uint64 nodeid() const;
  void set_nodeid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:phxpaxos.PaxosNodeInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 rid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nodeid_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class SystemVariables :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.SystemVariables) */ {
 public:
  SystemVariables();
  virtual ~SystemVariables();

  SystemVariables(const SystemVariables& from);
  SystemVariables(SystemVariables&& from) noexcept
    : SystemVariables() {
    *this = ::std::move(from);
  }

  inline SystemVariables& operator=(const SystemVariables& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemVariables& operator=(SystemVariables&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SystemVariables& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemVariables* internal_default_instance() {
    return reinterpret_cast<const SystemVariables*>(
               &_SystemVariables_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(SystemVariables& a, SystemVariables& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemVariables* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemVariables* New() const final {
    return CreateMaybeMessage<SystemVariables>(nullptr);
  }

  SystemVariables* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemVariables>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SystemVariables& from);
  void MergeFrom(const SystemVariables& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemVariables* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.SystemVariables";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemberShipFieldNumber = 2,
    kGidFieldNumber = 1,
    kVersionFieldNumber = 3,
  };
  // repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
  int membership_size() const;
  void clear_membership();
  ::phxpaxos::PaxosNodeInfo* mutable_membership(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosNodeInfo >*
      mutable_membership();
  const ::phxpaxos::PaxosNodeInfo& membership(int index) const;
  ::phxpaxos::PaxosNodeInfo* add_membership();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosNodeInfo >&
      membership() const;

  // required uint64 Gid = 1;
  bool has_gid() const;
  void clear_gid();
  ::PROTOBUF_NAMESPACE_ID::uint64 gid() const;
  void set_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 Version = 3;
  bool has_version() const;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:phxpaxos.SystemVariables)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosNodeInfo > membership_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MasterVariables :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.MasterVariables) */ {
 public:
  MasterVariables();
  virtual ~MasterVariables();

  MasterVariables(const MasterVariables& from);
  MasterVariables(MasterVariables&& from) noexcept
    : MasterVariables() {
    *this = ::std::move(from);
  }

  inline MasterVariables& operator=(const MasterVariables& from) {
    CopyFrom(from);
    return *this;
  }
  inline MasterVariables& operator=(MasterVariables&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MasterVariables& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MasterVariables* internal_default_instance() {
    return reinterpret_cast<const MasterVariables*>(
               &_MasterVariables_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MasterVariables& a, MasterVariables& b) {
    a.Swap(&b);
  }
  inline void Swap(MasterVariables* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MasterVariables* New() const final {
    return CreateMaybeMessage<MasterVariables>(nullptr);
  }

  MasterVariables* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MasterVariables>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MasterVariables& from);
  void MergeFrom(const MasterVariables& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MasterVariables* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.MasterVariables";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMasterNodeidFieldNumber = 1,
    kVersionFieldNumber = 2,
    kLeaseTimeFieldNumber = 3,
  };
  // required uint64 MasterNodeid = 1;
  bool has_masternodeid() const;
  void clear_masternodeid();
  ::PROTOBUF_NAMESPACE_ID::uint64 masternodeid() const;
  void set_masternodeid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 Version = 2;
  bool has_version() const;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint32 LeaseTime = 3;
  bool has_leasetime() const;
  void clear_leasetime();
  ::PROTOBUF_NAMESPACE_ID::uint32 leasetime() const;
  void set_leasetime(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:phxpaxos.MasterVariables)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 masternodeid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 leasetime_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class PaxosValue :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.PaxosValue) */ {
 public:
  PaxosValue();
  virtual ~PaxosValue();

  PaxosValue(const PaxosValue& from);
  PaxosValue(PaxosValue&& from) noexcept
    : PaxosValue() {
    *this = ::std::move(from);
  }

  inline PaxosValue& operator=(const PaxosValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline PaxosValue& operator=(PaxosValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PaxosValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PaxosValue* internal_default_instance() {
    return reinterpret_cast<const PaxosValue*>(
               &_PaxosValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PaxosValue& a, PaxosValue& b) {
    a.Swap(&b);
  }
  inline void Swap(PaxosValue* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PaxosValue* New() const final {
    return CreateMaybeMessage<PaxosValue>(nullptr);
  }

  PaxosValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PaxosValue>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PaxosValue& from);
  void MergeFrom(const PaxosValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PaxosValue* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.PaxosValue";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kSMIDFieldNumber = 1,
    kGroupidFieldNumber = 3,
  };
  // required bytes Value = 2;
  bool has_value() const;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);

  // required int32 SMID = 1;
  bool has_smid() const;
  void clear_smid();
  ::PROTOBUF_NAMESPACE_ID::int32 smid() const;
  void set_smid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // required int32 groupid = 3;
  bool has_groupid() const;
  void clear_groupid();
  ::PROTOBUF_NAMESPACE_ID::int32 groupid() const;
  void set_groupid(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:phxpaxos.PaxosValue)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  ::PROTOBUF_NAMESPACE_ID::int32 smid_;
  ::PROTOBUF_NAMESPACE_ID::int32 groupid_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class BatchPaxosValues :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.BatchPaxosValues) */ {
 public:
  BatchPaxosValues();
  virtual ~BatchPaxosValues();

  BatchPaxosValues(const BatchPaxosValues& from);
  BatchPaxosValues(BatchPaxosValues&& from) noexcept
    : BatchPaxosValues() {
    *this = ::std::move(from);
  }

  inline BatchPaxosValues& operator=(const BatchPaxosValues& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchPaxosValues& operator=(BatchPaxosValues&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatchPaxosValues& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchPaxosValues* internal_default_instance() {
    return reinterpret_cast<const BatchPaxosValues*>(
               &_BatchPaxosValues_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(BatchPaxosValues& a, BatchPaxosValues& b) {
    a.Swap(&b);
  }
  inline void Swap(BatchPaxosValues* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatchPaxosValues* New() const final {
    return CreateMaybeMessage<BatchPaxosValues>(nullptr);
  }

  BatchPaxosValues* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatchPaxosValues>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatchPaxosValues& from);
  void MergeFrom(const BatchPaxosValues& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchPaxosValues* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.BatchPaxosValues";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated .phxpaxos.PaxosValue Values = 1;
  int values_size() const;
  void clear_values();
  ::phxpaxos::PaxosValue* mutable_values(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosValue >*
      mutable_values();
  const ::phxpaxos::PaxosValue& values(int index) const;
  ::phxpaxos::PaxosValue* add_values();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosValue >&
      values() const;

  // @@protoc_insertion_point(class_scope:phxpaxos.BatchPaxosValues)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosValue > values_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class MasterOperator :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:phxpaxos.MasterOperator) */ {
 public:
  MasterOperator();
  virtual ~MasterOperator();

  MasterOperator(const MasterOperator& from);
  MasterOperator(MasterOperator&& from) noexcept
    : MasterOperator() {
    *this = ::std::move(from);
  }

  inline MasterOperator& operator=(const MasterOperator& from) {
    CopyFrom(from);
    return *this;
  }
  inline MasterOperator& operator=(MasterOperator&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MasterOperator& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MasterOperator* internal_default_instance() {
    return reinterpret_cast<const MasterOperator*>(
               &_MasterOperator_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MasterOperator& a, MasterOperator& b) {
    a.Swap(&b);
  }
  inline void Swap(MasterOperator* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MasterOperator* New() const final {
    return CreateMaybeMessage<MasterOperator>(nullptr);
  }

  MasterOperator* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MasterOperator>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MasterOperator& from);
  void MergeFrom(const MasterOperator& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MasterOperator* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "phxpaxos.MasterOperator";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_paxos_5fmsg_2eproto);
    return ::descriptor_table_paxos_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNodeidFieldNumber = 1,
    kVersionFieldNumber = 2,
    kTimeoutFieldNumber = 3,
    kOperatorFieldNumber = 4,
    kLastversionFieldNumber = 6,
    kSidFieldNumber = 5,
  };
  // required uint64 nodeid = 1;
  bool has_nodeid() const;
  void clear_nodeid();
  ::PROTOBUF_NAMESPACE_ID::uint64 nodeid() const;
  void set_nodeid(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint64 version = 2;
  bool has_version() const;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required int32 timeout = 3;
  bool has_timeout() const;
  void clear_timeout();
  ::PROTOBUF_NAMESPACE_ID::int32 timeout() const;
  void set_timeout(::PROTOBUF_NAMESPACE_ID::int32 value);

  // required uint32 operator = 4;
  bool has_operator_() const;
  void clear_operator_();
  ::PROTOBUF_NAMESPACE_ID::uint32 operator_() const;
  void set_operator_(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint64 lastversion = 6;
  bool has_lastversion() const;
  void clear_lastversion();
  ::PROTOBUF_NAMESPACE_ID::uint64 lastversion() const;
  void set_lastversion(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // required uint32 sid = 5;
  bool has_sid() const;
  void clear_sid();
  ::PROTOBUF_NAMESPACE_ID::uint32 sid() const;
  void set_sid(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:phxpaxos.MasterOperator)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 nodeid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::int32 timeout_;
  ::PROTOBUF_NAMESPACE_ID::uint32 operator__;
  ::PROTOBUF_NAMESPACE_ID::uint64 lastversion_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sid_;
  friend struct ::TableStruct_paxos_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Header

// required uint64 gid = 1;
inline bool Header::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Header::clear_gid() {
  gid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Header::gid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.gid)
  return gid_;
}
inline void Header::set_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  gid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.gid)
}

// required uint64 rid = 2;
inline bool Header::has_rid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Header::clear_rid() {
  rid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Header::rid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.rid)
  return rid_;
}
inline void Header::set_rid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  rid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.rid)
}

// required int32 cmdid = 3;
inline bool Header::has_cmdid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Header::clear_cmdid() {
  cmdid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Header::cmdid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.cmdid)
  return cmdid_;
}
inline void Header::set_cmdid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.cmdid)
}

// optional int32 version = 4;
inline bool Header::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Header::clear_version() {
  version_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Header::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.Header.version)
  return version_;
}
inline void Header::set_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.Header.version)
}

// -------------------------------------------------------------------

// PaxosMsg

// required int32 MsgType = 1;
inline bool PaxosMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PaxosMsg::clear_msgtype() {
  msgtype_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PaxosMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.MsgType)
  return msgtype_;
}
inline void PaxosMsg::set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.MsgType)
}

// optional uint64 InstanceID = 2;
inline bool PaxosMsg::has_instanceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PaxosMsg::clear_instanceid() {
  instanceid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosMsg::instanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.InstanceID)
  return instanceid_;
}
inline void PaxosMsg::set_instanceid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.InstanceID)
}

// optional uint64 NodeID = 3;
inline bool PaxosMsg::has_nodeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PaxosMsg::clear_nodeid() {
  nodeid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosMsg::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.NodeID)
  return nodeid_;
}
inline void PaxosMsg::set_nodeid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.NodeID)
}

// optional uint64 ProposalID = 4;
inline bool PaxosMsg::has_proposalid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PaxosMsg::clear_proposalid() {
  proposalid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosMsg::proposalid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.ProposalID)
  return proposalid_;
}
inline void PaxosMsg::set_proposalid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  proposalid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.ProposalID)
}

// optional uint64 ProposalNodeID = 5;
inline bool PaxosMsg::has_proposalnodeid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PaxosMsg::clear_proposalnodeid() {
  proposalnodeid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosMsg::proposalnodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.ProposalNodeID)
  return proposalnodeid_;
}
inline void PaxosMsg::set_proposalnodeid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  proposalnodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.ProposalNodeID)
}

// optional bytes Value = 6;
inline bool PaxosMsg::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PaxosMsg::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PaxosMsg::value() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.Value)
  return value_.GetNoArena();
}
inline void PaxosMsg::set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.Value)
}
inline void PaxosMsg::set_value(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.PaxosMsg.Value)
}
inline void PaxosMsg::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosMsg.Value)
}
inline void PaxosMsg::set_value(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosMsg.Value)
}
inline std::string* PaxosMsg::mutable_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosMsg.Value)
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PaxosMsg::release_value() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosMsg.Value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PaxosMsg::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosMsg.Value)
}

// optional uint64 PreAcceptID = 7;
inline bool PaxosMsg::has_preacceptid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PaxosMsg::clear_preacceptid() {
  preacceptid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosMsg::preacceptid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.PreAcceptID)
  return preacceptid_;
}
inline void PaxosMsg::set_preacceptid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000200u;
  preacceptid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.PreAcceptID)
}

// optional uint64 PreAcceptNodeID = 8;
inline bool PaxosMsg::has_preacceptnodeid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PaxosMsg::clear_preacceptnodeid() {
  preacceptnodeid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosMsg::preacceptnodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.PreAcceptNodeID)
  return preacceptnodeid_;
}
inline void PaxosMsg::set_preacceptnodeid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000400u;
  preacceptnodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.PreAcceptNodeID)
}

// optional uint64 RejectByPromiseID = 9;
inline bool PaxosMsg::has_rejectbypromiseid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PaxosMsg::clear_rejectbypromiseid() {
  rejectbypromiseid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosMsg::rejectbypromiseid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.RejectByPromiseID)
  return rejectbypromiseid_;
}
inline void PaxosMsg::set_rejectbypromiseid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000800u;
  rejectbypromiseid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.RejectByPromiseID)
}

// optional uint64 NowInstanceID = 10;
inline bool PaxosMsg::has_nowinstanceid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PaxosMsg::clear_nowinstanceid() {
  nowinstanceid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosMsg::nowinstanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.NowInstanceID)
  return nowinstanceid_;
}
inline void PaxosMsg::set_nowinstanceid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00001000u;
  nowinstanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.NowInstanceID)
}

// optional uint64 MinChosenInstanceID = 11;
inline bool PaxosMsg::has_minchoseninstanceid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PaxosMsg::clear_minchoseninstanceid() {
  minchoseninstanceid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosMsg::minchoseninstanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.MinChosenInstanceID)
  return minchoseninstanceid_;
}
inline void PaxosMsg::set_minchoseninstanceid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00002000u;
  minchoseninstanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.MinChosenInstanceID)
}

// optional uint32 LastChecksum = 12;
inline bool PaxosMsg::has_lastchecksum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PaxosMsg::clear_lastchecksum() {
  lastchecksum_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PaxosMsg::lastchecksum() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.LastChecksum)
  return lastchecksum_;
}
inline void PaxosMsg::set_lastchecksum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  lastchecksum_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.LastChecksum)
}

// optional uint32 Flag = 13;
inline bool PaxosMsg::has_flag() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PaxosMsg::clear_flag() {
  flag_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PaxosMsg::flag() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.Flag)
  return flag_;
}
inline void PaxosMsg::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  flag_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.Flag)
}

// optional bytes SystemVariables = 14;
inline bool PaxosMsg::has_systemvariables() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PaxosMsg::clear_systemvariables() {
  systemvariables_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& PaxosMsg::systemvariables() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.SystemVariables)
  return systemvariables_.GetNoArena();
}
inline void PaxosMsg::set_systemvariables(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  systemvariables_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.SystemVariables)
}
inline void PaxosMsg::set_systemvariables(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  systemvariables_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.PaxosMsg.SystemVariables)
}
inline void PaxosMsg::set_systemvariables(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  systemvariables_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosMsg.SystemVariables)
}
inline void PaxosMsg::set_systemvariables(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  systemvariables_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosMsg.SystemVariables)
}
inline std::string* PaxosMsg::mutable_systemvariables() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosMsg.SystemVariables)
  return systemvariables_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PaxosMsg::release_systemvariables() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosMsg.SystemVariables)
  if (!has_systemvariables()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return systemvariables_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PaxosMsg::set_allocated_systemvariables(std::string* systemvariables) {
  if (systemvariables != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  systemvariables_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), systemvariables);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosMsg.SystemVariables)
}

// optional bytes MasterVariables = 15;
inline bool PaxosMsg::has_mastervariables() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PaxosMsg::clear_mastervariables() {
  mastervariables_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& PaxosMsg::mastervariables() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosMsg.MasterVariables)
  return mastervariables_.GetNoArena();
}
inline void PaxosMsg::set_mastervariables(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  mastervariables_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosMsg.MasterVariables)
}
inline void PaxosMsg::set_mastervariables(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  mastervariables_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.PaxosMsg.MasterVariables)
}
inline void PaxosMsg::set_mastervariables(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  mastervariables_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosMsg.MasterVariables)
}
inline void PaxosMsg::set_mastervariables(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  mastervariables_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosMsg.MasterVariables)
}
inline std::string* PaxosMsg::mutable_mastervariables() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosMsg.MasterVariables)
  return mastervariables_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PaxosMsg::release_mastervariables() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosMsg.MasterVariables)
  if (!has_mastervariables()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return mastervariables_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PaxosMsg::set_allocated_mastervariables(std::string* mastervariables) {
  if (mastervariables != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  mastervariables_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mastervariables);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosMsg.MasterVariables)
}

// -------------------------------------------------------------------

// CheckpointMsg

// required int32 MsgType = 1;
inline bool CheckpointMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CheckpointMsg::clear_msgtype() {
  msgtype_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CheckpointMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.MsgType)
  return msgtype_;
}
inline void CheckpointMsg::set_msgtype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.MsgType)
}

// required uint64 NodeID = 2;
inline bool CheckpointMsg::has_nodeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckpointMsg::clear_nodeid() {
  nodeid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CheckpointMsg::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.NodeID)
  return nodeid_;
}
inline void CheckpointMsg::set_nodeid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.NodeID)
}

// optional int32 Flag = 3;
inline bool CheckpointMsg::has_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CheckpointMsg::clear_flag() {
  flag_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CheckpointMsg::flag() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Flag)
  return flag_;
}
inline void CheckpointMsg::set_flag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  flag_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Flag)
}

// required uint64 UUID = 4;
inline bool CheckpointMsg::has_uuid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CheckpointMsg::clear_uuid() {
  uuid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CheckpointMsg::uuid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.UUID)
  return uuid_;
}
inline void CheckpointMsg::set_uuid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  uuid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.UUID)
}

// required uint64 Sequence = 5;
inline bool CheckpointMsg::has_sequence() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CheckpointMsg::clear_sequence() {
  sequence_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CheckpointMsg::sequence() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Sequence)
  return sequence_;
}
inline void CheckpointMsg::set_sequence(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  sequence_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Sequence)
}

// optional uint64 CheckpointInstanceID = 6;
inline bool CheckpointMsg::has_checkpointinstanceid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CheckpointMsg::clear_checkpointinstanceid() {
  checkpointinstanceid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CheckpointMsg::checkpointinstanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.CheckpointInstanceID)
  return checkpointinstanceid_;
}
inline void CheckpointMsg::set_checkpointinstanceid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  checkpointinstanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.CheckpointInstanceID)
}

// optional uint32 Checksum = 7;
inline bool CheckpointMsg::has_checksum() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CheckpointMsg::clear_checksum() {
  checksum_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CheckpointMsg::checksum() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Checksum)
  return checksum_;
}
inline void CheckpointMsg::set_checksum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  checksum_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Checksum)
}

// optional string FilePath = 8;
inline bool CheckpointMsg::has_filepath() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckpointMsg::clear_filepath() {
  filepath_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CheckpointMsg::filepath() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.FilePath)
  return filepath_.GetNoArena();
}
inline void CheckpointMsg::set_filepath(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filepath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.FilePath)
}
inline void CheckpointMsg::set_filepath(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filepath_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.CheckpointMsg.FilePath)
}
inline void CheckpointMsg::set_filepath(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filepath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.CheckpointMsg.FilePath)
}
inline void CheckpointMsg::set_filepath(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filepath_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.CheckpointMsg.FilePath)
}
inline std::string* CheckpointMsg::mutable_filepath() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:phxpaxos.CheckpointMsg.FilePath)
  return filepath_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CheckpointMsg::release_filepath() {
  // @@protoc_insertion_point(field_release:phxpaxos.CheckpointMsg.FilePath)
  if (!has_filepath()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filepath_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CheckpointMsg::set_allocated_filepath(std::string* filepath) {
  if (filepath != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filepath_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filepath);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.CheckpointMsg.FilePath)
}

// optional int32 SMID = 9;
inline bool CheckpointMsg::has_smid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CheckpointMsg::clear_smid() {
  smid_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CheckpointMsg::smid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.SMID)
  return smid_;
}
inline void CheckpointMsg::set_smid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  smid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.SMID)
}

// optional uint64 Offset = 10;
inline bool CheckpointMsg::has_offset() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CheckpointMsg::clear_offset() {
  offset_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CheckpointMsg::offset() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Offset)
  return offset_;
}
inline void CheckpointMsg::set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000400u;
  offset_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Offset)
}

// optional bytes Buffer = 11;
inline bool CheckpointMsg::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckpointMsg::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CheckpointMsg::buffer() const {
  // @@protoc_insertion_point(field_get:phxpaxos.CheckpointMsg.Buffer)
  return buffer_.GetNoArena();
}
inline void CheckpointMsg::set_buffer(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  buffer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.CheckpointMsg.Buffer)
}
inline void CheckpointMsg::set_buffer(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  buffer_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.CheckpointMsg.Buffer)
}
inline void CheckpointMsg::set_buffer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  buffer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.CheckpointMsg.Buffer)
}
inline void CheckpointMsg::set_buffer(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  buffer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.CheckpointMsg.Buffer)
}
inline std::string* CheckpointMsg::mutable_buffer() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:phxpaxos.CheckpointMsg.Buffer)
  return buffer_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CheckpointMsg::release_buffer() {
  // @@protoc_insertion_point(field_release:phxpaxos.CheckpointMsg.Buffer)
  if (!has_buffer()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return buffer_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CheckpointMsg::set_allocated_buffer(std::string* buffer) {
  if (buffer != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  buffer_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.CheckpointMsg.Buffer)
}

// -------------------------------------------------------------------

// AcceptorStateData

// required uint64 InstanceID = 1;
inline bool AcceptorStateData::has_instanceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptorStateData::clear_instanceid() {
  instanceid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptorStateData::instanceid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.InstanceID)
  return instanceid_;
}
inline void AcceptorStateData::set_instanceid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  instanceid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.InstanceID)
}

// required uint64 PromiseID = 2;
inline bool AcceptorStateData::has_promiseid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptorStateData::clear_promiseid() {
  promiseid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptorStateData::promiseid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.PromiseID)
  return promiseid_;
}
inline void AcceptorStateData::set_promiseid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  promiseid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.PromiseID)
}

// required uint64 PromiseNodeID = 3;
inline bool AcceptorStateData::has_promisenodeid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AcceptorStateData::clear_promisenodeid() {
  promisenodeid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptorStateData::promisenodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.PromiseNodeID)
  return promisenodeid_;
}
inline void AcceptorStateData::set_promisenodeid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  promisenodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.PromiseNodeID)
}

// required uint64 AcceptedID = 4;
inline bool AcceptorStateData::has_acceptedid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AcceptorStateData::clear_acceptedid() {
  acceptedid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptorStateData::acceptedid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.AcceptedID)
  return acceptedid_;
}
inline void AcceptorStateData::set_acceptedid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  acceptedid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.AcceptedID)
}

// required uint64 AcceptedNodeID = 5;
inline bool AcceptorStateData::has_acceptednodeid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AcceptorStateData::clear_acceptednodeid() {
  acceptednodeid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptorStateData::acceptednodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.AcceptedNodeID)
  return acceptednodeid_;
}
inline void AcceptorStateData::set_acceptednodeid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  acceptednodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.AcceptedNodeID)
}

// required bytes AcceptedValue = 6;
inline bool AcceptorStateData::has_acceptedvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptorStateData::clear_acceptedvalue() {
  acceptedvalue_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AcceptorStateData::acceptedvalue() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.AcceptedValue)
  return acceptedvalue_.GetNoArena();
}
inline void AcceptorStateData::set_acceptedvalue(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  acceptedvalue_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.AcceptedValue)
}
inline void AcceptorStateData::set_acceptedvalue(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  acceptedvalue_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.AcceptorStateData.AcceptedValue)
}
inline void AcceptorStateData::set_acceptedvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  acceptedvalue_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.AcceptorStateData.AcceptedValue)
}
inline void AcceptorStateData::set_acceptedvalue(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  acceptedvalue_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.AcceptorStateData.AcceptedValue)
}
inline std::string* AcceptorStateData::mutable_acceptedvalue() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:phxpaxos.AcceptorStateData.AcceptedValue)
  return acceptedvalue_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AcceptorStateData::release_acceptedvalue() {
  // @@protoc_insertion_point(field_release:phxpaxos.AcceptorStateData.AcceptedValue)
  if (!has_acceptedvalue()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return acceptedvalue_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptorStateData::set_allocated_acceptedvalue(std::string* acceptedvalue) {
  if (acceptedvalue != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  acceptedvalue_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), acceptedvalue);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.AcceptorStateData.AcceptedValue)
}

// required uint32 Checksum = 7;
inline bool AcceptorStateData::has_checksum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AcceptorStateData::clear_checksum() {
  checksum_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AcceptorStateData::checksum() const {
  // @@protoc_insertion_point(field_get:phxpaxos.AcceptorStateData.Checksum)
  return checksum_;
}
inline void AcceptorStateData::set_checksum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  checksum_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.AcceptorStateData.Checksum)
}

// -------------------------------------------------------------------

// PaxosNodeInfo

// required uint64 Rid = 1;
inline bool PaxosNodeInfo::has_rid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PaxosNodeInfo::clear_rid() {
  rid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosNodeInfo::rid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosNodeInfo.Rid)
  return rid_;
}
inline void PaxosNodeInfo::set_rid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  rid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosNodeInfo.Rid)
}

// required uint64 Nodeid = 2;
inline bool PaxosNodeInfo::has_nodeid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PaxosNodeInfo::clear_nodeid() {
  nodeid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PaxosNodeInfo::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosNodeInfo.Nodeid)
  return nodeid_;
}
inline void PaxosNodeInfo::set_nodeid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosNodeInfo.Nodeid)
}

// -------------------------------------------------------------------

// SystemVariables

// required uint64 Gid = 1;
inline bool SystemVariables::has_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemVariables::clear_gid() {
  gid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SystemVariables::gid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.SystemVariables.Gid)
  return gid_;
}
inline void SystemVariables::set_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  gid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.SystemVariables.Gid)
}

// repeated .phxpaxos.PaxosNodeInfo MemberShip = 2;
inline int SystemVariables::membership_size() const {
  return membership_.size();
}
inline void SystemVariables::clear_membership() {
  membership_.Clear();
}
inline ::phxpaxos::PaxosNodeInfo* SystemVariables::mutable_membership(int index) {
  // @@protoc_insertion_point(field_mutable:phxpaxos.SystemVariables.MemberShip)
  return membership_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosNodeInfo >*
SystemVariables::mutable_membership() {
  // @@protoc_insertion_point(field_mutable_list:phxpaxos.SystemVariables.MemberShip)
  return &membership_;
}
inline const ::phxpaxos::PaxosNodeInfo& SystemVariables::membership(int index) const {
  // @@protoc_insertion_point(field_get:phxpaxos.SystemVariables.MemberShip)
  return membership_.Get(index);
}
inline ::phxpaxos::PaxosNodeInfo* SystemVariables::add_membership() {
  // @@protoc_insertion_point(field_add:phxpaxos.SystemVariables.MemberShip)
  return membership_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosNodeInfo >&
SystemVariables::membership() const {
  // @@protoc_insertion_point(field_list:phxpaxos.SystemVariables.MemberShip)
  return membership_;
}

// required uint64 Version = 3;
inline bool SystemVariables::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemVariables::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SystemVariables::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.SystemVariables.Version)
  return version_;
}
inline void SystemVariables::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.SystemVariables.Version)
}

// -------------------------------------------------------------------

// MasterVariables

// required uint64 MasterNodeid = 1;
inline bool MasterVariables::has_masternodeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MasterVariables::clear_masternodeid() {
  masternodeid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MasterVariables::masternodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterVariables.MasterNodeid)
  return masternodeid_;
}
inline void MasterVariables::set_masternodeid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  masternodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterVariables.MasterNodeid)
}

// required uint64 Version = 2;
inline bool MasterVariables::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MasterVariables::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MasterVariables::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterVariables.Version)
  return version_;
}
inline void MasterVariables::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterVariables.Version)
}

// required uint32 LeaseTime = 3;
inline bool MasterVariables::has_leasetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MasterVariables::clear_leasetime() {
  leasetime_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MasterVariables::leasetime() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterVariables.LeaseTime)
  return leasetime_;
}
inline void MasterVariables::set_leasetime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  leasetime_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterVariables.LeaseTime)
}

// -------------------------------------------------------------------

// PaxosValue

// required int32 SMID = 1;
inline bool PaxosValue::has_smid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PaxosValue::clear_smid() {
  smid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PaxosValue::smid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosValue.SMID)
  return smid_;
}
inline void PaxosValue::set_smid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  smid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosValue.SMID)
}

// required bytes Value = 2;
inline bool PaxosValue::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PaxosValue::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& PaxosValue::value() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosValue.Value)
  return value_.GetNoArena();
}
inline void PaxosValue::set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosValue.Value)
}
inline void PaxosValue::set_value(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:phxpaxos.PaxosValue.Value)
}
inline void PaxosValue::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:phxpaxos.PaxosValue.Value)
}
inline void PaxosValue::set_value(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:phxpaxos.PaxosValue.Value)
}
inline std::string* PaxosValue::mutable_value() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:phxpaxos.PaxosValue.Value)
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PaxosValue::release_value() {
  // @@protoc_insertion_point(field_release:phxpaxos.PaxosValue.Value)
  if (!has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return value_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PaxosValue::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:phxpaxos.PaxosValue.Value)
}

// required int32 groupid = 3;
inline bool PaxosValue::has_groupid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PaxosValue::clear_groupid() {
  groupid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PaxosValue::groupid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.PaxosValue.groupid)
  return groupid_;
}
inline void PaxosValue::set_groupid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  groupid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.PaxosValue.groupid)
}

// -------------------------------------------------------------------

// BatchPaxosValues

// repeated .phxpaxos.PaxosValue Values = 1;
inline int BatchPaxosValues::values_size() const {
  return values_.size();
}
inline void BatchPaxosValues::clear_values() {
  values_.Clear();
}
inline ::phxpaxos::PaxosValue* BatchPaxosValues::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:phxpaxos.BatchPaxosValues.Values)
  return values_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosValue >*
BatchPaxosValues::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:phxpaxos.BatchPaxosValues.Values)
  return &values_;
}
inline const ::phxpaxos::PaxosValue& BatchPaxosValues::values(int index) const {
  // @@protoc_insertion_point(field_get:phxpaxos.BatchPaxosValues.Values)
  return values_.Get(index);
}
inline ::phxpaxos::PaxosValue* BatchPaxosValues::add_values() {
  // @@protoc_insertion_point(field_add:phxpaxos.BatchPaxosValues.Values)
  return values_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::phxpaxos::PaxosValue >&
BatchPaxosValues::values() const {
  // @@protoc_insertion_point(field_list:phxpaxos.BatchPaxosValues.Values)
  return values_;
}

// -------------------------------------------------------------------

// MasterOperator

// required uint64 nodeid = 1;
inline bool MasterOperator::has_nodeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MasterOperator::clear_nodeid() {
  nodeid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MasterOperator::nodeid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterOperator.nodeid)
  return nodeid_;
}
inline void MasterOperator::set_nodeid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterOperator.nodeid)
}

// required uint64 version = 2;
inline bool MasterOperator::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MasterOperator::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MasterOperator::version() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterOperator.version)
  return version_;
}
inline void MasterOperator::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterOperator.version)
}

// required int32 timeout = 3;
inline bool MasterOperator::has_timeout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MasterOperator::clear_timeout() {
  timeout_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MasterOperator::timeout() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterOperator.timeout)
  return timeout_;
}
inline void MasterOperator::set_timeout(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  timeout_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterOperator.timeout)
}

// required uint32 operator = 4;
inline bool MasterOperator::has_operator_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MasterOperator::clear_operator_() {
  operator__ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MasterOperator::operator_() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterOperator.operator)
  return operator__;
}
inline void MasterOperator::set_operator_(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  operator__ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterOperator.operator)
}

// required uint32 sid = 5;
inline bool MasterOperator::has_sid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MasterOperator::clear_sid() {
  sid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MasterOperator::sid() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterOperator.sid)
  return sid_;
}
inline void MasterOperator::set_sid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  sid_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterOperator.sid)
}

// optional uint64 lastversion = 6;
inline bool MasterOperator::has_lastversion() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MasterOperator::clear_lastversion() {
  lastversion_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MasterOperator::lastversion() const {
  // @@protoc_insertion_point(field_get:phxpaxos.MasterOperator.lastversion)
  return lastversion_;
}
inline void MasterOperator::set_lastversion(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  lastversion_ = value;
  // @@protoc_insertion_point(field_set:phxpaxos.MasterOperator.lastversion)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace phxpaxos

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_paxos_5fmsg_2eproto
