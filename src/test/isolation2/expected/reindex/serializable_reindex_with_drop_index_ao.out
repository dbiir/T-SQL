DROP TABLE IF EXISTS reindex_serialize_tab_ao;
DROP

CREATE TABLE reindex_serialize_tab_ao (a INT, b text, c date, d numeric, e bigint, f char(10), g float) with (appendonly=True) distributed by (a);
CREATE
insert into reindex_serialize_tab_ao select 1, 'abc'||i, now(),i*100.43, i*-187, 'a'|| i*-1, i*2.23 from generate_series(1,1000) i;
INSERT 1000
insert into reindex_serialize_tab_ao select 1, 'abc'||i, now(),i*100.43, i*-187, 'a'|| i*-1, i*2.23 from generate_series(1,1000) i;
INSERT 1000
insert into reindex_serialize_tab_ao select 1, 'abc'||i, now(),i*100.43, i*-187, 'a'|| i*-1, i*2.23 from generate_series(1,1000) i;
INSERT 1000
insert into reindex_serialize_tab_ao select 1, 'abc'||i, now(),i*100.43, i*-187, 'a'|| i*-1, i*2.23 from generate_series(1,1000) i;
INSERT 1000
create index idxa_reindex_serialize_tab_ao on reindex_serialize_tab_ao(a);
CREATE
create index idxb_reindex_serialize_tab_ao on reindex_serialize_tab_ao(b);
CREATE
create index idxc_reindex_serialize_tab_ao on reindex_serialize_tab_ao(c);
CREATE
create index idxd_reindex_serialize_tab_ao on reindex_serialize_tab_ao(d);
CREATE
create index idxe_reindex_serialize_tab_ao on reindex_serialize_tab_ao(e);
CREATE
create index idxf_reindex_serialize_tab_ao on reindex_serialize_tab_ao(f);
CREATE
create index idxg_reindex_serialize_tab_ao on reindex_serialize_tab_ao(g);
CREATE
-- start_ignore
SET gp_create_table_random_default_distribution=off;
SET
-- end_ignore
1: BEGIN;
BEGIN
2: BEGIN;
BEGIN
2: SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
SET
2: select 'dummy select to establish snapshot';
 ?column?                           
------------------------------------
 dummy select to establish snapshot 
(1 row)
1: drop index idxg_reindex_serialize_tab_ao;
DROP
1: COMMIT;
COMMIT
-- Remember index relfilenodes from master and segments before
-- reindex.
2: create temp table old_relfilenodes as (select gp_segment_id as dbid, relfilenode, oid, relname from gp_dist_random('pg_class') where relname like 'idx%_reindex_serialize_tab_ao' union all select gp_segment_id as dbid, relfilenode, oid, relname from pg_class where relname like 'idx%_reindex_serialize_tab_ao');
CREATE 28
2: reindex table reindex_serialize_tab_ao;
REINDEX
2: COMMIT;
COMMIT
-- Validate that reindex changed all index relfilenodes on master as well as
-- segments.  The following query should return 0 tuples.
2: select oldrels.* from old_relfilenodes oldrels join (select gp_segment_id as dbid, relfilenode, relname from gp_dist_random('pg_class') where relname like 'idx%_reindex_serialize_tab_ao' union all select gp_segment_id as dbid, relfilenode, relname from pg_class where relname like 'idx%_reindex_serialize_tab_ao') newrels on oldrels.relfilenode = newrels.relfilenode and oldrels.dbid = newrels.dbid and oldrels.relname = newrels.relname;
 dbid | relfilenode | oid | relname 
------+-------------+-----+---------
(0 rows)
3: select count(*) from  reindex_serialize_tab_ao where a = 1;
 count 
-------
 4000  
(1 row)
3: set enable_seqscan=false;
SET
3: set enable_indexscan=true;
SET
3: select count(*) from  reindex_serialize_tab_ao where a = 1;
 count 
-------
 4000  
(1 row)

-- expect index to be dropped
3: select 1-count(*) as index_dropped from (select * from pg_class union all select * from gp_dist_random('pg_class')) t where t.relname = 'idxg_reindex_serialize_tab_ao';
 index_dropped 
---------------
 1             
(1 row)
