DROP TABLE IF EXISTS reindex_crtab_heap_bitmap;
DROP

CREATE TABLE reindex_crtab_heap_bitmap (a INT); insert into reindex_crtab_heap_bitmap select generate_series(1,1000);
CREATE 1000
insert into reindex_crtab_heap_bitmap select generate_series(1,1000);
INSERT 1000
create index idx_reindex_crtab_heap_bitmap on reindex_crtab_heap_bitmap USING BITMAP(a);
CREATE
-- @Description Ensures that a reindex table during reindex index operations is ok
--

DELETE FROM reindex_crtab_heap_bitmap WHERE a < 128;
DELETE 254
1: BEGIN;
BEGIN
1: create temp table old_relfilenodes as (select gp_segment_id as dbid, relfilenode, oid, relname from gp_dist_random('pg_class') where relname = 'idx_reindex_crtab_heap_bitmap' union all select gp_segment_id as dbid, relfilenode, oid, relname from pg_class where relname = 'idx_reindex_crtab_heap_bitmap');
CREATE 4
2: BEGIN;
BEGIN
1: REINDEX index idx_reindex_crtab_heap_bitmap;
REINDEX
2&: REINDEX TABLE  reindex_crtab_heap_bitmap;  <waiting ...>
1: COMMIT;
COMMIT
2<:  <... completed>
REINDEX
-- Session 2 has not committed yet.  Session 1 should see effects of
-- its own reindex command above in pg_class.  The following query
-- validates that reindex command in session 1 indeed generates new
-- relfilenode for the index.
1: insert into old_relfilenodes (select gp_segment_id as dbid, relfilenode, oid, relname from gp_dist_random('pg_class') where relname = 'idx_reindex_crtab_heap_bitmap' union all select gp_segment_id as dbid, relfilenode, oid, relname from pg_class where relname = 'idx_reindex_crtab_heap_bitmap');
INSERT 4
-- Expect two distinct relfilenodes per segment in old_relfilenodes table.
1: select distinct count(distinct relfilenode), relname from old_relfilenodes group by dbid, relname;
 count | relname                       
-------+-------------------------------
 2     | idx_reindex_crtab_heap_bitmap 
(1 row)
2: COMMIT;
COMMIT
-- After session 2 commits, the relfilenode it assigned to the index
-- is visible to session 1.
1: insert into old_relfilenodes (select gp_segment_id as dbid, relfilenode, oid, relname from gp_dist_random('pg_class') where relname = 'idx_reindex_crtab_heap_bitmap' union all select gp_segment_id as dbid, relfilenode, oid, relname from pg_class where relname = 'idx_reindex_crtab_heap_bitmap');
INSERT 4
-- Expect three distinct relfilenodes per segment in old_relfilenodes table.
1: select distinct count(distinct relfilenode), relname from old_relfilenodes group by dbid, relname;
 count | relname                       
-------+-------------------------------
 3     | idx_reindex_crtab_heap_bitmap 
(1 row)

3: select count(*) from reindex_crtab_heap_bitmap where a = 1000;
 count 
-------
 2     
(1 row)
3: set enable_seqscan=false;
SET
3: set enable_indexscan=true;
SET
3: select count(*) from reindex_crtab_heap_bitmap where a = 1000;
 count 
-------
 2     
(1 row)
