-- up the admin_group memory limits
ALTER RESOURCE GROUP admin_group SET memory_limit 30;
ALTER

-- Test Mark/Restore in Material Node
create table spilltest1 (a integer);
CREATE
create table spilltest2 (a integer);
CREATE
insert into spilltest1 select a from generate_series(1,400000) a;
INSERT 400000
insert into spilltest2 select a from generate_series(1,400000) a;
INSERT 400000

-- go back to the default admin_group limit
ALTER RESOURCE GROUP admin_group SET memory_limit 10;
ALTER

-- start_ignore
DROP ROLE IF EXISTS role1_memory_test;
DROP
DROP RESOURCE GROUP rg1_memory_test;
ERROR:  resource group "rg1_memory_test" does not exist
-- end_ignore
CREATE RESOURCE GROUP rg1_memory_test WITH (concurrency=2, cpu_rate_limit=10, memory_limit=60, memory_shared_quota=0, memory_spill_ratio=10);
CREATE
CREATE ROLE role1_memory_test SUPERUSER RESOURCE GROUP rg1_memory_test;
CREATE
SET ROLE TO role1_memory_test;
SET

set enable_hashagg=off;
SET
set enable_mergejoin=on;
SET
set enable_hashjoin=off;
SET
set enable_nestloop=off;
SET

create temporary table spilltestresult1 as select t1.a as t1a, t2.a as t2a from (select a from spilltest1 group by a) t1, (select a from spilltest2 group by a) t2 where t1.a = t2.a;
CREATE 400000

-- check that the result looks sane
select count(*), sum(t1a), sum(t2a), sum(t1a - t2a) from spilltestresult1;
 count  | sum         | sum         | sum 
--------+-------------+-------------+-----
 400000 | 80000200000 | 80000200000 | 0   
(1 row)

-- Test Hash Aggregation when the work mem is too small for the hash table
create table spilltest (a integer, b integer);
CREATE
insert into spilltest select a, a%25 from generate_series(1,8000) a;
INSERT 8000
analyze;
ANALYZE
set enable_hashagg=on;
SET
set enable_groupagg=off;
SET

select b,count(*) from spilltest group by b order by b;
 b  | count 
----+-------
 0  | 320   
 1  | 320   
 2  | 320   
 3  | 320   
 4  | 320   
 5  | 320   
 6  | 320   
 7  | 320   
 8  | 320   
 9  | 320   
 10 | 320   
 11 | 320   
 12 | 320   
 13 | 320   
 14 | 320   
 15 | 320   
 16 | 320   
 17 | 320   
 18 | 320   
 19 | 320   
 20 | 320   
 21 | 320   
 22 | 320   
 23 | 320   
 24 | 320   
(25 rows)

select b,count(*) from spilltest group by b order by b;
 b  | count 
----+-------
 0  | 320   
 1  | 320   
 2  | 320   
 3  | 320   
 4  | 320   
 5  | 320   
 6  | 320   
 7  | 320   
 8  | 320   
 9  | 320   
 10 | 320   
 11 | 320   
 12 | 320   
 13 | 320   
 14 | 320   
 15 | 320   
 16 | 320   
 17 | 320   
 18 | 320   
 19 | 320   
 20 | 320   
 21 | 320   
 22 | 320   
 23 | 320   
 24 | 320   
(25 rows)
-- Test Hash Join when the work mem is too small for the hash table
drop table if exists spilltest;
DROP
create table spilltest (a integer, b integer);
CREATE
insert into spilltest select a, a%25 from generate_series(1,800000) a;
INSERT 800000
analyze; -- We have to do an analyze to force a hash join set enable_mergejoin=off;
ANALYZE;
set enable_nestloop=off;
SET
set enable_hashjoin=on;
SET

create temporary table spilltestresult2 as select t1.a as t1a, t1.b as t1b, t2.a as t2a, t2.b as t2b from spilltest t1, spilltest t2 where t1.a = t2.a;
CREATE 800000
-- check that the result looks sane
select count(*), sum(t1a), sum(t2a), sum(t2a), sum(t2b), sum(t1a * t1b) from spilltestresult2;
 count  | sum          | sum          | sum          | sum     | sum           
--------+--------------+--------------+--------------+---------+---------------
 800000 | 320000400000 | 320000400000 | 320000400000 | 9600000 | 3840036800000 
(1 row)

drop table spilltest1;
DROP
drop table spilltest2;
DROP
drop table spilltest;
DROP
drop table spilltestresult1;
DROP
drop table spilltestresult2;
DROP

-- start_ignore
RESET ROLE;
RESET
DROP ROLE IF EXISTS role1_memory_test;
DROP
DROP RESOURCE GROUP rg1_memory_test;
DROP
-- end_ignore
