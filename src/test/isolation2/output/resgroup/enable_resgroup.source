CREATE LANGUAGE plpythonu;
CREATE

-- start_ignore
! rmdir @cgroup_mnt_point@/cpu/gpdb;

! rmdir @cgroup_mnt_point@/cpuacct/gpdb;

! rmdir @cgroup_mnt_point@/cpuset/gpdb;

! mkdir @cgroup_mnt_point@/cpu/gpdb;

! mkdir @cgroup_mnt_point@/cpuacct/gpdb;

! mkdir @cgroup_mnt_point@/cpuset/gpdb;

-- end_ignore

-- we want to simulate a 3-primary cluster with 2GB memory and
-- gp_resource_group_memory_limit=100%, suppose:
--
-- - total: the total memory on the system;
-- - nseg: the max per-host segment count (including both master and primaries);
-- - limit: the gp_resource_group_memory_limit used for the simulation;
--
-- then we have: total * limit / nsegs = 2GB * 1.0 / 3
-- so: limit = 2GB * 1.0 / 3 * nsegs / total
--
-- with the simulation each primary segment should manage 682MB memory.
CREATE OR REPLACE FUNCTION adjust_memory_limit(nsegs bigint) RETURNS int AS $$ import os import psutil 
mem = psutil.virtual_memory().total swap = psutil.swap_memory().total overcommit = int(open('/proc/sys/vm/overcommit_ratio').readline()) total = swap + mem * overcommit / 100. 
limit = (2 << 30) * 1.0 * nsegs / 3 / total return os.system('gpconfig -c gp_resource_group_memory_limit -v {:f}'.format(limit)) $$ LANGUAGE plpythonu VOLATILE;
CREATE

SELECT adjust_memory_limit(count(hostname)) FROM gp_segment_configuration WHERE preferred_role = 'p' GROUP BY hostname ORDER BY count(hostname) DESC LIMIT 1;
 adjust_memory_limit 
---------------------
 0                   
(1 row)

DROP FUNCTION adjust_memory_limit(bigint);
DROP

-- enable resource group and restart cluster.
-- start_ignore
! gpconfig -c gp_resource_manager -v group;
20170502:01:28:13:000367 gpconfig:sdw6:gpadmin-[INFO]:-completed successfully

! gpconfig -c gp_resource_group_cpu_limit -v 0.9;
20170731:09:42:33:021079 gpconfig:sdw8:nyu-[INFO]:-completed successfully

! gpconfig -c max_connections -v 250 -m 25;
20170731:09:42:34:021163 gpconfig:sdw8:nyu-[INFO]:-completed successfully

! gpstop -rai;
-- end_ignore

-- after the restart we need a new connection to run the queries

0: SHOW gp_resource_manager;
 gp_resource_manager 
---------------------
 group               
(1 row)

-- resource queue statistics should not crash
0: SELECT * FROM pg_resqueue_status;
 rsqname | rsqcountlimit | rsqcountvalue | rsqcostlimit | rsqcostvalue | rsqwaiters | rsqholders 
---------+---------------+---------------+--------------+--------------+------------+------------
(0 rows)
0: SELECT * FROM gp_toolkit.gp_resqueue_status;
 queueid | rsqname | rsqcountlimit | rsqcountvalue | rsqcostlimit | rsqcostvalue | rsqmemorylimit | rsqmemoryvalue | rsqwaiters | rsqholders 
---------+---------+---------------+---------------+--------------+--------------+----------------+----------------+------------+------------
(0 rows)
0: SELECT * FROM gp_toolkit.gp_resq_priority_backend;
 rqpsession | rqpcommand | rqppriority | rqpweight 
------------+------------+-------------+-----------
(0 rows)

-- verify the default settings
0: SELECT * from gp_toolkit.gp_resgroup_config;
 groupid | groupname     | concurrency | cpu_rate_limit | memory_limit | memory_shared_quota | memory_spill_ratio | memory_auditor | cpuset 
---------+---------------+-------------+----------------+--------------+---------------------+--------------------+----------------+--------
 6437    | default_group | 20          | 30             | 0            | 80                  | 0                  | vmtracker      | -1     
 6438    | admin_group   | 10          | 10             | 10           | 80                  | 0                  | vmtracker      | -1     
(2 rows)

-- by default admin_group has concurrency set to -1 which leads to
-- very small memory quota for each resgroup slot, correct it.
0: ALTER RESOURCE GROUP admin_group SET concurrency 2;
ALTER

-- explicitly set memory settings
0: ALTER RESOURCE GROUP admin_group SET memory_limit 10;
ALTER
0: ALTER RESOURCE GROUP default_group SET memory_limit 30;
ALTER
0: ALTER RESOURCE GROUP admin_group SET memory_shared_quota 80;
ALTER
0: ALTER RESOURCE GROUP default_group SET memory_shared_quota 80;
ALTER
-- in later cases we will SHOW memory_spill_ratio as first command
-- to verify that it can be correctly loaded even for bypassed commands
0: ALTER RESOURCE GROUP admin_group SET memory_spill_ratio 10;
ALTER
0: ALTER RESOURCE GROUP default_group SET memory_spill_ratio 10;
ALTER
