-- @Description Ensures that a select after a vacuum operation is ok
-- 
DROP TABLE IF EXISTS ao;
DROP
DROP TABLE IF EXISTS ao2;
DROP
CREATE TABLE ao2 (a INT) WITH (appendonly=true, orientation=@orientation@);
CREATE
CREATE TABLE ao (a INT) WITH (appendonly=true, orientation=@orientation@);
CREATE
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao select generate_series(1,1000);
INSERT 1000
insert into ao2 select generate_series(1,1000);
INSERT 1000

-- The actual test begins
DELETE FROM ao WHERE a < 128;
DELETE 2667
1: BEGIN;
BEGIN
1: SELECT COUNT(*) FROM ao2;
 count 
-------
 1000  
(1 row)
2U: SELECT segno, case when tupcount = 0 then 'zero' when tupcount = 1 then 'one' when tupcount <= 5 then 'few' else 'many' end FROM gp_ao_or_aocs_seg('ao');
 segno | case 
-------+------
 1     | many 
(1 row)
2: VACUUM ao;
VACUUM
1: SELECT COUNT(*) FROM ao;
 count 
-------
 18333 
(1 row)
1: SELECT * FROM locktest_master WHERE coalesce = 'ao';
1: SELECT * FROM locktest_master WHERE coalesce = 'ao';
 coalesce | mode            | locktype | node 
----------+-----------------+----------+--------
 ao       | AccessShareLock | relation | master 
(1 row)
1: SELECT * FROM locktest_segments WHERE coalesce = 'ao';
 coalesce | mode            | locktype | node 
----------+-----------------+----------+------------
 ao       | AccessShareLock | relation | n segments 
(1 row)
1: COMMIT;
COMMIT
1: SELECT COUNT(*) FROM ao;
 count 
-------
 18333 
(1 row)
3: INSERT INTO ao VALUES (0);
INSERT 1
2U: SELECT segno, case when tupcount = 0 then 'zero' when tupcount = 1 then 'one' when tupcount <= 5 then 'few' else 'many' end FROM gp_ao_or_aocs_seg('ao');
 segno | case 
-------+------
 1     | zero 
 2     | many 
(2 rows)
