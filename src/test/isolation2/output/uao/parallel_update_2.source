-- @Description Tests that a update operation in progress will block all other updates
-- until the transaction is committed.
-- 
DROP TABLE IF EXISTS ao;
DROP
CREATE TABLE ao (a INT, b INT) WITH (appendonly=true, orientation=@orientation@);
CREATE
INSERT INTO ao SELECT i as a, i as b FROM generate_series(1,10) AS i;
INSERT 10

-- The actual test begins
1: BEGIN;
BEGIN
2: BEGIN;
BEGIN
2: UPDATE ao SET b = 42 WHERE a = 1;
UPDATE 1
2: SELECT * FROM locktest_master WHERE coalesce = 'ao';
 coalesce | mode                | locktype                 | node 
----------+---------------------+--------------------------+--------
 ao       | AccessExclusiveLock | append-only segment file | master 
 ao       | ExclusiveLock       | relation                 | master 
(2 rows)
2: SELECT * FROM locktest_segments WHERE coalesce = 'ao';
 coalesce | mode                | locktype                 | node 
----------+---------------------+--------------------------+-----------
 ao       | AccessExclusiveLock | append-only segment file | 1 segment 
 ao       | RowExclusiveLock    | relation                 | 1 segment 
(2 rows)
1&: UPDATE ao SET b = 42 WHERE a = 2;  <waiting ...>
2: COMMIT;
COMMIT
1<:  <... completed>
UPDATE 1
1: COMMIT;
COMMIT
3: SELECT * FROM ao WHERE a < 5 ORDER BY a;
 a | b  
---+----
 1 | 42 
 2 | 42 
 3 | 3  
 4 | 4  
(4 rows)
2U: SELECT * FROM gp_toolkit.__gp_aovisimap('ao');
 tid              | segno | row_num 
------------------+-------+---------
 (33554432,32769) | 1     | 1       
(1 row)
