create extension if not exists gp_inject_fault;
create or replace function test_consume_xids(int4) returns void
as '@abs_srcdir@/regress.so', 'test_consume_xids'
language C;
set debug_burn_xids=on;
-- Autovacuum should take care of anti-XID wraparounds of 'template0'. Because
-- of that, the age of template0 should not go much above
-- autovacuum_freeze_max_age (we assume the default of 200 million here).
select age(datfrozenxid) < 200 * 1000000 from pg_database where datname='template0';
 ?column? 
----------
 t
(1 row)

-- track that we've updated the row in pg_database for template0
SELECT gp_inject_fault_infinite('vacuum_update_dat_frozen_xid', 'skip', 1);
 gp_inject_fault_infinite 
--------------------------
 Success:
(1 row)

-- Suspend the autovacuum worker from vacuuming before
-- ShmemVariableCache->latestCompletedXid is expected to be updated
SELECT gp_inject_fault_infinite('auto_vac_worker_before_do_autovacuum', 'suspend', 1);
 gp_inject_fault_infinite 
--------------------------
 Success:
(1 row)

select test_consume_xids(100 * 1000000);
 test_consume_xids 
-------------------
 
(1 row)

select test_consume_xids(100 * 1000000);
 test_consume_xids 
-------------------
 
(1 row)

select test_consume_xids(10 * 1000000);
 test_consume_xids 
-------------------
 
(1 row)

-- Wait until autovacuum is triggered
SELECT gp_wait_until_triggered_fault('auto_vac_worker_before_do_autovacuum', 1, 1);
 gp_wait_until_triggered_fault 
-------------------------------
 Success:
(1 row)

SELECT gp_inject_fault('auto_vac_worker_before_do_autovacuum', 'reset', 1);
 gp_inject_fault 
-----------------
 Success:
(1 row)

-- wait until autovacuum worker updates pg_database
SELECT gp_wait_until_triggered_fault('vacuum_update_dat_frozen_xid', 1, 1);
 gp_wait_until_triggered_fault 
-------------------------------
 Success:
(1 row)

SELECT gp_inject_fault('vacuum_update_dat_frozen_xid', 'reset', 1);
 gp_inject_fault 
-----------------
 Success:
(1 row)

-- template0 should be young
select age(datfrozenxid) < 200 * 1000000 from pg_database where datname='template0';
 ?column? 
----------
 t
(1 row)

-- But autovacuum should not touch other databases. Hence, our database
-- should be well above the 200 million mark.
select age(datfrozenxid) > 200 * 1000000 from pg_database where datname=current_database();
 ?column? 
----------
 t
(1 row)

