create schema alter_ao_part_exch_@orientation@;
set search_path="$user",alter_ao_part_exch_@orientation@,public;
SET gp_default_storage_options='orientation=@orientation@';
--- Define a multi-leveled partitioned table with partitions of
--- different types (ao, aoco, heap). Then, exchange these partitions
--- with other tables.
BEGIN;
Create table ao_part
 (
 col1 bigint, col2 date, col3 text, col4 int) with(appendonly=true)
 distributed randomly partition by range(col2)
 subpartition by list (col3)
 subpartition template (
   default subpartition subothers,
   subpartition sub1 values ('ao_row'),
   subpartition sub2 values ('heap') with (appendonly=false),
   subpartition sub3 values ('ao_col') with (appendonly=true, orientation=column))
 (default partition others, start(date '2008-01-01') end(date '2008-04-30') every(interval '1 month'));
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_others" for table "ao_part"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_others_2_prt_subothers" for table "ao_part_1_prt_others"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_others_2_prt_sub1" for table "ao_part_1_prt_others"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_others_2_prt_sub2" for table "ao_part_1_prt_others"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_others_2_prt_sub3" for table "ao_part_1_prt_others"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_2" for table "ao_part"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_2_2_prt_subothers" for table "ao_part_1_prt_2"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_2_2_prt_sub1" for table "ao_part_1_prt_2"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_2_2_prt_sub2" for table "ao_part_1_prt_2"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_2_2_prt_sub3" for table "ao_part_1_prt_2"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_3" for table "ao_part"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_3_2_prt_subothers" for table "ao_part_1_prt_3"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_3_2_prt_sub1" for table "ao_part_1_prt_3"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_3_2_prt_sub2" for table "ao_part_1_prt_3"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_3_2_prt_sub3" for table "ao_part_1_prt_3"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_4" for table "ao_part"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_4_2_prt_subothers" for table "ao_part_1_prt_4"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_4_2_prt_sub1" for table "ao_part_1_prt_4"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_4_2_prt_sub2" for table "ao_part_1_prt_4"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_4_2_prt_sub3" for table "ao_part_1_prt_4"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_5" for table "ao_part"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_5_2_prt_subothers" for table "ao_part_1_prt_5"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_5_2_prt_sub1" for table "ao_part_1_prt_5"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_5_2_prt_sub2" for table "ao_part_1_prt_5"
NOTICE:  CREATE TABLE will create partition "ao_part_1_prt_5_2_prt_sub3" for table "ao_part_1_prt_5"
insert into ao_part(col1, col2, col3) values
 (1, '2008-01-02', 'ao_row'), (1, '2008-01-02', 'heap'), (1, '2008-01-02', 'ao_col'),
 (1, '2008-02-03', 'ao_row'), (1, '2008-02-03', 'heap'), (1, '2008-02-03', 'ao_col'),
 (1, '2008-03-04', 'ao_row'), (1, '2008-03-04', 'heap'), (1, '2008-03-04', 'ao_col'),
 (1, '2008-04-15', 'ao_row'), (1, '2008-04-15', 'heap'), (1, '2008-04-05', 'ao_col'),
 (1, '2008-05-06', 'ao_row');
select count(*) FROM pg_appendonly WHERE visimapidxid is not NULL AND
visimapidxid is not NULL AND relid in (SELECT c.oid FROM pg_class c
inner join pg_namespace n ON c.relnamespace = n.oid and c.relname like
'ao_part%' and n.nspname = 'alter_ao_part_exch_@orientation@');
 count 
-------
    21
(1 row)

\t
select relkind, case when relstorage = 'c' then 'column' when
relstorage='a' then 'row' end from pg_class c inner join
pg_namespace n on c.relnamespace = n.oid and relname like
'ao_part_1_prt_5_2_prt_subothers%' and n.nspname =
'alter_ao_part_exch_@orientation@';
 r       | @orientation@

\t
--- Exchange partitions
create table exh_ao_ao (like ao_part) with (appendonly=true) distributed randomly;
insert into exh_ao_ao values (1, '2008-02-20', 'ao_row'), (2, '2008-02-21', 'ao_row');
Alter table ao_part alter partition for (rank(2)) exchange partition for ('ao_row') with table exh_ao_ao;
NOTICE:  exchanged partition "sub1" of partition for rank 2 of relation "ao_part" with relation "exh_ao_ao"
update ao_part set col4 = col1 where col2 in ('2008-02-20', '2008-02-21');
create table exh_ao_co (like ao_part) with (appendonly=true, orientation=column) distributed randomly;
insert into exh_ao_co values (1, '2008-03-20', 'ao_row'),  (2, '2008-03-21', 'ao_row');
Alter table ao_part alter partition for (rank(3)) exchange partition for ('ao_row') with table exh_ao_co;
NOTICE:  exchanged partition "sub1" of partition for rank 3 of relation "ao_part" with relation "exh_ao_co"
delete from ao_part where col2 = '2008-03-20';
create table exh_ao_heap (like ao_part) distributed randomly;
insert into exh_ao_heap values (1, '2008-04-20', 'ao_row'),  (2, '2008-04-21', 'ao_row');
Alter table ao_part alter partition for (rank(4)) exchange partition for ('ao_row') with table exh_ao_heap;
NOTICE:  exchanged partition "sub1" of partition for rank 4 of relation "ao_part" with relation "exh_ao_heap"
update ao_part set col4 = -col1 where col2 in ('2008-04-20', '2008-04-21');
select count(*) from ao_part where col4 < 0;
 count 
-------
     2
(1 row)

create table exh_heap_ao (like ao_part) with (appendonly=true) distributed randomly;
insert into exh_heap_ao values (1, '2008-01-20', 'heap'), (2, '2008-01-21', 'heap');
Alter table ao_part alter partition for (rank(1)) exchange partition for ('heap') with table exh_heap_ao;
NOTICE:  exchanged partition "sub2" of partition for rank 1 of relation "ao_part" with relation "exh_heap_ao"
update ao_part set col4 = col1 where col2 in ('2008-01-20', '2008-01-21');
select * from ao_part where col2 in ('2008-01-20', '2008-01-21') and col3 = 'heap';
 col1 |    col2    | col3 | col4 
------+------------+------+------
    1 | 01-20-2008 | heap |    1
    2 | 01-21-2008 | heap |    2
(2 rows)

create table exh_co_ao (like ao_part) with (appendonly=true) distributed randomly;
insert into exh_co_ao values (1, '2008-01-20', 'ao_col'), (2, '2008-01-21', 'ao_col');
Alter table ao_part alter partition for (rank(1)) exchange partition for ('ao_col') with table exh_co_ao;
NOTICE:  exchanged partition "sub3" of partition for rank 1 of relation "ao_part" with relation "exh_co_ao"
update ao_part set col4 = -col1 where col4 is null;
select count(*) from ao_part where col4 is not null;
 count 
-------
    17
(1 row)

\t
select relkind, case when relstorage = 'c' then 'column' when
relstorage='a' then 'row' end from pg_class c inner join
pg_namespace n on c.relnamespace = n.oid and relname like
'ao_part_1_prt_5_2_prt_subothers%' and n.nspname =
'alter_ao_part_exch_@orientation@';
 r       | @orientation@

\t
select count(*) from exh_ao_ao;
 count 
-------
     1
(1 row)

select count(*) from exh_ao_co;
 count 
-------
     1
(1 row)

select count(*) from exh_ao_heap;
 count 
-------
     1
(1 row)

select count(*) from exh_heap_ao;
 count 
-------
     1
(1 row)

select count(*) from exh_co_ao;
 count 
-------
     1
(1 row)

--- This touches 5 rows, so invisible row count increases by 5
Update ao_part set col4=2 where col2='2008-01-20' OR col2='2008-02-20'
 OR col2='2008-03-20' OR col2='2008-04-20';
select count(*) as visible_tuples from ao_part;
 visible_tuples 
----------------
             17
(1 row)

set gp_select_invisible = true;
select count(*) as all_tuples from ao_part;
 all_tuples 
------------
         39
(1 row)

set gp_select_invisible = false;
--- This touches 5 rows
Delete from ao_part where col2='2008-01-21' OR col2='2008-02-21'
 OR col2='2008-03-21' OR col2='2008-04-21';
select count(*) as visible_tuples from ao_part;
 visible_tuples 
----------------
             12
(1 row)

set gp_select_invisible = true;
select count(*) as all_tuples from ao_part;
 all_tuples 
------------
         39
(1 row)

set gp_select_invisible = false;
COMMIT;
