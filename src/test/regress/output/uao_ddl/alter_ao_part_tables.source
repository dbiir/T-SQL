create schema alter_ao_part_tables_@orientation@;
set search_path="$user",alter_ao_part_tables_@orientation@,public;
SET gp_default_storage_options='orientation=@orientation@';
BEGIN;
Create table sto_alt_ao_part(a int, b int, c int, d int)
 with(appendonly=true) distributed by (a)
 partition by range(b) subpartition by range(c)
 subpartition template
  (default subpartition subothers, start (1) end(7) every (4))
 (default partition others, start(1) end(5) every(3));
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_others" for table "sto_alt_ao_part"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_others_2_prt_subothers" for table "sto_alt_ao_part_1_prt_others"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_others_2_prt_2" for table "sto_alt_ao_part_1_prt_others"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_others_2_prt_3" for table "sto_alt_ao_part_1_prt_others"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_2" for table "sto_alt_ao_part"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_2_2_prt_subothers" for table "sto_alt_ao_part_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_2_2_prt_2" for table "sto_alt_ao_part_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_2_2_prt_3" for table "sto_alt_ao_part_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_3" for table "sto_alt_ao_part"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_3_2_prt_subothers" for table "sto_alt_ao_part_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_3_2_prt_2" for table "sto_alt_ao_part_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_3_2_prt_3" for table "sto_alt_ao_part_1_prt_3"
Insert into sto_alt_ao_part values(1,generate_series(1,8),3,4);
Insert into sto_alt_ao_part values(2,3,generate_series(1,9),3);
select count(*) from sto_alt_ao_part;
 count 
-------
    17
(1 row)

Create table sto_altap2 (a int, b int, c varchar(20))
 with(appendonly=true) distributed by (a) partition by range(a)
 (default partition others,
  partition p1 start(1) end(5),
  partition p2 start(5) end(10),
  partition p3 start(10) end(15));
NOTICE:  CREATE TABLE will create partition "sto_altap2_1_prt_others" for table "sto_altap2"
NOTICE:  CREATE TABLE will create partition "sto_altap2_1_prt_p1" for table "sto_altap2"
NOTICE:  CREATE TABLE will create partition "sto_altap2_1_prt_p2" for table "sto_altap2"
NOTICE:  CREATE TABLE will create partition "sto_altap2_1_prt_p3" for table "sto_altap2"
Insert into sto_altap2 values(generate_series(1,20), 12, 'A');
select count(*) from sto_altap2;
 count 
-------
    20
(1 row)

create table sto_altap3 (col1 bigint, col2 date, col3 text, col4 int)
 with(appendonly=true) distributed randomly
 partition by range(col2) subpartition by list (col3)
 subpartition template (
  default subpartition subothers,
  subpartition sub1 values ('one'),
  subpartition sub2 values ('two'))
 (default partition others, start(date '2008-01-01') end(date '2008-04-30')
  every(interval '1 month'));
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_others" for table "sto_altap3"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_others_2_prt_subothers" for table "sto_altap3_1_prt_others"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_others_2_prt_sub1" for table "sto_altap3_1_prt_others"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_others_2_prt_sub2" for table "sto_altap3_1_prt_others"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_2" for table "sto_altap3"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_2_2_prt_subothers" for table "sto_altap3_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_2_2_prt_sub1" for table "sto_altap3_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_2_2_prt_sub2" for table "sto_altap3_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_3" for table "sto_altap3"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_3_2_prt_subothers" for table "sto_altap3_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_3_2_prt_sub1" for table "sto_altap3_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_3_2_prt_sub2" for table "sto_altap3_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_4" for table "sto_altap3"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_4_2_prt_subothers" for table "sto_altap3_1_prt_4"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_4_2_prt_sub1" for table "sto_altap3_1_prt_4"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_4_2_prt_sub2" for table "sto_altap3_1_prt_4"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_5" for table "sto_altap3"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_5_2_prt_subothers" for table "sto_altap3_1_prt_5"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_5_2_prt_sub1" for table "sto_altap3_1_prt_5"
NOTICE:  CREATE TABLE will create partition "sto_altap3_1_prt_5_2_prt_sub2" for table "sto_altap3_1_prt_5"
insert into sto_altap3(col1, col2, col3) values
 (1, '2008-01-02', 'one'), (2, '2008-01-02', 'two'), (3, '2008-01-02', 'three'),
 (1, '2008-02-03', 'two'), (2, '2008-02-03', 'one'), (3, '2008-02-03', 'three'),
 (1, '2008-03-04', 'three'), (1, '2008-04-04', 'one'), (2, '2008-03-04', 'two');
insert into sto_altap3(col1, col2, col3) values
 (1, '2008-04-05', 'one'), (2, '2008-04-05', 'two'), (3, '2008-04-05', 'three'),
 (1, '2008-05-06', 'one'), (2, '2008-05-06', 'two'), (3, '2008-05-06', 'three');
select count(*) from sto_altap3;
 count 
-------
    15
(1 row)

-- Alter table rename default partition
Alter table sto_alt_ao_part rename default partition to new_others;
NOTICE:  renamed partition "others" to "new_others" for relation "sto_alt_ao_part"
Insert into sto_alt_ao_part values(1,10,3,4);
Update sto_alt_ao_part set d = -a where b = 10;
select * from sto_alt_ao_part;
 a | b  | c | d  
---+----+---+----
 1 |  1 | 3 |  4
 1 |  2 | 3 |  4
 2 |  3 | 1 |  3
 2 |  3 | 2 |  3
 1 |  3 | 3 |  4
 2 |  3 | 3 |  3
 2 |  3 | 4 |  3
 2 |  3 | 5 |  3
 2 |  3 | 6 |  3
 2 |  3 | 7 |  3
 2 |  3 | 8 |  3
 2 |  3 | 9 |  3
 1 |  4 | 3 |  4
 1 |  5 | 3 |  4
 1 |  6 | 3 |  4
 1 |  7 | 3 |  4
 1 |  8 | 3 |  4
 1 | 10 | 3 | -1
(18 rows)

-- Alter table rename partition
Alter table sto_altap3 RENAME PARTITION FOR ('2008-01-01') TO jan08;
Update sto_altap3 set col4 = 5 where col1 = 1;
select count(*) from sto_altap3;
 count 
-------
    15
(1 row)

-- Alter table drop default partition
Alter table sto_alt_ao_part drop default partition;
NOTICE:  dropped partition "new_others" for relation "sto_alt_ao_part" and its children
Update sto_alt_ao_part set d = 5 where b = 4;
select * from sto_alt_ao_part;
 a | b | c | d 
---+---+---+---
 1 | 1 | 3 | 4
 1 | 2 | 3 | 4
 2 | 3 | 1 | 3
 2 | 3 | 2 | 3
 2 | 3 | 3 | 3
 1 | 3 | 3 | 4
 2 | 3 | 4 | 3
 2 | 3 | 5 | 3
 2 | 3 | 6 | 3
 2 | 3 | 7 | 3
 2 | 3 | 8 | 3
 2 | 3 | 9 | 3
 1 | 4 | 3 | 5
(13 rows)

-- Alter table drop partition
Alter table sto_alt_ao_part drop partition for (rank(1));
NOTICE:  dropped partition for rank 1 for relation "sto_alt_ao_part" and its children
Update sto_alt_ao_part set d = 4 where b = 4;
select * from sto_alt_ao_part;
 a | b | c | d 
---+---+---+---
 1 | 4 | 3 | 4
(1 row)

-- Alter table add heap partition
Alter table sto_alt_ao_part add partition new_p start(6) end(8);
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_new_p" for table "sto_alt_ao_part"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_new_p_2_prt_subothers" for table "sto_alt_ao_part_1_prt_new_p"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_new_p_2_prt_2" for table "sto_alt_ao_part_1_prt_new_p"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_new_p_2_prt_3" for table "sto_alt_ao_part_1_prt_new_p"
Insert into sto_alt_ao_part values(1,7,3,4);
Update sto_alt_ao_part set d = -a where b = 4 or b = 7;
select * from sto_alt_ao_part;
 a | b | c | d  
---+---+---+----
 1 | 4 | 3 | -1
 1 | 7 | 3 | -1
(2 rows)

-- Alter table add ao partition
Alter table sto_alt_ao_part add partition p1 start(9) end(13)
with(appendonly=true);
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p1" for table "sto_alt_ao_part"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p1_2_prt_subothers" for table "sto_alt_ao_part_1_prt_p1"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p1_2_prt_2" for table "sto_alt_ao_part_1_prt_p1"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p1_2_prt_3" for table "sto_alt_ao_part_1_prt_p1"
Insert into sto_alt_ao_part values(1,10,3,4);
Update sto_alt_ao_part set d = -a where b = 10;
select * from sto_alt_ao_part;
 a | b  | c | d  
---+----+---+----
 1 |  4 | 3 | -1
 1 |  7 | 3 | -1
 1 | 10 | 3 | -1
(3 rows)

-- Alter table add co partition
Alter table sto_alt_ao_part add partition p2 start(14) end(17)
with(appendonly=true, orientation=column);
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p2" for table "sto_alt_ao_part"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p2_2_prt_subothers" for table "sto_alt_ao_part_1_prt_p2"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p2_2_prt_2" for table "sto_alt_ao_part_1_prt_p2"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p2_2_prt_3" for table "sto_alt_ao_part_1_prt_p2"
Insert into sto_alt_ao_part values(1,15,3,4);
Update sto_alt_ao_part set d = -a where b = 15;
select * from sto_alt_ao_part order by b,c ;
 a | b  | c | d  
---+----+---+----
 1 |  4 | 3 | -1
 1 |  7 | 3 | -1
 1 | 10 | 3 | -1
 1 | 15 | 3 | -1
(4 rows)

-- Alter table add default partition
Alter table sto_alt_ao_part add default partition part_others;
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_part_others" for table "sto_alt_ao_part"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_part_others_2_prt_subothers" for table "sto_alt_ao_part_1_prt_part_others"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_part_others_2_prt_2" for table "sto_alt_ao_part_1_prt_part_others"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_part_others_2_prt_3" for table "sto_alt_ao_part_1_prt_part_others"
Insert into sto_alt_ao_part values(1,25,3,4);
Update sto_alt_ao_part set d = -a where b = 25;
select * from sto_alt_ao_part;
 a | b  | c | d  
---+----+---+----
 1 |  4 | 3 | -1
 1 |  7 | 3 | -1
 1 | 10 | 3 | -1
 1 | 15 | 3 | -1
 1 | 25 | 3 | -1
(5 rows)

-- Alter table split partition
Alter table sto_altap2 split partition p1 at(3) into
 (partition splitc, partition splitd);
NOTICE:  exchanged partition "p1" of relation "sto_altap2" with relation "pg_temp_126658"
NOTICE:  dropped partition "p1" for relation "sto_altap2"
NOTICE:  CREATE TABLE will create partition "sto_altap2_1_prt_splitc" for table "sto_altap2"
NOTICE:  CREATE TABLE will create partition "sto_altap2_1_prt_splitd" for table "sto_altap2"
Update sto_altap2 set b = 5 where a = 1 or a = 4;
select * from sto_altap2 order by a;
 a  | b  | c 
----+----+---
  1 |  5 | A
  2 | 12 | A
  3 | 12 | A
  4 |  5 | A
  5 | 12 | A
  6 | 12 | A
  7 | 12 | A
  8 | 12 | A
  9 | 12 | A
 10 | 12 | A
 11 | 12 | A
 12 | 12 | A
 13 | 12 | A
 14 | 12 | A
 15 | 12 | A
 16 | 12 | A
 17 | 12 | A
 18 | 12 | A
 19 | 12 | A
 20 | 12 | A
(20 rows)

Alter table sto_alt_ao_part alter partition p1 split partition
 FOR (RANK(1)) at(2) into (partition splita,partition splitb);
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p1_2_prt_splita" for table "sto_alt_ao_part_1_prt_p1"
NOTICE:  CREATE TABLE will create partition "sto_alt_ao_part_1_prt_p1_2_prt_splitb" for table "sto_alt_ao_part_1_prt_p1"
-- TODO: The following update causes "ERROR: moving tuple from
-- partition ... to partition ... is not supported".  Enable the
-- update statement after this bug is fixed.
-- Update sto_alt_ao_part set d = 0 where b = 10;
select * from sto_alt_ao_part;
 a | b  | c | d  
---+----+---+----
 1 |  4 | 3 | -1
 1 |  7 | 3 | -1
 1 | 10 | 3 | -1
 1 | 15 | 3 | -1
 1 | 25 | 3 | -1
(5 rows)

-- Alter table split default partition
Alter table sto_altap2 split default partition
 start(15) end(17) into (partition p1, partition others);
NOTICE:  exchanged partition "others" of relation "sto_altap2" with relation "pg_temp_126658"
NOTICE:  dropped partition "others" for relation "sto_altap2"
NOTICE:  CREATE TABLE will create partition "sto_altap2_1_prt_p1" for table "sto_altap2"
NOTICE:  CREATE TABLE will create partition "sto_altap2_1_prt_others" for table "sto_altap2"
Update sto_altap2 set b = 4 where a = 15 or a = 16;
select * from sto_altap2 order by a;
 a  | b  | c 
----+----+---
  1 |  5 | A
  2 | 12 | A
  3 | 12 | A
  4 |  5 | A
  5 | 12 | A
  6 | 12 | A
  7 | 12 | A
  8 | 12 | A
  9 | 12 | A
 10 | 12 | A
 11 | 12 | A
 12 | 12 | A
 13 | 12 | A
 14 | 12 | A
 15 |  4 | A
 16 |  4 | A
 17 | 12 | A
 18 | 12 | A
 19 | 12 | A
 20 | 12 | A
(20 rows)

-- Truncate a partitioned table
Truncate table sto_altap2;
select * from sto_altap2;
 a | b | c 
---+---+---
(0 rows)

Insert into sto_altap2 values(generate_series(1,20), 12, 'A');
Update sto_altap2 set b = 4 where a = 15 or a = 16;
select count(*) as visible_tuples from sto_altap2;
 visible_tuples 
----------------
             20
(1 row)

set gp_select_invisible=true;
select count(*) as all_tuples from sto_altap2;
 all_tuples 
------------
         22
(1 row)

set gp_select_invisible=false;
-- Check that visimaps were created properly
select distinct a.visimaprelid is not NULL, a.visimapidxid is not NULL
 from pg_appendonly a inner join pg_class c on a.relid = c.oid and
 c.relname like 'sto_alt%' and c.relstorage in ('a', 'c');
 ?column? | ?column? 
----------+----------
 t        | t
(1 row)

-- Drop partition table, check pg_appendonly
drop table sto_altap2;
select distinct a.visimaprelid is NULL, a.visimapidxid is NULL
 from pg_appendonly a inner join pg_class c on a.relid = c.oid and
 c.relname like 'sto_altap2%';
 ?column? | ?column? 
----------+----------
(0 rows)

COMMIT;
-- Vacuum full to test compaction
set gp_select_invisible=true;
select count(*) as all_tuples_before_vacuum from sto_altap3;
 all_tuples_before_vacuum 
--------------------------
                       21
(1 row)

set gp_select_invisible=false;
vacuum full sto_altap3;
select count(*) as visible_tuples_post_vacuum from sto_altap3;
 visible_tuples_post_vacuum 
----------------------------
                         15
(1 row)

set gp_select_invisible=true;
select count(*) as all_tuples_post_vacuum from sto_altap3;
 all_tuples_post_vacuum 
------------------------
                     15
(1 row)

set gp_select_invisible=false;
