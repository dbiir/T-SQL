create schema bfv_partition;
set search_path=bfv_partition;
--
-- Tests if it is using casting comparator for partition selector with compatible types
--
-- SETUP
CREATE TABLE TIMESTAMP_MONTH_rangep_STARTINCL (i1 int, f2 timestamp)
partition by range (f2)
(
  start ('2000-01-01'::timestamp) INCLUSIVE
  end (date '2001-01-01'::timestamp) EXCLUSIVE
  every ('1 month'::interval)
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_1" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_2" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_3" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_4" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_5" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_6" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_7" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_8" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_9" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_10" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_11" for table "timestamp_month_rangep_startincl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startincl_1_prt_12" for table "timestamp_month_rangep_startincl"
CREATE TABLE TIMESTAMP_MONTH_rangep_STARTEXCL (i1 int, f2 timestamp)
partition by range (f2)
(
  start ('2000-01-01'::timestamp) EXCLUSIVE
  end (date '2001-01-01'::timestamp) INCLUSIVE
  every ('1 month'::interval)
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_1" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_2" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_3" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_4" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_5" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_6" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_7" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_8" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_9" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_10" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_11" for table "timestamp_month_rangep_startexcl"
NOTICE:  CREATE TABLE will create partition "timestamp_month_rangep_startexcl_1_prt_12" for table "timestamp_month_rangep_startexcl"
CREATE TABLE TIMESTAMP_MONTH_listp (i1 int, f2 timestamp)
partition by list (f2)
(
  partition jan1 values ('2000-01-01'::timestamp),
  partition jan2 values ('2000-01-02'::timestamp),
  partition jan3 values ('2000-01-03'::timestamp),
  partition jan4 values ('2000-01-04'::timestamp),
  partition jan5 values ('2000-01-05'::timestamp)
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "timestamp_month_listp_1_prt_jan1" for table "timestamp_month_listp"
NOTICE:  CREATE TABLE will create partition "timestamp_month_listp_1_prt_jan2" for table "timestamp_month_listp"
NOTICE:  CREATE TABLE will create partition "timestamp_month_listp_1_prt_jan3" for table "timestamp_month_listp"
NOTICE:  CREATE TABLE will create partition "timestamp_month_listp_1_prt_jan4" for table "timestamp_month_listp"
NOTICE:  CREATE TABLE will create partition "timestamp_month_listp_1_prt_jan5" for table "timestamp_month_listp"
-- TEST
-- Middle of a middle range
INSERT INTO TIMESTAMP_MONTH_rangep_STARTINCL values (1, '2000-07-16');
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = '2000-07-16';
 i1 |            f2            
----+--------------------------
  1 | Sun Jul 16 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_TIMESTAMP('2000-07-16', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  1 | Sun Jul 16 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_DATE('2000-07-16', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  1 | Sun Jul 16 00:00:00 2000
(1 row)

-- Beginning of the first range
INSERT INTO TIMESTAMP_MONTH_rangep_STARTINCL values (2, '2000-01-01');
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = '2000-01-01';
 i1 |            f2            
----+--------------------------
  2 | Sat Jan 01 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_TIMESTAMP('2000-01-01', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  2 | Sat Jan 01 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_DATE('2000-01-01', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  2 | Sat Jan 01 00:00:00 2000
(1 row)

INSERT INTO TIMESTAMP_MONTH_rangep_STARTINCL values (3, '2000-01-02');
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = '2000-01-02';
 i1 |            f2            
----+--------------------------
  3 | Sun Jan 02 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_TIMESTAMP('2000-01-02', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  3 | Sun Jan 02 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_DATE('2000-01-02', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  3 | Sun Jan 02 00:00:00 2000
(1 row)

-- End of the last range
INSERT INTO TIMESTAMP_MONTH_rangep_STARTINCL values (4, '2000-12-31');
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = '2000-12-31';
 i1 |            f2            
----+--------------------------
  4 | Sun Dec 31 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_TIMESTAMP('2000-12-31', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  4 | Sun Dec 31 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_DATE('2000-12-31', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  4 | Sun Dec 31 00:00:00 2000
(1 row)

INSERT INTO TIMESTAMP_MONTH_rangep_STARTINCL values (5, '2001-01-01'); -- should fail, no such partition
ERROR:  no partition for partitioning key  (seg1 office-4-160.pa.pivotal.io:25433 pid=9457)
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = '2001-01-01';
 i1 | f2 
----+----
(0 rows)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_TIMESTAMP('2001-01-01', 'YYYY-MM-DD');
 i1 | f2 
----+----
(0 rows)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTINCL WHERE f2 = TO_DATE('2001-01-01', 'YYYY-MM-DD');
 i1 | f2 
----+----
(0 rows)

-- Range partitioning: START EXCLUSIVE, END INCLUSIVE
-- Middle of a middle range
INSERT INTO TIMESTAMP_MONTH_rangep_STARTEXCL values (1, '2000-07-16');
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = '2000-07-16';
 i1 |            f2            
----+--------------------------
  1 | Sun Jul 16 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_TIMESTAMP('2000-07-16', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  1 | Sun Jul 16 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_DATE('2000-07-16', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  1 | Sun Jul 16 00:00:00 2000
(1 row)

-- Beginning of the first range
INSERT INTO TIMESTAMP_MONTH_rangep_STARTEXCL values (2, '2000-01-01'); -- should fail, no such partition
ERROR:  no partition for partitioning key  (seg0 office-4-160.pa.pivotal.io:25432 pid=9456)
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = '2000-01-01';
 i1 | f2 
----+----
(0 rows)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_TIMESTAMP('2000-01-01', 'YYYY-MM-DD');
 i1 | f2 
----+----
(0 rows)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_DATE('2000-01-01', 'YYYY-MM-DD');
 i1 | f2 
----+----
(0 rows)

INSERT INTO TIMESTAMP_MONTH_rangep_STARTEXCL values (3, '2000-01-02');
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = '2000-01-02';
 i1 |            f2            
----+--------------------------
  3 | Sun Jan 02 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_TIMESTAMP('2000-01-02', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  3 | Sun Jan 02 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_DATE('2000-01-02', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  3 | Sun Jan 02 00:00:00 2000
(1 row)

-- End of the last range
INSERT INTO TIMESTAMP_MONTH_rangep_STARTEXCL values (4, '2000-12-31');
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = '2000-12-31';
 i1 |            f2            
----+--------------------------
  4 | Sun Dec 31 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_TIMESTAMP('2000-12-31', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  4 | Sun Dec 31 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_DATE('2000-12-31', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  4 | Sun Dec 31 00:00:00 2000
(1 row)

INSERT INTO TIMESTAMP_MONTH_rangep_STARTEXCL values (5, '2001-01-01');
SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = '2001-01-01';
 i1 |            f2            
----+--------------------------
  5 | Mon Jan 01 00:00:00 2001
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_TIMESTAMP('2001-01-01', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  5 | Mon Jan 01 00:00:00 2001
(1 row)

SELECT * FROM TIMESTAMP_MONTH_rangep_STARTEXCL WHERE f2 = TO_DATE('2001-01-01', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  5 | Mon Jan 01 00:00:00 2001
(1 row)

-- List partitioning
INSERT INTO TIMESTAMP_MONTH_listp values (1, '2000-01-03');
SELECT * FROM TIMESTAMP_MONTH_listp WHERE f2 = '2000-01-03';
 i1 |            f2            
----+--------------------------
  1 | Mon Jan 03 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_listp WHERE f2 = TO_TIMESTAMP('2000-01-03', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  1 | Mon Jan 03 00:00:00 2000
(1 row)

SELECT * FROM TIMESTAMP_MONTH_listp WHERE f2 = TO_DATE('2000-01-03', 'YYYY-MM-DD');
 i1 |            f2            
----+--------------------------
  1 | Mon Jan 03 00:00:00 2000
(1 row)

--
-- Data Engineer can see partition key in psql
--
-- SETUP
CREATE TABLE T26002_T1 (empid int, departmentid int, year int, region varchar(20))
DISTRIBUTED BY (empid)
  PARTITION BY RANGE (year)
  SUBPARTITION BY LIST (region, departmentid)
    SUBPARTITION TEMPLATE (
       SUBPARTITION usa VALUES (('usa', 1)),
       SUBPARTITION europe VALUES (('europe', 2)),
       SUBPARTITION asia VALUES (('asia', 3)),
       DEFAULT SUBPARTITION other_regions)
( START (2012) END (2015) EVERY (3),
  DEFAULT PARTITION outlying_years);
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_outlying_years" for table "t26002_t1"
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_2" for table "t26002_t1"
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_outlying_years_2_prt_usa" for table "t26002_t1_1_prt_outlying_years"
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_outlying_years_2_prt_europe" for table "t26002_t1_1_prt_outlying_years"
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_outlying_years_2_prt_asia" for table "t26002_t1_1_prt_outlying_years"
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_outlying_years_2_prt_other_regions" for table "t26002_t1_1_prt_outlying_years"
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_2_2_prt_usa" for table "t26002_t1_1_prt_2"
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_2_2_prt_europe" for table "t26002_t1_1_prt_2"
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_2_2_prt_asia" for table "t26002_t1_1_prt_2"
NOTICE:  CREATE TABLE will create partition "t26002_t1_1_prt_2_2_prt_other_regions" for table "t26002_t1_1_prt_2"
-- TEST
-- expected to see the partition key
\d T26002_T1;
         Table "bfv_partition.t26002_t1"
    Column    |         Type          | Modifiers 
--------------+-----------------------+-----------
 empid        | integer               | 
 departmentid | integer               | 
 year         | integer               | 
 region       | character varying(20) | 
Number of child tables: 2 (Use \d+ to list them.)
Distributed by: (empid)
Partition by: (year)

\d t26002_t1_1_prt_2;
     Table "bfv_partition.t26002_t1_1_prt_2"
    Column    |         Type          | Modifiers 
--------------+-----------------------+-----------
 empid        | integer               | 
 departmentid | integer               | 
 year         | integer               | 
 region       | character varying(20) | 
Check constraints:
    "t26002_t1_1_prt_2_check" CHECK (year >= 2012 AND year < 2015)
Inherits: t26002_t1
Number of child tables: 4 (Use \d+ to list them.)
Distributed by: (empid)
Partition by: (region, departmentid)

\d t26002_t1_1_prt_2_2_prt_asia;
Table "bfv_partition.t26002_t1_1_prt_2_2_prt_asia"
    Column    |         Type          | Modifiers 
--------------+-----------------------+-----------
 empid        | integer               | 
 departmentid | integer               | 
 year         | integer               | 
 region       | character varying(20) | 
Check constraints:
    "t26002_t1_1_prt_2_2_prt_asia_check" CHECK (region::text = 'asia'::text AND departmentid = 3)
    "t26002_t1_1_prt_2_check" CHECK (year >= 2012 AND year < 2015)
Inherits: t26002_t1_1_prt_2
Distributed by: (empid)

\d+ T26002_T1;
                             Table "bfv_partition.t26002_t1"
    Column    |         Type          | Modifiers | Storage  | Stats target | Description 
--------------+-----------------------+-----------+----------+--------------+-------------
 empid        | integer               |           | plain    |              | 
 departmentid | integer               |           | plain    |              | 
 year         | integer               |           | plain    |              | 
 region       | character varying(20) |           | extended |              | 
Child tables: t26002_t1_1_prt_2,
              t26002_t1_1_prt_outlying_years
Distributed by: (empid)
Partition by: (year)

\d+ t26002_t1_1_prt_2;
                         Table "bfv_partition.t26002_t1_1_prt_2"
    Column    |         Type          | Modifiers | Storage  | Stats target | Description 
--------------+-----------------------+-----------+----------+--------------+-------------
 empid        | integer               |           | plain    |              | 
 departmentid | integer               |           | plain    |              | 
 year         | integer               |           | plain    |              | 
 region       | character varying(20) |           | extended |              | 
Check constraints:
    "t26002_t1_1_prt_2_check" CHECK (year >= 2012 AND year < 2015)
Inherits: t26002_t1
Child tables: t26002_t1_1_prt_2_2_prt_asia,
              t26002_t1_1_prt_2_2_prt_europe,
              t26002_t1_1_prt_2_2_prt_other_regions,
              t26002_t1_1_prt_2_2_prt_usa
Distributed by: (empid)
Partition by: (region, departmentid)

\d+ t26002_t1_1_prt_2_2_prt_asia;
                    Table "bfv_partition.t26002_t1_1_prt_2_2_prt_asia"
    Column    |         Type          | Modifiers | Storage  | Stats target | Description 
--------------+-----------------------+-----------+----------+--------------+-------------
 empid        | integer               |           | plain    |              | 
 departmentid | integer               |           | plain    |              | 
 year         | integer               |           | plain    |              | 
 region       | character varying(20) |           | extended |              | 
Check constraints:
    "t26002_t1_1_prt_2_2_prt_asia_check" CHECK (region::text = 'asia'::text AND departmentid = 3)
    "t26002_t1_1_prt_2_check" CHECK (year >= 2012 AND year < 2015)
Inherits: t26002_t1_1_prt_2
Distributed by: (empid)

/*
-- test 2: Data Engineer won't see partition key for non-partitioned table
GIVEN I am a Data Engineer
WHEN I run \d on a non-partitioned table
THEN I should NOT see the partition key in the output
*/
CREATE TABLE T26002_T2 (empid int, departmentid int, year int, region varchar(20))
DISTRIBUTED BY (empid);
\d T26002_T2;
         Table "bfv_partition.t26002_t2"
    Column    |         Type          | Modifiers 
--------------+-----------------------+-----------
 empid        | integer               | 
 departmentid | integer               | 
 year         | integer               | 
 region       | character varying(20) | 
Distributed by: (empid)

\d+ T26002_T2;
                             Table "bfv_partition.t26002_t2"
    Column    |         Type          | Modifiers | Storage  | Stats target | Description 
--------------+-----------------------+-----------+----------+--------------+-------------
 empid        | integer               |           | plain    |              | 
 departmentid | integer               |           | plain    |              | 
 year         | integer               |           | plain    |              | 
 region       | character varying(20) |           | extended |              | 
Distributed by: (empid)

--
-- Test whether test gives wrong results with partition tables when
-- sub-partitions are distributed differently than the parent partition.
--
-- SETUP
create table pt(a int, b int, c int) distributed by (a) partition by range(b) (start(0) end(10) every (2));
NOTICE:  CREATE TABLE will create partition "pt_1_prt_1" for table "pt"
NOTICE:  CREATE TABLE will create partition "pt_1_prt_2" for table "pt"
NOTICE:  CREATE TABLE will create partition "pt_1_prt_3" for table "pt"
NOTICE:  CREATE TABLE will create partition "pt_1_prt_4" for table "pt"
NOTICE:  CREATE TABLE will create partition "pt_1_prt_5" for table "pt"
alter table pt_1_prt_1 set distributed randomly;
ERROR:  can't set the distribution policy of "pt_1_prt_1"
HINT:  Distribution policy can be set for an entire partitioned table, not for one of its leaf parts or an interior branch.
create table t(a int, b int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into pt select g%10, g%2 + 1, g*2 from generate_series(1,20) g;
insert into pt values(1,1,3);
insert into t select g%10, g%2 + 1 from generate_series(1,20) g;
create index pt_c on pt(c);
NOTICE:  building index for child partition "pt_1_prt_1"
NOTICE:  building index for child partition "pt_1_prt_2"
NOTICE:  building index for child partition "pt_1_prt_3"
NOTICE:  building index for child partition "pt_1_prt_4"
NOTICE:  building index for child partition "pt_1_prt_5"
analyze t;
analyze pt;
-- TEST
SELECT COUNT(*) FROM pt, t WHERE pt.a = t.a;
 count 
-------
    42
(1 row)

SELECT COUNT(*) FROM pt, t WHERE pt.a = t.a and pt.c=4;
 count 
-------
     2
(1 row)

select a, count(*) from pt group by a; 
 a | count 
---+-------
 9 |     2
 8 |     2
 2 |     2
 1 |     3
 0 |     2
 3 |     2
 6 |     2
 7 |     2
 5 |     2
 4 |     2
(10 rows)

select b, count(*) from pt group by b;
 b | count 
---+-------
 2 |    10
 1 |    11
(2 rows)

select a, count(*) from pt where a<2 group by a;
 a | count 
---+-------
 1 |     3
 0 |     2
(2 rows)

--
-- Partition table with appendonly leaf, full join
--
-- SETUP
CREATE TABLE foo (a int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE bar (b int, c int)
PARTITION BY RANGE (b)
  SUBPARTITION BY RANGE (c) SUBPARTITION TEMPLATE 
  (
    START (1) END (10) WITH (appendonly=true),
    START (10) END (20)
  ) 
( 
  START (1) END (10) ,
  START (10) END (20)
); 
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'b' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "bar_1_prt_1" for table "bar"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_1_2_prt_1" for table "bar_1_prt_1"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_1_2_prt_2" for table "bar_1_prt_1"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_2" for table "bar"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_2_2_prt_1" for table "bar_1_prt_2"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_2_2_prt_2" for table "bar_1_prt_2"
INSERT INTO foo VALUES (1);
INSERT INTO bar VALUES (2,3);
SELECT * FROM foo FULL JOIN bar ON foo.a = bar.b;
 a | b | c 
---+---+---
 1 |   |  
   | 2 | 3
(2 rows)

-- CLEANUP
DROP TABLE IF EXISTS foo, bar;
--
-- Partition table with appendonly set at middlevel partition, full join
--
-- SETUP
CREATE TABLE foo (a int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE bar (b int, c int)
PARTITION BY RANGE (b)
  SUBPARTITION BY RANGE (c) SUBPARTITION TEMPLATE 
  (
    START (1) END (10),
    START (10) END (20)
  ) 
( 
  START (1) END (10) WITH (appendonly=true),
  START (10) END (20)
); 
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'b' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "bar_1_prt_1" for table "bar"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_1_2_prt_1" for table "bar_1_prt_1"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_1_2_prt_2" for table "bar_1_prt_1"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_2" for table "bar"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_2_2_prt_1" for table "bar_1_prt_2"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_2_2_prt_2" for table "bar_1_prt_2"
INSERT INTO foo VALUES (1);
INSERT INTO bar VALUES (2,3);
SELECT * FROM foo FULL JOIN bar ON foo.a = bar.b;
 a | b | c 
---+---+---
 1 |   |  
   | 2 | 3
(2 rows)

-- CLEANUP
DROP TABLE IF EXISTS foo, bar;
--
-- Partition table with appendonly set at root partition, full join
--
-- SETUP
CREATE TABLE foo (a int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE bar (b int, c int) WITH (appendonly=true)
PARTITION BY RANGE (b)
  SUBPARTITION BY RANGE (c) SUBPARTITION TEMPLATE 
  (
    START (1) END (10),
    START (10) END (20)
  ) 
( 
  START (1) END (10),
  START (10) END (20)
); 
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'b' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "bar_1_prt_1" for table "bar"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_1_2_prt_1" for table "bar_1_prt_1"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_1_2_prt_2" for table "bar_1_prt_1"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_2" for table "bar"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_2_2_prt_1" for table "bar_1_prt_2"
NOTICE:  CREATE TABLE will create partition "bar_1_prt_2_2_prt_2" for table "bar_1_prt_2"
INSERT INTO foo VALUES (1);
INSERT INTO bar VALUES (2,3);
SELECT * FROM foo FULL JOIN bar ON foo.a = bar.b;
 a | b | c 
---+---+---
 1 |   |  
   | 2 | 3
(2 rows)

CREATE TABLE mpp3263 (
        unique1         int4,
        unique2         int4,
        two                     int4,
        four            int4,
        ten                     int4,
        twenty          int4,
        hundred         int4,
        thousand        int4,
        twothousand     int4,
        fivethous       int4,
        tenthous        int4,
        odd                     int4,
        even            int4,
        stringu1        name,
        stringu2        name,
        string4         name
) partition by range (unique1)
( partition aa start (0) end (1000) every (500), default partition default_part );
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'unique1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3263_1_prt_default_part" for table "mpp3263"
NOTICE:  CREATE TABLE will create partition "mpp3263_1_prt_aa_1" for table "mpp3263"
NOTICE:  CREATE TABLE will create partition "mpp3263_1_prt_aa_2" for table "mpp3263"
-- These are OK
alter table mpp3263 add column AAA int;
alter table mpp3263 add column BBB int;
alter table mpp3263 drop column BBB;
alter table mpp3263 drop partition;
NOTICE:  dropped partition "aa_1" for relation "mpp3263"
alter table mpp3263 add column CCC int;
insert into mpp3263 (unique1) values (1111);
drop table mpp3263;
CREATE TABLE mpp3541 (f1 time(2) with time zone, f2 char(4), f3 varchar(10))
partition by list (f2)
subpartition by range (f3)
subpartition template (
  subpartition male values ('Male','M'),
  subpartition female values ('Female','F')
)
( partition pst values ('PST'),
  partition est values ('EST')
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'f1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3541_1_prt_pst" for table "mpp3541"
ERROR:  invalid use of LIST boundary specification in partition "male" of type RANGE (at depth 2)
LINE 5:   subpartition male values ('Male','M'),
                            ^
CREATE TABLE mpp3541 (f1 time(2) with time zone, f2 char(4), f3 varchar(10))
partition by range (f2)
subpartition by list (f3)
subpartition template (
  subpartition male values ('Male','M'),
  subpartition female values ('Female','F')
)
( partition pst values ('PST'),
  partition est values ('EST')
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'f1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ERROR:  invalid use of LIST boundary specification in partition "pst" of type RANGE
LINE 8: ( partition pst values ('PST'),
                        ^
CREATE TABLE mpp3541 (f1 time(2) with time zone, f2 char(4), f3 varchar(10))
partition by range (f2)
subpartition by range (f3)
subpartition template (
  subpartition male values ('Male','M'),
  subpartition female values ('Female','F')
)
( partition pst values ('PST'),
  partition est values ('EST')
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'f1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ERROR:  invalid use of LIST boundary specification in partition "pst" of type RANGE
LINE 8: ( partition pst values ('PST'),
                        ^
CREATE TABLE mpp3542_000000000011111111112222222222333333333344444444445555555555556666666666777777777788888888889999999999 (f1 time(2) with time zone)
partition by range (f1)
(
  partition "Los Angeles" start (time with time zone '00:00 PST') end (time with time zone '23:00 PST') EVERY (INTERVAL '1 hour'),
  partition "New York" start (time with time zone '00:00 EST') end (time with time zone '23:00 EST') EVERY (INTERVAL '1 hour')
);
NOTICE:  identifier "mpp3542_000000000011111111112222222222333333333344444444445555555555556666666666777777777788888888889999999999" will be truncated to "mpp3542_0000000000111111111122222222223333333333444444444455555"
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'f1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ERROR:  starting value of partition "Los Angeles_1" overlaps previous range
LINE 4:   partition "Los Angeles" start (time with time zone '00:00 ...
                                  ^
-- Truncates the table name to mpp3542_0000000000111111111122222222223333333333444444444455555, but partition name is too long, so ERROR
alter table mpp3542_000000000011111111112222222222333333333344444444445555555555556666666666777777777788888888889999999999 rename partition "Los Angeles_1" to "123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890";
NOTICE:  identifier "mpp3542_000000000011111111112222222222333333333344444444445555555555556666666666777777777788888888889999999999" will be truncated to "mpp3542_0000000000111111111122222222223333333333444444444455555"
NOTICE:  identifier "123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890" will be truncated to "123456789012345678901234567890123456789012345678901234567890123"
ERROR:  relation "mpp3542_0000000000111111111122222222223333333333444444444455555" does not exist
-- Truncates the table name to mpp3542_0000000000111111111122222222223333333333444444444455555, and partition name is safe, so renamed
alter table mpp3542_000000000011111111112222222222333333333344444444445555555555556666666666777777777788888888889999999999 rename partition "Los Angeles_1" to "LA1";
NOTICE:  identifier "mpp3542_000000000011111111112222222222333333333344444444445555555555556666666666777777777788888888889999999999" will be truncated to "mpp3542_0000000000111111111122222222223333333333444444444455555"
ERROR:  relation "mpp3542_0000000000111111111122222222223333333333444444444455555" does not exist
-- Use the actual table name
alter table mpp3542_0000000000111111111122222222223333333333444444444455555 rename partition "Los Angeles_2" to "LA2";
ERROR:  relation "mpp3542_0000000000111111111122222222223333333333444444444455555" does not exist
-- MPP-3542
alter table  mpp3542_0000000000111111111122222222223333333333444444444455555 rename to m; 
ERROR:  relation "mpp3542_0000000000111111111122222222223333333333444444444455555" does not exist
create table mpp3466 (i int) partition by range(i) (start(1) end(10) every(2), default partition f);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3466_1_prt_f" for table "mpp3466"
NOTICE:  CREATE TABLE will create partition "mpp3466_1_prt_2" for table "mpp3466"
NOTICE:  CREATE TABLE will create partition "mpp3466_1_prt_3" for table "mpp3466"
NOTICE:  CREATE TABLE will create partition "mpp3466_1_prt_4" for table "mpp3466"
NOTICE:  CREATE TABLE will create partition "mpp3466_1_prt_5" for table "mpp3466"
NOTICE:  CREATE TABLE will create partition "mpp3466_1_prt_6" for table "mpp3466"
alter table mpp3466 split partition f at (3) into (partition f, partition new);
ERROR:  AT clause cannot be used when splitting a default RANGE partition
drop table mpp3466;
create table mpp3058 (a char(1), b date, d char(3))       
 distributed by (a)         
partition by range (b)                                                                                            
 (              
 partition aa start (date '2008-01-01') end (date '2009-01-01') 
 every (interval '50 days'));
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_1" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_2" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_3" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_4" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_5" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_6" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_7" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_8" for table "mpp3058"
drop table mpp3058;
create table mpp3058 (a char(1), b date, d char(3))   
distributed by (a)     
partition by range (b)    
(        
     partition aa start ('2008-01-01') end ('2010-01-01')           
  );
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa" for table "mpp3058"
drop table mpp3058;
-- Expected Error
create table mpp3058 (a char(1), b date, d char(3))   
distributed by (a)     
partition by range (b)    
(        
     partition aa start ('2008-01-01') end ('2006-01-01')           
  );
ERROR:  START greater than END for partition "aa"
LINE 5:      partition aa start ('2008-01-01') end ('2006-01-01')   ...
                          ^
drop table mpp3058;
ERROR:  table "mpp3058" does not exist
-- Expected Error
create table mpp3058 (a char(1), b date, d char(3))   
distributed by (a)     
partition by range (b)    
(        
     partition aa start ('2008-01-01') end ('-2009-01-01')           
  );
ERROR:  time zone displacement out of range: "-2009-01-01"
drop table mpp3058;
ERROR:  table "mpp3058" does not exist
-- Expected Error
create table mpp3058 (a char(1), b date, d char(3))   
distributed by (a)     
partition by range (b)    
(        
     partition aa start ('-2008-01-01') end ('2009-01-01')           
  );
ERROR:  time zone displacement out of range: "-2008-01-01"
drop table mpp3058;
ERROR:  table "mpp3058" does not exist
create table mpp3058 (a char(1), b date, d char(3))   
distributed by (a)     
partition by range (b)    
(        
     partition aa start ('2008-01-01') end ('2010-01-01')           
  );
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa" for table "mpp3058"
drop table mpp3058;
create table mpp3058 (a char(1), b date, d char(3))   
distributed by (a)        
partition by range (b)      
(
     partition aa start ('2008-01-01') end ('2008-02-01') every(interval '1 day')
  );
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_1" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_2" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_3" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_4" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_5" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_6" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_7" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_8" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_9" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_10" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_11" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_12" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_13" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_14" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_15" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_16" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_17" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_18" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_19" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_20" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_21" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_22" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_23" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_24" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_25" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_26" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_27" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_28" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_29" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_30" for table "mpp3058"
NOTICE:  CREATE TABLE will create partition "mpp3058_1_prt_aa_31" for table "mpp3058"
drop table mpp3058;
-- Expected Error
create table mpp3058 (a char(1), b date, d char(3))  
  distributed by (a)    
   partition by range (b)             
  (           
    partition aa start ('2008-01-01') end ('2009-01-01') every( '1 day')  
     );
ERROR:  invalid input syntax for integer: "1 day"
LINE 5: ...aa start ('2008-01-01') end ('2009-01-01') every( '1 day')  
                                                             ^
drop table mpp3058;
ERROR:  table "mpp3058" does not exist
-- Expected Error
create table mpp3058 (a char(1), b date, d char(3))  
  distributed by (a)    
   partition by range (b)             
  (           
    partition aa end ('2009-01-01') every( interval '1 day')  
     );
ERROR:  EVERY clause in partition "aa" requires START and END
LINE 5:     partition aa end ('2009-01-01') every( interval '1 day')...
                         ^
drop table mpp3058;
ERROR:  table "mpp3058" does not exist
-- Expected Error
create table mpp3058 (a char(1), b date, d char(3))  
  distributed by (a)    
   partition by range (b)             
  (           
    partition aa start ('2006-01-01') every( interval '1 day')  
     );
ERROR:  EVERY clause in partition "aa" requires START and END
LINE 5:     partition aa start ('2006-01-01') every( interval '1 day...
                         ^
drop table mpp3058;
ERROR:  table "mpp3058" does not exist
create table mpp3607 (aa int, bb int) partition by range (bb)
(partition foo start(2));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'aa' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3607_1_prt_foo" for table "mpp3607"
alter table mpp3607 add partition baz end (3); -- Expected Overlaps
ERROR:  new partition overlaps existing partition
alter table mpp3607 add partition baz end (4); -- Expected Overlaps
ERROR:  new partition overlaps existing partition
alter table mpp3607 add partition aa end (2); -- OK as of 4.2.0.0 (RIO)
NOTICE:  CREATE TABLE will create partition "mpp3607_1_prt_aa" for table "mpp3607"
alter table mpp3607 add partition bb end (1); -- Expected Overlaps
ERROR:  new partition overlaps existing partition
alter table mpp3607 add partition baz end (3); -- Expected Overlaps
ERROR:  new partition overlaps existing partition
alter table mpp3607 add partition baz end (4); -- Expected Overlaps
ERROR:  new partition overlaps existing partition
alter table mpp3607 add partition baz end (2); -- Expected Overlaps
ERROR:  new partition overlaps existing partition
alter table mpp3607 add partition bb end (0); -- Expected Overlaps
ERROR:  new partition overlaps existing partition
alter table mpp3607 drop partition aa;
alter table mpp3607 add partition aa end (-4); -- partition rule aa < -4, foo >=2
NOTICE:  CREATE TABLE will create partition "mpp3607_1_prt_aa" for table "mpp3607"
alter table mpp3607 add partition bb end (-3); -- Overlaps
ERROR:  new partition overlaps existing partition
alter table mpp3607 drop partition aa;
alter table mpp3607 add partition aa end (0); -- partition rule aa < 0, foo >=2
NOTICE:  CREATE TABLE will create partition "mpp3607_1_prt_aa" for table "mpp3607"
alter table mpp3607 drop partition aa;
alter table mpp3607 add partition aa start (4); -- Overlaps
ERROR:  new partition overlaps existing partition
alter table mpp3607 add partition aa start (3) end (4); -- Overlaps
ERROR:  new partition overlaps existing partition "foo"
alter table mpp3607 add partition aa start (0) end (1); -- partition rule aa bb>=0 and bb<1, foo bb>=2
NOTICE:  CREATE TABLE will create partition "mpp3607_1_prt_aa" for table "mpp3607"
alter table mpp3607 add partition bb start (-1) end (0); -- partition rule bb bb>=-1 and bb<0
NOTICE:  CREATE TABLE will create partition "mpp3607_1_prt_bb" for table "mpp3607"
alter table mpp3607 add partition cc start (-4); -- partition rule cc bb>=-4 and bb <-1
NOTICE:  CREATE TABLE will create partition "mpp3607_1_prt_cc" for table "mpp3607"
alter table mpp3607 add partition dd start (-5) end (-4);
NOTICE:  CREATE TABLE will create partition "mpp3607_1_prt_dd" for table "mpp3607"
alter table mpp3607 add partition ee start (-10);
NOTICE:  CREATE TABLE will create partition "mpp3607_1_prt_ee" for table "mpp3607"
alter table mpp3607 add partition ff start (-9) end (-8); -- Overlaps
ERROR:  new partition overlaps existing partition "ee"
drop table mpp3607;
CREATE TABLE mpp3632(a int, b int, c int, d int, e int, f int, g int, h int, i int, j int, k int, l int, m int, n int, o int, p int, q int, r int, s int, t int, u int, v int, w int, x int, y int, z int)
partition by range (a)
( partition aa start (1) end (10) every (1) );
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_aa_1" for table "mpp3632"
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_aa_2" for table "mpp3632"
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_aa_3" for table "mpp3632"
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_aa_4" for table "mpp3632"
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_aa_5" for table "mpp3632"
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_aa_6" for table "mpp3632"
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_aa_7" for table "mpp3632"
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_aa_8" for table "mpp3632"
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_aa_9" for table "mpp3632"
alter table mpp3632 add partition a1 start (30);
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_a1" for table "mpp3632"
alter table mpp3632 add partition a2 start (25) end (30);
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_a2" for table "mpp3632"
alter table mpp3632 add partition a3 start (10) end (20);
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_a3" for table "mpp3632"
alter table mpp3632 add partition a4 start (20) end (21);
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_a4" for table "mpp3632"
alter table mpp3632 add partition a5 start (22) end (24);
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_a5" for table "mpp3632"
alter table mpp3632 add partition a6 start (21) end (22);
NOTICE:  CREATE TABLE will create partition "mpp3632_1_prt_a6" for table "mpp3632"
-- alter table mpp3632 add partition a7 start (23) end (24); -- MPP-3667
drop table mpp3632;
create table mpp3671 (i int) partition by list(i) (partition a values(1, 2, 3, 4),
partition b values(5, 6, 7, 8), default partition default_part);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3671_1_prt_a" for table "mpp3671"
NOTICE:  CREATE TABLE will create partition "mpp3671_1_prt_b" for table "mpp3671"
NOTICE:  CREATE TABLE will create partition "mpp3671_1_prt_default_part" for table "mpp3671"
insert into mpp3671 select i from generate_series(1, 10) i;
alter table mpp3671 split partition for(1) at (1,2) into (partition f1a, partition f1b);
NOTICE:  exchanged partition "a" of relation "mpp3671" with relation "pg_temp_1284964"
NOTICE:  dropped partition "a" for relation "mpp3671"
NOTICE:  CREATE TABLE will create partition "mpp3671_1_prt_f1a" for table "mpp3671"
NOTICE:  CREATE TABLE will create partition "mpp3671_1_prt_f1b" for table "mpp3671"
drop table mpp3671;
create table mpp3639 (i int) partition by range(i) (start(0) exclusive end(100) inclusive every(10));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_1" for table "mpp3639"
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_2" for table "mpp3639"
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_3" for table "mpp3639"
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_4" for table "mpp3639"
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_5" for table "mpp3639"
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_6" for table "mpp3639"
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_7" for table "mpp3639"
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_8" for table "mpp3639"
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_9" for table "mpp3639"
NOTICE:  CREATE TABLE will create partition "mpp3639_1_prt_10" for table "mpp3639"
insert into mpp3639 select i from generate_series(1, 100) i;
insert into mpp3639 select i from generate_series(1, 100) i;
insert into mpp3639 select i from generate_series(1, 100) i;
select * from mpp3639 order by i;
  i  
-----
   1
   1
   1
   2
   2
   2
   3
   3
   3
   4
   4
   4
   5
   5
   5
   6
   6
   6
   7
   7
   7
   8
   8
   8
   9
   9
   9
  10
  10
  10
  11
  11
  11
  12
  12
  12
  13
  13
  13
  14
  14
  14
  15
  15
  15
  16
  16
  16
  17
  17
  17
  18
  18
  18
  19
  19
  19
  20
  20
  20
  21
  21
  21
  22
  22
  22
  23
  23
  23
  24
  24
  24
  25
  25
  25
  26
  26
  26
  27
  27
  27
  28
  28
  28
  29
  29
  29
  30
  30
  30
  31
  31
  31
  32
  32
  32
  33
  33
  33
  34
  34
  34
  35
  35
  35
  36
  36
  36
  37
  37
  37
  38
  38
  38
  39
  39
  39
  40
  40
  40
  41
  41
  41
  42
  42
  42
  43
  43
  43
  44
  44
  44
  45
  45
  45
  46
  46
  46
  47
  47
  47
  48
  48
  48
  49
  49
  49
  50
  50
  50
  51
  51
  51
  52
  52
  52
  53
  53
  53
  54
  54
  54
  55
  55
  55
  56
  56
  56
  57
  57
  57
  58
  58
  58
  59
  59
  59
  60
  60
  60
  61
  61
  61
  62
  62
  62
  63
  63
  63
  64
  64
  64
  65
  65
  65
  66
  66
  66
  67
  67
  67
  68
  68
  68
  69
  69
  69
  70
  70
  70
  71
  71
  71
  72
  72
  72
  73
  73
  73
  74
  74
  74
  75
  75
  75
  76
  76
  76
  77
  77
  77
  78
  78
  78
  79
  79
  79
  80
  80
  80
  81
  81
  81
  82
  82
  82
  83
  83
  83
  84
  84
  84
  85
  85
  85
  86
  86
  86
  87
  87
  87
  88
  88
  88
  89
  89
  89
  90
  90
  90
  91
  91
  91
  92
  92
  92
  93
  93
  93
  94
  94
  94
  95
  95
  95
  96
  96
  96
  97
  97
  97
  98
  98
  98
  99
  99
  99
 100
 100
 100
(300 rows)

drop table mpp3639;
create table mpp3588 (i int) partition by list(i) (partition a values(1, 2, 3, 4),
partition b values(5, 6, 7, 8));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3588_1_prt_a" for table "mpp3588"
NOTICE:  CREATE TABLE will create partition "mpp3588_1_prt_b" for table "mpp3588"
insert into mpp3588 select i from generate_series(1, 8) i;
alter table mpp3588 split partition for(1) at (1,2) into (partition fa, partition fb);
NOTICE:  exchanged partition "a" of relation "mpp3588" with relation "pg_temp_1285270"
NOTICE:  dropped partition "a" for relation "mpp3588"
NOTICE:  CREATE TABLE will create partition "mpp3588_1_prt_fa" for table "mpp3588"
NOTICE:  CREATE TABLE will create partition "mpp3588_1_prt_fb" for table "mpp3588"
alter table mpp3588 split partition for(1) at (1,2) into (partition f1a, partition f1b); -- This has partition rules that overlaps
ERROR:  AT clause cannot contain all values in partition "fb"
alter table mpp3588 split partition for(1) at (1,2) into (partition f2a, partition f2b); -- 5,6 are not within the boundary of first partition
ERROR:  AT clause cannot contain all values in partition "fb"
alter table mpp3588 split partition for(1) at (1,2) into (partition f3a, partition f3b); 
ERROR:  AT clause cannot contain all values in partition "fb"
alter table mpp3588 split partition for(1) at (1,2) into (partition f4a, partition f4b);
ERROR:  AT clause cannot contain all values in partition "fb"
alter table mpp3588 split partition for(1) at (1,2) into (partition f5a, partition f5b); -- Out of the original boundary specification
ERROR:  AT clause cannot contain all values in partition "fb"
alter table mpp3588 split partition for(1) at (1,2) into (partition f6a, partition f6b); -- I can keep going and going and going....
ERROR:  AT clause cannot contain all values in partition "fb"
alter table mpp3588 split partition for(1) at (1,2) into (partition f7a, partition f7b);
ERROR:  AT clause cannot contain all values in partition "fb"
drop table mpp3588;
-- MPP-3691, MPP-3681
create table mpp3681 (id int, date date, amt decimal(10,2)) distributed by (id) partition by range(date) (start (date '2008-01-01') inclusive end ('2008-04-01') exclusive every (interval '1 month')); 
NOTICE:  CREATE TABLE will create partition "mpp3681_1_prt_1" for table "mpp3681"
NOTICE:  CREATE TABLE will create partition "mpp3681_1_prt_2" for table "mpp3681"
NOTICE:  CREATE TABLE will create partition "mpp3681_1_prt_3" for table "mpp3681"
alter table mpp3681 add default partition def;
NOTICE:  CREATE TABLE will create partition "mpp3681_1_prt_def" for table "mpp3681"
alter table mpp3681 split default partition start('2008-04-01') inclusive end('2008-05-01') exclusive into (partition apr08, default partition);
NOTICE:  exchanged partition "def" of relation "mpp3681" with relation "pg_temp_1285647"
NOTICE:  dropped partition "def" for relation "mpp3681"
NOTICE:  CREATE TABLE will create partition "mpp3681_1_prt_apr08" for table "mpp3681"
NOTICE:  CREATE TABLE will create partition "mpp3681_1_prt_def" for table "mpp3681"
drop table mpp3681;
-- MPP-3593
create table mpp3593 (i int) partition by range(i) (start(1) end(100) every(10));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_1" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_2" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_3" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_4" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_5" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_6" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_7" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_8" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_9" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_10" for table "mpp3593"
insert into mpp3593 select i from generate_series(1, 99) i;
alter table mpp3593 split partition for(1) at (5) into (partition aa, partition bb);
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_aa" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_bb" for table "mpp3593"
alter table mpp3593 split partition for(15) at (20) into (partition a1, partition b1);
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_a1" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_b1" for table "mpp3593"
alter table mpp3593 split partition for(25) at (30) into (partition a2, partition b2);
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_a2" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_b2" for table "mpp3593"
alter table mpp3593 split partition for(35) at (40) into (partition a3, partition b3);
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_a3" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_b3" for table "mpp3593"
alter table mpp3593 split partition for(55) at (60) into (partition a4, partition b4);
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_a4" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_b4" for table "mpp3593"
alter table mpp3593 split partition for(45) at (50) into (partition a5, partition b5);
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_a5" for table "mpp3593"
NOTICE:  CREATE TABLE will create partition "mpp3593_1_prt_b5" for table "mpp3593"
drop table mpp3593;
CREATE TABLE mpp3742 (
c_id varchar(36),
ss_id varchar(36),
c_ts timestamp,
name varchar(36),
PRIMARY KEY (c_id,ss_id,c_ts)) partition by range (c_ts)
(
  start (date '2007-07-01')
  end (date '2008-01-01') every (interval '1 month'),
  default partition default_part
);
NOTICE:  CREATE TABLE will create partition "mpp3742_1_prt_default_part" for table "mpp3742"
NOTICE:  CREATE TABLE will create partition "mpp3742_1_prt_2" for table "mpp3742"
NOTICE:  CREATE TABLE will create partition "mpp3742_1_prt_3" for table "mpp3742"
NOTICE:  CREATE TABLE will create partition "mpp3742_1_prt_4" for table "mpp3742"
NOTICE:  CREATE TABLE will create partition "mpp3742_1_prt_5" for table "mpp3742"
NOTICE:  CREATE TABLE will create partition "mpp3742_1_prt_6" for table "mpp3742"
NOTICE:  CREATE TABLE will create partition "mpp3742_1_prt_7" for table "mpp3742"
alter table mpp3742 split default partition start ('2009-01-01') end ('2009-02-01') into (partition a3, default partition);
NOTICE:  exchanged partition "default_part" of relation "mpp3742" with relation "pg_temp_1286524"
NOTICE:  dropped partition "default_part" for relation "mpp3742"
NOTICE:  CREATE TABLE will create partition "mpp3742_1_prt_a3" for table "mpp3742"
NOTICE:  CREATE TABLE will create partition "mpp3742_1_prt_default_part" for table "mpp3742"
drop table mpp3742;
create table mpp3597 (i int) partition by list(i) (partition a values(1, 2, 3, 4),
partition b values(5, 6, 7, 8), default partition default_part);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3597_1_prt_a" for table "mpp3597"
NOTICE:  CREATE TABLE will create partition "mpp3597_1_prt_b" for table "mpp3597"
NOTICE:  CREATE TABLE will create partition "mpp3597_1_prt_default_part" for table "mpp3597"
insert into mpp3597 select i from generate_series(1, 100) i;
insert into mpp3597 values (NULL);
alter table mpp3597 split default partition at (NULL);
NOTICE:  exchanged partition "default_part" of relation "mpp3597" with relation "pg_temp_1287048"
NOTICE:  dropped partition "default_part" for relation "mpp3597"
NOTICE:  CREATE TABLE will create partition "mpp3597_1_prt_r477125784" for table "mpp3597"
NOTICE:  CREATE TABLE will create partition "mpp3597_1_prt_default_part" for table "mpp3597"
insert into mpp3597 values (NULL);
select * from mpp3597_1_prt_default_part where i=NULL; -- No NULL values
 i 
---
(0 rows)

drop table mpp3597;
create table mpp3594 (i date) partition by range(i) (start('2008-07-01') end('2009-01-01') every(interval '1 month'), default partition default_part);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3594_1_prt_default_part" for table "mpp3594"
NOTICE:  CREATE TABLE will create partition "mpp3594_1_prt_2" for table "mpp3594"
NOTICE:  CREATE TABLE will create partition "mpp3594_1_prt_3" for table "mpp3594"
NOTICE:  CREATE TABLE will create partition "mpp3594_1_prt_4" for table "mpp3594"
NOTICE:  CREATE TABLE will create partition "mpp3594_1_prt_5" for table "mpp3594"
NOTICE:  CREATE TABLE will create partition "mpp3594_1_prt_6" for table "mpp3594"
NOTICE:  CREATE TABLE will create partition "mpp3594_1_prt_7" for table "mpp3594"
alter table mpp3594 split default partition start ('2009-01-01') end ('2009-02-01') into (partition aa, partition nodate);
ERROR:  default partition name missing from INTO clause
drop table mpp3594;
CREATE TABLE mpp3512 (id int, rank int, year int, gender char(1), count int)
DISTRIBUTED BY (id);
create table mpp3512_part (like mpp3512) partition by range (year) ( start (2001) end (2006) every ('1'));
NOTICE:  table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
NOTICE:  CREATE TABLE will create partition "mpp3512_part_1_prt_1" for table "mpp3512_part"
NOTICE:  CREATE TABLE will create partition "mpp3512_part_1_prt_2" for table "mpp3512_part"
NOTICE:  CREATE TABLE will create partition "mpp3512_part_1_prt_3" for table "mpp3512_part"
NOTICE:  CREATE TABLE will create partition "mpp3512_part_1_prt_4" for table "mpp3512_part"
NOTICE:  CREATE TABLE will create partition "mpp3512_part_1_prt_5" for table "mpp3512_part"
create table mpp3512a (like mpp3512_part);
NOTICE:  table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
\d mpp3512
   Table "bfv_partition.mpp3512"
 Column |     Type     | Modifiers 
--------+--------------+-----------
 id     | integer      | 
 rank   | integer      | 
 year   | integer      | 
 gender | character(1) | 
 count  | integer      | 
Distributed by: (id)

\d mpp3512a
  Table "bfv_partition.mpp3512a"
 Column |     Type     | Modifiers 
--------+--------------+-----------
 id     | integer      | 
 rank   | integer      | 
 year   | integer      | 
 gender | character(1) | 
 count  | integer      | 
Distributed by: (id)

select * from pg_partitions where tablename='mpp3512_part';
  schemaname   |  tablename   | partitionschemaname |  partitiontablename  | partitionname | parentpartitiontablename | parentpartitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |         partitionboundary         | parenttablespace | partitiontablespace 
---------------+--------------+---------------------+----------------------+---------------+--------------------------+---------------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+-----------------------------------+------------------+---------------------
 bfv_partition | mpp3512_part | bfv_partition       | mpp3512_part_1_prt_1 |               |                          |                     | range         |              0 |             1 |                 1 |                     | 2001                | t                       | 2002              | f                     | 1                    | f                  | START (2001) END (2002) EVERY (1) | pg_default       | pg_default
 bfv_partition | mpp3512_part | bfv_partition       | mpp3512_part_1_prt_2 |               |                          |                     | range         |              0 |             2 |                 2 |                     | 2002                | t                       | 2003              | f                     | 1                    | f                  | START (2002) END (2003) EVERY (1) | pg_default       | pg_default
 bfv_partition | mpp3512_part | bfv_partition       | mpp3512_part_1_prt_3 |               |                          |                     | range         |              0 |             3 |                 3 |                     | 2003                | t                       | 2004              | f                     | 1                    | f                  | START (2003) END (2004) EVERY (1) | pg_default       | pg_default
 bfv_partition | mpp3512_part | bfv_partition       | mpp3512_part_1_prt_4 |               |                          |                     | range         |              0 |             4 |                 4 |                     | 2004                | t                       | 2005              | f                     | 1                    | f                  | START (2004) END (2005) EVERY (1) | pg_default       | pg_default
 bfv_partition | mpp3512_part | bfv_partition       | mpp3512_part_1_prt_5 |               |                          |                     | range         |              0 |             5 |                 5 |                     | 2005                | t                       | 2006              | f                     | 1                    | f                  | START (2005) END (2006) EVERY (1) | pg_default       | pg_default
(5 rows)

drop table mpp3512;
drop table mpp3512_part;
drop table mpp3512a;
CREATE TABLE mpp3988 ( ps_partkey integer,
ps_suppkey integer, ps_availqty integer,
ps_supplycost numeric, ps_comment character varying(199) )
PARTITION BY RANGE(ps_supplycost)
subpartition by range (ps_supplycost)
(default partition foo (default subpartition bar));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'ps_partkey' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3988_1_prt_foo" for table "mpp3988"
NOTICE:  CREATE TABLE will create partition "mpp3988_1_prt_foo_2_prt_bar" for table "mpp3988_1_prt_foo"
drop table mpp3988;
CREATE TABLE mpp3816 (
        unique1         int4,
        unique2         int4,
        two                     int4,
        four            int4,
        ten                     int4,
        twenty          int4,
        hundred         int4,
        thousand        int4,
        twothousand     int4,
        fivethous       int4,
        tenthous        int4,
        odd                     int4,
        even            int4,
        stringu1        name,
        stringu2        name,
        string4         name,
	startDate       date		
) partition by range (startDate)
( start ('2007-06-01') end ('2008-01-01') every (interval '1 month'), default partition default_part );
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'unique1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3816_1_prt_default_part" for table "mpp3816"
NOTICE:  CREATE TABLE will create partition "mpp3816_1_prt_2" for table "mpp3816"
NOTICE:  CREATE TABLE will create partition "mpp3816_1_prt_3" for table "mpp3816"
NOTICE:  CREATE TABLE will create partition "mpp3816_1_prt_4" for table "mpp3816"
NOTICE:  CREATE TABLE will create partition "mpp3816_1_prt_5" for table "mpp3816"
NOTICE:  CREATE TABLE will create partition "mpp3816_1_prt_6" for table "mpp3816"
NOTICE:  CREATE TABLE will create partition "mpp3816_1_prt_7" for table "mpp3816"
NOTICE:  CREATE TABLE will create partition "mpp3816_1_prt_8" for table "mpp3816"
alter table mpp3816 add column AAA int;
alter table mpp3816 add column BBB int;
alter table mpp3816 drop column BBB;
alter table mpp3816 drop column startDate;
ERROR:  cannot drop partitioning column "startdate"
drop table mpp3816;
CREATE TABLE mpp3762_cities (
        city     varchar(80) primary key,
        location point
);
CREATE TABLE mpp3762_weather (
        city      varchar(80) references mpp3762_cities(city),
        temp_lo   int,
        temp_hi   int,
        prcp      real,
        date      date
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'city' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
WARNING:  referential integrity (FOREIGN KEY) constraints are not supported in Greenplum Database, will not be enforced
CREATE TABLE mpp3762_cities_partition (
        city     varchar(80) primary key,
        location point
)  partition by list (city) ( partition a values ('Los Angeles'), partition b values ('San Mateo') );
NOTICE:  CREATE TABLE will create partition "mpp3762_cities_partition_1_prt_a" for table "mpp3762_cities_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_cities_partition_1_prt_b" for table "mpp3762_cities_partition"
CREATE TABLE mpp3762_weather_partition (
        city      varchar(80) references mpp3762_cities_partition(city),
        temp_lo   int,
        temp_hi   int,
        prcp      real,
        date      date
) partition by range(date) ( start('2008-01-01') end ('2009-01-01') every (interval '1 month'));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'city' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_1" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_2" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_3" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_4" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_5" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_6" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_7" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_8" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_9" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_10" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_11" for table "mpp3762_weather_partition"
NOTICE:  CREATE TABLE will create partition "mpp3762_weather_partition_1_prt_12" for table "mpp3762_weather_partition"
WARNING:  referential integrity (FOREIGN KEY) constraints are not supported in Greenplum Database, will not be enforced
drop table mpp3762_cities, mpp3762_weather cascade;
drop table mpp3762_cities_partition, mpp3762_weather_partition cascade;
create table mpp3754a ( i int, d date, primary key (d)) partition by range(d) ( start ('2008-01-01')  inclusive end ('2008-12-01')  exclusive every (interval '1 month'));
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_1" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_2" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_3" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_4" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_5" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_6" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_7" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_8" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_9" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_10" for table "mpp3754a"
NOTICE:  CREATE TABLE will create partition "mpp3754a_1_prt_11" for table "mpp3754a"
create table mpp3754b ( i int, d date, constraint prim_tr primary key (d)) partition by range(d) ( start ('2008-01-01')  inclusive end ('2008-12-01')  exclusive every (interval '1 month'));
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_1" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_2" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_3" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_4" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_5" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_6" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_7" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_8" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_9" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_10" for table "mpp3754b"
NOTICE:  CREATE TABLE will create partition "mpp3754b_1_prt_11" for table "mpp3754b"
drop table mpp3754a;
drop table mpp3754b;
create table mpp4172 (a char(1), b int)
distributed by (b)
partition by range(a)
(
partition aa start ('2006') end ('2009'), partition bb start ('2007') end ('2008')
);
ERROR:  value too long for type character(1)
CREATE TABLE mpp4582 (id int,
mpp4582 int, year date, gender char(1))
DISTRIBUTED BY (id, gender, year)
partition by list (gender)
subpartition by range (year)
subpartition template (
start (date '2001-01-01')
end (date '2006-01-01') every (interval '1 year')) (
partition boys values ('M'),
partition girls values ('F'),
default partition neuter
);
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_boys" for table "mpp4582"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_boys_2_prt_1" for table "mpp4582_1_prt_boys"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_boys_2_prt_2" for table "mpp4582_1_prt_boys"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_boys_2_prt_3" for table "mpp4582_1_prt_boys"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_boys_2_prt_4" for table "mpp4582_1_prt_boys"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_boys_2_prt_5" for table "mpp4582_1_prt_boys"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_girls" for table "mpp4582"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_girls_2_prt_1" for table "mpp4582_1_prt_girls"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_girls_2_prt_2" for table "mpp4582_1_prt_girls"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_girls_2_prt_3" for table "mpp4582_1_prt_girls"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_girls_2_prt_4" for table "mpp4582_1_prt_girls"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_girls_2_prt_5" for table "mpp4582_1_prt_girls"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_neuter" for table "mpp4582"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_neuter_2_prt_1" for table "mpp4582_1_prt_neuter"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_neuter_2_prt_2" for table "mpp4582_1_prt_neuter"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_neuter_2_prt_3" for table "mpp4582_1_prt_neuter"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_neuter_2_prt_4" for table "mpp4582_1_prt_neuter"
NOTICE:  CREATE TABLE will create partition "mpp4582_1_prt_neuter_2_prt_5" for table "mpp4582_1_prt_neuter"
ALTER table mpp4582 drop partition for ('-1');
ERROR:  value too long for type character(1)
ALTER table mpp4582 drop partition for ('--');
ERROR:  value too long for type character(1)
alter table mpp4582 drop partition for (';');
ERROR:  FOR expression matches DEFAULT partition "neuter" of relation "mpp4582"
HINT:  FOR expression may only specify a non-default partition in this context.
alter table mpp4582 drop partition for ();
ERROR:  syntax error at or near ")"
LINE 1: alter table mpp4582 drop partition for ();
                                                ^
alter table mpp4582 drop partition for (NULL);
ERROR:  FOR expression matches DEFAULT partition "neuter" of relation "mpp4582"
HINT:  FOR expression may only specify a non-default partition in this context.
alter table mpp4582 drop partition for ('NULL');
ERROR:  value too long for type character(1)
drop table mpp4582;
-- Use a particular username in the tests below, so that the output of \di
-- commands don't vary depending on current user.
DROP USER IF EXISTS mpp3641_user;
CREATE USER mpp3641_user;
NOTICE:  resource queue required -- using default resource queue "pg_default"
GRANT ALL ON SCHEMA bfv_partition TO mpp3641_user;
SET ROLE mpp3641_user;
CREATE TABLE mpp3641a (
        unique1         int4,
        unique2         int4,
        two                     int4,
        four            int4,
        ten                     int4,
        twenty          int4,
        hundred         int4,
        thousand        int4,
        twothousand     int4,
        fivethous       int4,
        tenthous        int4,
        odd                     int4,
        even            int4,
        stringu1        name,
        stringu2        name,
        string4         name
) partition by range (unique1)
( partition aa start (0) end (500) every (100), default partition default_part );
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'unique1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3641a_1_prt_default_part" for table "mpp3641a"
NOTICE:  CREATE TABLE will create partition "mpp3641a_1_prt_aa_1" for table "mpp3641a"
NOTICE:  CREATE TABLE will create partition "mpp3641a_1_prt_aa_2" for table "mpp3641a"
NOTICE:  CREATE TABLE will create partition "mpp3641a_1_prt_aa_3" for table "mpp3641a"
NOTICE:  CREATE TABLE will create partition "mpp3641a_1_prt_aa_4" for table "mpp3641a"
NOTICE:  CREATE TABLE will create partition "mpp3641a_1_prt_aa_5" for table "mpp3641a"
CREATE TABLE mpp3641b (
        unique1         int4,
        unique2         int4,
        two                     int4,
        four            int4,
        ten                     int4,
        twenty          int4,
        hundred         int4,
        thousand        int4,
        twothousand     int4,
        fivethous       int4,
        tenthous        int4,
        odd                     int4,
        even            int4,
        stringu1        name,
        stringu2        name,
        string4         name
) partition by range (unique1)
subpartition by range (unique2) subpartition template ( start (0) end (500) every (100) )
( start (0) end (500) every (100));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'unique1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_1" for table "mpp3641b"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_1_2_prt_1" for table "mpp3641b_1_prt_1"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_1_2_prt_2" for table "mpp3641b_1_prt_1"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_1_2_prt_3" for table "mpp3641b_1_prt_1"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_1_2_prt_4" for table "mpp3641b_1_prt_1"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_1_2_prt_5" for table "mpp3641b_1_prt_1"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_2" for table "mpp3641b"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_2_2_prt_1" for table "mpp3641b_1_prt_2"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_2_2_prt_2" for table "mpp3641b_1_prt_2"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_2_2_prt_3" for table "mpp3641b_1_prt_2"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_2_2_prt_4" for table "mpp3641b_1_prt_2"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_2_2_prt_5" for table "mpp3641b_1_prt_2"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_3" for table "mpp3641b"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_3_2_prt_1" for table "mpp3641b_1_prt_3"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_3_2_prt_2" for table "mpp3641b_1_prt_3"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_3_2_prt_3" for table "mpp3641b_1_prt_3"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_3_2_prt_4" for table "mpp3641b_1_prt_3"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_3_2_prt_5" for table "mpp3641b_1_prt_3"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_4" for table "mpp3641b"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_4_2_prt_1" for table "mpp3641b_1_prt_4"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_4_2_prt_2" for table "mpp3641b_1_prt_4"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_4_2_prt_3" for table "mpp3641b_1_prt_4"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_4_2_prt_4" for table "mpp3641b_1_prt_4"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_4_2_prt_5" for table "mpp3641b_1_prt_4"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_5" for table "mpp3641b"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_5_2_prt_1" for table "mpp3641b_1_prt_5"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_5_2_prt_2" for table "mpp3641b_1_prt_5"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_5_2_prt_3" for table "mpp3641b_1_prt_5"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_5_2_prt_4" for table "mpp3641b_1_prt_5"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_5_2_prt_5" for table "mpp3641b_1_prt_5"
alter table mpp3641b add default partition default_part;
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_default_part" for table "mpp3641b"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_default_part_2_prt_1" for table "mpp3641b_1_prt_default_part"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_default_part_2_prt_2" for table "mpp3641b_1_prt_default_part"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_default_part_2_prt_3" for table "mpp3641b_1_prt_default_part"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_default_part_2_prt_4" for table "mpp3641b_1_prt_default_part"
NOTICE:  CREATE TABLE will create partition "mpp3641b_1_prt_default_part_2_prt_5" for table "mpp3641b_1_prt_default_part"
CREATE INDEX mpp3641a_unique1 ON mpp3641a USING btree(unique1 int4_ops);
NOTICE:  building index for child partition "mpp3641a_1_prt_default_part"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_1"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_2"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_3"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_4"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_5"
CREATE INDEX mpp3641a_unique2 ON mpp3641a USING btree(unique2 int4_ops);
NOTICE:  building index for child partition "mpp3641a_1_prt_default_part"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_1"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_2"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_3"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_4"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_5"
CREATE INDEX mpp3641a_hundred ON mpp3641a USING btree(hundred int4_ops);
NOTICE:  building index for child partition "mpp3641a_1_prt_default_part"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_1"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_2"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_3"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_4"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_5"
CREATE INDEX mpp3641a_stringu1 ON mpp3641a USING btree(stringu1 name_ops);
NOTICE:  building index for child partition "mpp3641a_1_prt_default_part"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_1"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_2"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_3"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_4"
NOTICE:  building index for child partition "mpp3641a_1_prt_aa_5"
CREATE INDEX mpp3641b_unique1 ON mpp3641b USING btree(unique1 int4_ops);
NOTICE:  building index for child partition "mpp3641b_1_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_5"
CREATE INDEX mpp3641b_unique2 ON mpp3641b USING btree(unique2 int4_ops);
NOTICE:  building index for child partition "mpp3641b_1_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_5"
CREATE INDEX mpp3641b_hundred ON mpp3641b USING btree(hundred int4_ops);
NOTICE:  building index for child partition "mpp3641b_1_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_5"
CREATE INDEX mpp3641b_stringu1 ON mpp3641b USING btree(stringu1 name_ops);
NOTICE:  building index for child partition "mpp3641b_1_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_1_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_2_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_3_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_4_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_5_2_prt_5"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_1"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_2"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_3"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_4"
NOTICE:  building index for child partition "mpp3641b_1_prt_default_part_2_prt_5"
\t
\di mpp3641*
 bfv_partition | mpp3641a_1_prt_aa_1_hundred_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_1
 bfv_partition | mpp3641a_1_prt_aa_1_stringu1_idx                 | index | mpp3641_user | mpp3641a_1_prt_aa_1
 bfv_partition | mpp3641a_1_prt_aa_1_unique1_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_1
 bfv_partition | mpp3641a_1_prt_aa_1_unique2_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_1
 bfv_partition | mpp3641a_1_prt_aa_2_hundred_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_2
 bfv_partition | mpp3641a_1_prt_aa_2_stringu1_idx                 | index | mpp3641_user | mpp3641a_1_prt_aa_2
 bfv_partition | mpp3641a_1_prt_aa_2_unique1_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_2
 bfv_partition | mpp3641a_1_prt_aa_2_unique2_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_2
 bfv_partition | mpp3641a_1_prt_aa_3_hundred_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_3
 bfv_partition | mpp3641a_1_prt_aa_3_stringu1_idx                 | index | mpp3641_user | mpp3641a_1_prt_aa_3
 bfv_partition | mpp3641a_1_prt_aa_3_unique1_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_3
 bfv_partition | mpp3641a_1_prt_aa_3_unique2_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_3
 bfv_partition | mpp3641a_1_prt_aa_4_hundred_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_4
 bfv_partition | mpp3641a_1_prt_aa_4_stringu1_idx                 | index | mpp3641_user | mpp3641a_1_prt_aa_4
 bfv_partition | mpp3641a_1_prt_aa_4_unique1_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_4
 bfv_partition | mpp3641a_1_prt_aa_4_unique2_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_4
 bfv_partition | mpp3641a_1_prt_aa_5_hundred_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_5
 bfv_partition | mpp3641a_1_prt_aa_5_stringu1_idx                 | index | mpp3641_user | mpp3641a_1_prt_aa_5
 bfv_partition | mpp3641a_1_prt_aa_5_unique1_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_5
 bfv_partition | mpp3641a_1_prt_aa_5_unique2_idx                  | index | mpp3641_user | mpp3641a_1_prt_aa_5
 bfv_partition | mpp3641a_1_prt_default_part_hundred_idx          | index | mpp3641_user | mpp3641a_1_prt_default_part
 bfv_partition | mpp3641a_1_prt_default_part_stringu1_idx         | index | mpp3641_user | mpp3641a_1_prt_default_part
 bfv_partition | mpp3641a_1_prt_default_part_unique1_idx          | index | mpp3641_user | mpp3641a_1_prt_default_part
 bfv_partition | mpp3641a_1_prt_default_part_unique2_idx          | index | mpp3641_user | mpp3641a_1_prt_default_part
 bfv_partition | mpp3641a_hundred                                 | index | mpp3641_user | mpp3641a
 bfv_partition | mpp3641a_stringu1                                | index | mpp3641_user | mpp3641a
 bfv_partition | mpp3641a_unique1                                 | index | mpp3641_user | mpp3641a
 bfv_partition | mpp3641a_unique2                                 | index | mpp3641_user | mpp3641a
 bfv_partition | mpp3641b_1_prt_1_2_prt_1_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_1
 bfv_partition | mpp3641b_1_prt_1_2_prt_1_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_1
 bfv_partition | mpp3641b_1_prt_1_2_prt_1_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_1
 bfv_partition | mpp3641b_1_prt_1_2_prt_1_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_1
 bfv_partition | mpp3641b_1_prt_1_2_prt_2_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_2
 bfv_partition | mpp3641b_1_prt_1_2_prt_2_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_2
 bfv_partition | mpp3641b_1_prt_1_2_prt_2_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_2
 bfv_partition | mpp3641b_1_prt_1_2_prt_2_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_2
 bfv_partition | mpp3641b_1_prt_1_2_prt_3_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_3
 bfv_partition | mpp3641b_1_prt_1_2_prt_3_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_3
 bfv_partition | mpp3641b_1_prt_1_2_prt_3_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_3
 bfv_partition | mpp3641b_1_prt_1_2_prt_3_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_3
 bfv_partition | mpp3641b_1_prt_1_2_prt_4_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_4
 bfv_partition | mpp3641b_1_prt_1_2_prt_4_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_4
 bfv_partition | mpp3641b_1_prt_1_2_prt_4_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_4
 bfv_partition | mpp3641b_1_prt_1_2_prt_4_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_4
 bfv_partition | mpp3641b_1_prt_1_2_prt_5_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_5
 bfv_partition | mpp3641b_1_prt_1_2_prt_5_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_5
 bfv_partition | mpp3641b_1_prt_1_2_prt_5_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_5
 bfv_partition | mpp3641b_1_prt_1_2_prt_5_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_1_2_prt_5
 bfv_partition | mpp3641b_1_prt_1_hundred_idx                     | index | mpp3641_user | mpp3641b_1_prt_1
 bfv_partition | mpp3641b_1_prt_1_stringu1_idx                    | index | mpp3641_user | mpp3641b_1_prt_1
 bfv_partition | mpp3641b_1_prt_1_unique1_idx                     | index | mpp3641_user | mpp3641b_1_prt_1
 bfv_partition | mpp3641b_1_prt_1_unique2_idx                     | index | mpp3641_user | mpp3641b_1_prt_1
 bfv_partition | mpp3641b_1_prt_2_2_prt_1_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_1
 bfv_partition | mpp3641b_1_prt_2_2_prt_1_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_1
 bfv_partition | mpp3641b_1_prt_2_2_prt_1_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_1
 bfv_partition | mpp3641b_1_prt_2_2_prt_1_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_1
 bfv_partition | mpp3641b_1_prt_2_2_prt_2_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_2
 bfv_partition | mpp3641b_1_prt_2_2_prt_2_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_2
 bfv_partition | mpp3641b_1_prt_2_2_prt_2_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_2
 bfv_partition | mpp3641b_1_prt_2_2_prt_2_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_2
 bfv_partition | mpp3641b_1_prt_2_2_prt_3_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_3
 bfv_partition | mpp3641b_1_prt_2_2_prt_3_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_3
 bfv_partition | mpp3641b_1_prt_2_2_prt_3_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_3
 bfv_partition | mpp3641b_1_prt_2_2_prt_3_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_3
 bfv_partition | mpp3641b_1_prt_2_2_prt_4_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_4
 bfv_partition | mpp3641b_1_prt_2_2_prt_4_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_4
 bfv_partition | mpp3641b_1_prt_2_2_prt_4_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_4
 bfv_partition | mpp3641b_1_prt_2_2_prt_4_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_4
 bfv_partition | mpp3641b_1_prt_2_2_prt_5_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_5
 bfv_partition | mpp3641b_1_prt_2_2_prt_5_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_5
 bfv_partition | mpp3641b_1_prt_2_2_prt_5_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_5
 bfv_partition | mpp3641b_1_prt_2_2_prt_5_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_2_2_prt_5
 bfv_partition | mpp3641b_1_prt_2_hundred_idx                     | index | mpp3641_user | mpp3641b_1_prt_2
 bfv_partition | mpp3641b_1_prt_2_stringu1_idx                    | index | mpp3641_user | mpp3641b_1_prt_2
 bfv_partition | mpp3641b_1_prt_2_unique1_idx                     | index | mpp3641_user | mpp3641b_1_prt_2
 bfv_partition | mpp3641b_1_prt_2_unique2_idx                     | index | mpp3641_user | mpp3641b_1_prt_2
 bfv_partition | mpp3641b_1_prt_3_2_prt_1_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_1
 bfv_partition | mpp3641b_1_prt_3_2_prt_1_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_1
 bfv_partition | mpp3641b_1_prt_3_2_prt_1_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_1
 bfv_partition | mpp3641b_1_prt_3_2_prt_1_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_1
 bfv_partition | mpp3641b_1_prt_3_2_prt_2_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_2
 bfv_partition | mpp3641b_1_prt_3_2_prt_2_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_2
 bfv_partition | mpp3641b_1_prt_3_2_prt_2_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_2
 bfv_partition | mpp3641b_1_prt_3_2_prt_2_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_2
 bfv_partition | mpp3641b_1_prt_3_2_prt_3_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_3
 bfv_partition | mpp3641b_1_prt_3_2_prt_3_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_3
 bfv_partition | mpp3641b_1_prt_3_2_prt_3_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_3
 bfv_partition | mpp3641b_1_prt_3_2_prt_3_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_3
 bfv_partition | mpp3641b_1_prt_3_2_prt_4_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_4
 bfv_partition | mpp3641b_1_prt_3_2_prt_4_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_4
 bfv_partition | mpp3641b_1_prt_3_2_prt_4_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_4
 bfv_partition | mpp3641b_1_prt_3_2_prt_4_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_4
 bfv_partition | mpp3641b_1_prt_3_2_prt_5_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_5
 bfv_partition | mpp3641b_1_prt_3_2_prt_5_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_5
 bfv_partition | mpp3641b_1_prt_3_2_prt_5_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_5
 bfv_partition | mpp3641b_1_prt_3_2_prt_5_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_3_2_prt_5
 bfv_partition | mpp3641b_1_prt_3_hundred_idx                     | index | mpp3641_user | mpp3641b_1_prt_3
 bfv_partition | mpp3641b_1_prt_3_stringu1_idx                    | index | mpp3641_user | mpp3641b_1_prt_3
 bfv_partition | mpp3641b_1_prt_3_unique1_idx                     | index | mpp3641_user | mpp3641b_1_prt_3
 bfv_partition | mpp3641b_1_prt_3_unique2_idx                     | index | mpp3641_user | mpp3641b_1_prt_3
 bfv_partition | mpp3641b_1_prt_4_2_prt_1_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_1
 bfv_partition | mpp3641b_1_prt_4_2_prt_1_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_1
 bfv_partition | mpp3641b_1_prt_4_2_prt_1_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_1
 bfv_partition | mpp3641b_1_prt_4_2_prt_1_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_1
 bfv_partition | mpp3641b_1_prt_4_2_prt_2_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_2
 bfv_partition | mpp3641b_1_prt_4_2_prt_2_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_2
 bfv_partition | mpp3641b_1_prt_4_2_prt_2_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_2
 bfv_partition | mpp3641b_1_prt_4_2_prt_2_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_2
 bfv_partition | mpp3641b_1_prt_4_2_prt_3_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_3
 bfv_partition | mpp3641b_1_prt_4_2_prt_3_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_3
 bfv_partition | mpp3641b_1_prt_4_2_prt_3_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_3
 bfv_partition | mpp3641b_1_prt_4_2_prt_3_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_3
 bfv_partition | mpp3641b_1_prt_4_2_prt_4_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_4
 bfv_partition | mpp3641b_1_prt_4_2_prt_4_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_4
 bfv_partition | mpp3641b_1_prt_4_2_prt_4_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_4
 bfv_partition | mpp3641b_1_prt_4_2_prt_4_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_4
 bfv_partition | mpp3641b_1_prt_4_2_prt_5_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_5
 bfv_partition | mpp3641b_1_prt_4_2_prt_5_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_5
 bfv_partition | mpp3641b_1_prt_4_2_prt_5_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_5
 bfv_partition | mpp3641b_1_prt_4_2_prt_5_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_4_2_prt_5
 bfv_partition | mpp3641b_1_prt_4_hundred_idx                     | index | mpp3641_user | mpp3641b_1_prt_4
 bfv_partition | mpp3641b_1_prt_4_stringu1_idx                    | index | mpp3641_user | mpp3641b_1_prt_4
 bfv_partition | mpp3641b_1_prt_4_unique1_idx                     | index | mpp3641_user | mpp3641b_1_prt_4
 bfv_partition | mpp3641b_1_prt_4_unique2_idx                     | index | mpp3641_user | mpp3641b_1_prt_4
 bfv_partition | mpp3641b_1_prt_5_2_prt_1_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_1
 bfv_partition | mpp3641b_1_prt_5_2_prt_1_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_1
 bfv_partition | mpp3641b_1_prt_5_2_prt_1_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_1
 bfv_partition | mpp3641b_1_prt_5_2_prt_1_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_1
 bfv_partition | mpp3641b_1_prt_5_2_prt_2_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_2
 bfv_partition | mpp3641b_1_prt_5_2_prt_2_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_2
 bfv_partition | mpp3641b_1_prt_5_2_prt_2_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_2
 bfv_partition | mpp3641b_1_prt_5_2_prt_2_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_2
 bfv_partition | mpp3641b_1_prt_5_2_prt_3_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_3
 bfv_partition | mpp3641b_1_prt_5_2_prt_3_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_3
 bfv_partition | mpp3641b_1_prt_5_2_prt_3_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_3
 bfv_partition | mpp3641b_1_prt_5_2_prt_3_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_3
 bfv_partition | mpp3641b_1_prt_5_2_prt_4_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_4
 bfv_partition | mpp3641b_1_prt_5_2_prt_4_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_4
 bfv_partition | mpp3641b_1_prt_5_2_prt_4_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_4
 bfv_partition | mpp3641b_1_prt_5_2_prt_4_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_4
 bfv_partition | mpp3641b_1_prt_5_2_prt_5_hundred_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_5
 bfv_partition | mpp3641b_1_prt_5_2_prt_5_stringu1_idx            | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_5
 bfv_partition | mpp3641b_1_prt_5_2_prt_5_unique1_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_5
 bfv_partition | mpp3641b_1_prt_5_2_prt_5_unique2_idx             | index | mpp3641_user | mpp3641b_1_prt_5_2_prt_5
 bfv_partition | mpp3641b_1_prt_5_hundred_idx                     | index | mpp3641_user | mpp3641b_1_prt_5
 bfv_partition | mpp3641b_1_prt_5_stringu1_idx                    | index | mpp3641_user | mpp3641b_1_prt_5
 bfv_partition | mpp3641b_1_prt_5_unique1_idx                     | index | mpp3641_user | mpp3641b_1_prt_5
 bfv_partition | mpp3641b_1_prt_5_unique2_idx                     | index | mpp3641_user | mpp3641b_1_prt_5
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_1_hundred_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_1
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_1_stringu1_idx | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_1
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_1_unique1_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_1
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_1_unique2_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_1
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_2_hundred_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_2
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_2_stringu1_idx | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_2
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_2_unique1_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_2
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_2_unique2_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_2
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_3_hundred_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_3
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_3_stringu1_idx | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_3
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_3_unique1_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_3
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_3_unique2_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_3
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_4_hundred_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_4
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_4_stringu1_idx | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_4
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_4_unique1_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_4
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_4_unique2_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_4
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_5_hundred_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_5
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_5_stringu1_idx | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_5
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_5_unique1_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_5
 bfv_partition | mpp3641b_1_prt_default_part_2_prt_5_unique2_idx  | index | mpp3641_user | mpp3641b_1_prt_default_part_2_prt_5
 bfv_partition | mpp3641b_1_prt_default_part_hundred_idx          | index | mpp3641_user | mpp3641b_1_prt_default_part
 bfv_partition | mpp3641b_1_prt_default_part_stringu1_idx         | index | mpp3641_user | mpp3641b_1_prt_default_part
 bfv_partition | mpp3641b_1_prt_default_part_unique1_idx          | index | mpp3641_user | mpp3641b_1_prt_default_part
 bfv_partition | mpp3641b_1_prt_default_part_unique2_idx          | index | mpp3641_user | mpp3641b_1_prt_default_part
 bfv_partition | mpp3641b_hundred                                 | index | mpp3641_user | mpp3641b
 bfv_partition | mpp3641b_stringu1                                | index | mpp3641_user | mpp3641b
 bfv_partition | mpp3641b_unique1                                 | index | mpp3641_user | mpp3641b
 bfv_partition | mpp3641b_unique2                                 | index | mpp3641_user | mpp3641b

drop table mpp3641a;
drop table mpp3641b;
RESET ROLE;
\di mpp3641*

\t
create schema rgs;
show search_path;
  search_path  
---------------
 bfv_partition
(1 row)

create table rgs.mpp4604(
	id int,
	time timestamp
) partition by range( time ) (
	partition p1 start (date '2008-10-14') end (date '2008-10-15'),
	partition p2 end (date '2008-11-01')
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp4604_1_prt_p1" for table "mpp4604"
NOTICE:  CREATE TABLE will create partition "mpp4604_1_prt_p2" for table "mpp4604"
ALTER TABLE rgs.mpp4604 SPLIT PARTITION p2 AT( '2008-10-20' ) INTO( PARTITION p2_tmp, PARTITION p3 );
NOTICE:  exchanged partition "p2" of relation "mpp4604" with relation "pg_temp_1299191"
NOTICE:  dropped partition "p2" for relation "mpp4604"
NOTICE:  CREATE TABLE will create partition "mpp4604_1_prt_p2_tmp" for table "mpp4604"
NOTICE:  CREATE TABLE will create partition "mpp4604_1_prt_p3" for table "mpp4604"
alter table rgs.mpp4604 drop partition p3;
drop schema rgs cascade;
NOTICE:  drop cascades to table rgs.mpp4604
CREATE TABLE mpp3817 (
        unique1         int4,
        unique2         int4,
        two                     int4,
        four            int4,
        ten                     int4,
        twenty          int4,
        hundred         int4,
        thousand        int4,
        twothousand     int4,
        fivethous       int4,
        tenthous        int4,
        odd                     int4,
        even            int4,
        stringu1        name,
        stringu2        name,
        string4         name,
	startDate       date		
) partition by range (startDate)
( start ('2007-01-01') end ('2008-01-01') every (interval '1 month'), default partition default_part );
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'unique1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_default_part" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_2" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_3" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_4" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_5" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_6" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_7" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_8" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_9" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_10" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_11" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_12" for table "mpp3817"
NOTICE:  CREATE TABLE will create partition "mpp3817_1_prt_13" for table "mpp3817"
alter table mpp3817 drop column unique1; -- Set distribution key to randomly
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
NOTICE:  dropping a column that is part of the distribution policy forces a NULL distribution policy
alter table mpp3817 drop column unique2;
\d mpp3817
   Table "bfv_partition.mpp3817"
   Column    |  Type   | Modifiers 
-------------+---------+-----------
 two         | integer | 
 four        | integer | 
 ten         | integer | 
 twenty      | integer | 
 hundred     | integer | 
 thousand    | integer | 
 twothousand | integer | 
 fivethous   | integer | 
 tenthous    | integer | 
 odd         | integer | 
 even        | integer | 
 stringu1    | name    | 
 stringu2    | name    | 
 string4     | name    | 
 startdate   | date    | 
Number of child tables: 13 (Use \d+ to list them.)
Distributed randomly
Partition by: (startdate)

\d mpp3817_1_prt_10
Table "bfv_partition.mpp3817_1_prt_10"
   Column    |  Type   | Modifiers 
-------------+---------+-----------
 two         | integer | 
 four        | integer | 
 ten         | integer | 
 twenty      | integer | 
 hundred     | integer | 
 thousand    | integer | 
 twothousand | integer | 
 fivethous   | integer | 
 tenthous    | integer | 
 odd         | integer | 
 even        | integer | 
 stringu1    | name    | 
 stringu2    | name    | 
 string4     | name    | 
 startdate   | date    | 
Check constraints:
    "mpp3817_1_prt_10_check" CHECK (startdate >= '09-01-2007'::date AND startdate < '10-01-2007'::date)
Inherits: mpp3817
Distributed randomly

\d mpp3817_1_prt_default_part
Table "bfv_partition.mpp3817_1_prt_default_part"
   Column    |  Type   | Modifiers 
-------------+---------+-----------
 two         | integer | 
 four        | integer | 
 ten         | integer | 
 twenty      | integer | 
 hundred     | integer | 
 thousand    | integer | 
 twothousand | integer | 
 fivethous   | integer | 
 tenthous    | integer | 
 odd         | integer | 
 even        | integer | 
 stringu1    | name    | 
 stringu2    | name    | 
 string4     | name    | 
 startdate   | date    | 
Inherits: mpp3817
Distributed randomly

drop table mpp3817;
-- All these should error out because they have overlapping range partitions
CREATE TABLE NATION (
            N_NATIONKEY INTEGER,
            N_NAME CHAR(25),
            N_REGIONKEY INTEGER,
            N_COMMENT VARCHAR(152)
            )
partition by range (n_regionkey) 
(
partition p1 start('0') end('1') inclusive, partition p2 start('1') end('5') inclusive
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'n_nationkey' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ERROR:  starting value of partition "p2" overlaps previous range
LINE 9: ...on p1 start('0') end('1') inclusive, partition p2 start('1')...
                                                             ^
CREATE TABLE ORDERS (
                O_ORDERKEY INT8,
                O_CUSTKEY INTEGER,
                O_ORDERSTATUS CHAR(1),
                O_TOTALPRICE decimal,
                O_ORDERDATE date,
                O_ORDERPRIORITY CHAR(15),
                O_CLERK CHAR(15),
                O_SHIPPRIORITY integer,
                O_COMMENT VARCHAR(79)
                )
partition by range (o_custkey) 
subpartition by range (o_orderkey) 
(
partition p1 start('1') end('150001') every 9 (150000)
(subpartition sp1 start('1') end('1500000'),subpartition sp2 start('1351816') end('6000001'))
);
ERROR:  syntax error at or near "9"
LINE 15: partition p1 start('1') end('150001') every 9 (150000)
                                                     ^
CREATE TABLE LINEITEM (
                L_ORDERKEY INT8,
                L_PARTKEY INTEGER,
                L_SUPPKEY INTEGER,
                L_LINENUMBER integer,
                L_QUANTITY decimal,
                L_EXTENDEDPRICE decimal,
                L_DISCOUNT decimal,
                L_TAX decimal,
                L_RETURNFLAG CHAR(1),
                L_LINESTATUS CHAR(1),
                L_SHIPDATE date,
                L_COMMITDATE date,
                L_RECEIPTDATE date,
                L_SHIPINSTRUCT CHAR(25),
                L_SHIPMODE CHAR(10),
                L_COMMENT VARCHAR(44)
                )
partition by range (l_discount) 
subpartition by range (l_quantity) 
subpartition by range (l_tax) subpartition template (start('0') end('1.08') every 6 (1))
,subpartition by range (l_receiptdate) subpartition template (subpartition sp1 start('1992-01-03') end('1999-01-01'), subpartition sp2 start('1993-01-03') end ('1997-01-01'))
(
partition p1 start('0') end('1.1') 
(subpartition sp1 start('1') end('51') every(10)
) , partition p2 start('1.1') end ('2.2') (subpartition sp1 start('1') end('51') every (5))
);
ERROR:  syntax error at or near "6"
LINE 21: ...) subpartition template (start('0') end('1.08') every 6 (1))
                                                                  ^
CREATE TABLE ORDERS (
                O_ORDERKEY INT8,
                O_CUSTKEY INTEGER,
                O_ORDERSTATUS CHAR(1),
                O_TOTALPRICE decimal,
                O_ORDERDATE date,
                O_ORDERPRIORITY CHAR(15),
                O_CLERK CHAR(15),
                O_SHIPPRIORITY integer,
                O_COMMENT VARCHAR(79)
                )
partition by range (o_custkey) 
subpartition by range (o_orderdate) subpartition template (start('1992-01-01') end('1998-08-03') every 3 (interval '12 months')
)
,subpartition by range (o_orderkey) subpartition template (start('1') end('6000001') every 3 (3000000)
)
(
partition p1 start('1') , partition p2 start('55170') end('114873'), partition p3 start('44717') end('56000'), partition p4 start('114873') end('150001')
);
ERROR:  syntax error at or near "3"
LINE 13: ...late (start('1992-01-01') end('1998-08-03') every 3 (interva...
                                                              ^
CREATE TABLE mpp3114 (f1 time(2) with time zone)
partition by range (f1)
(
  partition pst start (time with time zone '00:00 PST') end (time with time zone '23:00 PST') EVERY (INTERVAL '1 hour'),
  partition est start (time with time zone '00:00 EST') end (time with time zone '23:00 EST') EVERY (INTERVAL '1 hour')
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'f1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ERROR:  starting value of partition "pst_1" overlaps previous range
LINE 4:   partition pst start (time with time zone '00:00 PST') end ...
                        ^
DROP TABLE mpp3114;
ERROR:  table "mpp3114" does not exist
CREATE TABLE sg_cal_detail_r1 (
     datacenter character varying(32),
     poolname character varying(128),
     machinename character varying(128),
     transactionid character varying(32),
     threadid integer,
     transactionorder integer,
     eventclass character(1),
     eventtime timestamp(2) without time zone,
     eventtype character varying(128),
     eventname character varying(128),
     status character varying(128),
     duration numeric(18,2),
     data character varying(4096)
)
WITH (appendonly=true, compresslevel=5, blocksize=2097152)
DISTRIBUTED BY (transactionid)
PARTITION BY RANGE(eventtime) 
SUBPARTITION BY LIST(datacenter)
SUBPARTITION TEMPLATE
(
SUBPARTITION SMF VALUES ('smf01','smf02'),
SUBPARTITION SJC VALUES ('sjc01','sjc02'),
SUBPARTITION DEN VALUES ('den01','den02'),
SUBPARTITION PHX VALUES ('phx01','phx02'),
DEFAULT SUBPARTITION xdc
)
SUBPARTITION BY LIST(eventtype)
SUBPARTITION TEMPLATE
(
SUBPARTITION ET1 VALUES ('EXEC'),
SUBPARTITION ET2 VALUES ('URL','EXECP','ufb'),
SUBPARTITION ET3 VALUES
('EXECT','V3Rules','SOJ','MEQ','RTM','TL','ActiveRules','RTMe','API',
'Info','BizProcess','APIRequest','_ui','Warning','Consume','XML','DSAPar
serTransform'),
SUBPARTITION ET4 VALUES('InflowHandler',
'TaskType',
'LOG',
'FETCH',
'TD',
'AxisInflowPipeline',
'AxisOutflowPipeline',
'API Security',
'SD_DSBE',
'SD_ExpressSale',
'V4Header',
'V4Footer',
'SOAP_Handler',
'MLR',
'EvictedStmtRemove',
'CT',
'DSATransform',
'APIClient',
'DSAQueryExec',
'processDSA',
'FilterEngine',
'Prefetch',
'AsyncCb',
'MC',
'SQL',
'SD_UInfo',
'TnSPayload',
'Serialization',
'CxtSetup',
'LazyInit',
'Deserialization',
'CleanUp',
'RESTDeserialize',
'RESTSerialize',
'SD_StoreNames',
'Serialize',
'Deserialize',
'SVC_INVOKE',
'SD_TitleAggr',
'eLVIS',
'SD_Promo',
'ServerCalLogId',
'SD_DSA',
'ClientCalLogId',
'NCF Async processor',
'V3Rules_OLAP',
'RTAM',
'SOAP_Handlers',
'SOAP_Ser',
'SOAP_Exec',
'RtmAB',
'RTPromotionOptimizer',
'crypt',
'Error',
'DBGetDataHlp',
'NoEncoding',
'Default',
'PromoAppCenter',
'BES_CONSUMER',
'TitleKeywordsModel',
'SOA_CLIENT',
'SD_UserContent',
'NCF',
'BEGenericPortlet',
'PortletExecution',
'SoaPortlet',
'ICEP',
'LOGIC',
'SYI_Eval_Detail',
'SD_Catalog',
'SignIn_Eval_Detail',
'Elvis Client',
'BES',
'TIMESTAMP',
'TLH',
'TLH-PRE-SYI',
'RFC',
'Offer_Eval_Detail',
'SFE_RunQuery',
'DBGetData',
'TKOItem2',
'Notification',
'XSHModel',
'APIDefinition',
'captcha',
'SD_HalfItem',
'Mail_Transport',
'MODPUT',
'60DAY_OLD_ITEM_FETCHED',
'List',
'RemotePortlet',
'MakeOffer_Eval_Detail',
'60_TO_90_DAY_OLD_ITEM_FETCHED',
'Logic',
'RtmGetContentName',
'BEPortletService',
'SYI_EUP_Rbo',
'SYI_Rbo',
'EOA',
'SEC',
'CCHP',
'TKOItem3',
'TnsFindingModelBucket',
'Mail_Send',
'SignIn_Rbo',
'SignIn=23_elvisEvl',
'TnsFindingModelXSH',
'RtmSvc',
'SWEET_TOOTH_LOCATOR_EXPIRED',
'COOKIE_INFO',
'Database',
'RYI_Eval_Detail',
'TnsFindingModelSNP',
'TitleRiskScoringModel_2_0',
'ClientIPin10',
'TnsFindingModelFraud',
'SignIn_BaseRbo2',
'Offer_EUP_Rbo',
'Offer_Rbo',
'FSA',
'Processing_elvis_events',
'NSS_API',
'MyebayBetaRedirect',
'MOTORS_PARTNER_RECIPIENT_HANDLER',
'ElvisEngine',
'PreSyi_Eval_Detail',
'RADAR',
'Latency',
'SD_TAggrCache',
'MEA',
'SD_TitleAggregatorShopping',
'KEM',
'SD_Batch',
'KG',
'ITEM_VISIBILITY',
'APPLOGIC',
'OOPexecute',
'ERRPAGE',
'FQ_RECIPIENT_HANDLER',
'RADAR_POST_Eval_Detail',
'Captcha',
'V3Rules_Detail',
'FilterEngDetail_AAQBuyerSentPre',
'Task',
'SYI_EUP_Report',
'WRITE_MOVE_FILE',
'KG_SYI',
'BatchRecord',
'SD_TitleDesc',
'B001_RTAM',
'SignIn_Report',
'SD_StoreUrl',
'CACHE_REFRESH',
'TKOItem',
'KG_EXTERNAL_CALL',
'WatchDelSkipped',
'SD_Completed',
'RequestCounts',
'FilterEngDetail_RTQEmail',
'FilterEngDetail_AAQBuyerSentPost',
'RYI_EUP_Rbo',
'RYI_Rbo',
'MF_RECIPIENT_HANDLER',
'SYI_Report',
'LCBT',
'HalfRyiSingle_Eval_Detail',
'FilterEngDetail_AAQBuyerSentEmail',
'ViewAdAbTests',
'MakeOffer_EUP_Rbo',
'MakeOffer_Rbo',
'ShipCalc Url',
'Offer_Report',
'TKOUser',
'RADAR_POST_EUP_Rbo',
'SiteStat_LeftNav',
'SiteStat_UserIsSeller',
'FilterEngDetail_RTQPost',
'INFO',
'Offer_EUP_Report',
'RADAR_POST_Rbo',
'SignIn_EUP_Rbo',
'Mail_XML',
'Processing_item_events',
'GEM',
'Mail',
'ELVIS',
'FilterEngDetail_SYIRYI',
'SD_TitleCach',
'Processing_itemend_events',
'HalfRyiSingle_EUP_Rbo',
'AlertNotify',
'AVSRedirectLog',
'BillerService',
'MENMSG',
'UserSegSvc',
'PRICE_CHANGE_ALERT_RECIPIENT_HANDLER',
'NSSOptP',
'PreSyi_Rbo',
'PreSyi_EUP_Rbo',
'NOTIFICATION.BES.BID_NEW',
'Mail_Connect',
'Mail_Close',
'GEMRECORD',
'McapCommunicatorTx',
'IMGPROC',
'KnownGood',
'FilterEngDetail_RTQPre',
'AUTH',
'BULKAPI',
'AAQBuyerSentPre_Eval_Detail',
'RYI_EUP_Report',
'HalfRyiSingle_Rbo',
'MakeOffer_Report',
'ItemClosureLOGIC',
'MakeOffer_EUP_Report',
'RADAR_POST_Report',
'BidBinStats',
'Iterator',
'RADAR_POST_EUP_Report',
'SessionStats',
'RYI_Report',
'SIBE',
'EOT',
'UsageProcessingTx',
'Processing_itemrevised_events',
'HalfSyiSingle_Eval_Detail',
'SignIn_EUP_Report',
'Referer',
'RTQEmail_Eval_Detail',
'AAQBuyerSentPost_Eval_Detail',
'AAQBuyerSentEmail_Eval_Detail',
'NCFEvent',
'CHKOUT',
'SocketWriter',
'RTQPost_Eval_Detail',
'HalfRyiSingle_Report',
'HalfRyiSingle_EUP_Report',
'DcpConnectRequest',
'SD_CatalogCache',
'PreSyi_Report',
'BotSignIn',
'Total Listing : BE_MAIN',
'Z',
'ItemPopularityScore',
'SD_TitleCacheOverflow',
'UserSegmentationCommand',
'FilterEngDetail_AAQSellerSentPre',
'PreSyi_EUP_Report',
'FilterEngDetail_AAQSellerSentPost',
'FilterEngDetail_BestOffer',
'RS',
'FilterEngDetail_AAQSellerSentEmail',
'HalfSyiSingle_EUP_Rbo',
'Service',
'Total Listing : BE_DE',
'BULK.API.HALF.PUT'),
DEFAULT SUBPARTITION etx
)
(
START ('2008-09-30')
END ('2008-10-01')
EVERY (INTERVAL '1 day')
);
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1" for table "sg_cal_detail_r1"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_smf" for table "sg_cal_detail_r1_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_smf_3_prt_et1" for table "sg_cal_detail_r1_1_prt_1_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_smf_3_prt_et2" for table "sg_cal_detail_r1_1_prt_1_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_smf_3_prt_et3" for table "sg_cal_detail_r1_1_prt_1_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_smf_3_prt_et4" for table "sg_cal_detail_r1_1_prt_1_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_smf_3_prt_etx" for table "sg_cal_detail_r1_1_prt_1_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_sjc" for table "sg_cal_detail_r1_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_sjc_3_prt_et1" for table "sg_cal_detail_r1_1_prt_1_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_sjc_3_prt_et2" for table "sg_cal_detail_r1_1_prt_1_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_sjc_3_prt_et3" for table "sg_cal_detail_r1_1_prt_1_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_sjc_3_prt_et4" for table "sg_cal_detail_r1_1_prt_1_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_sjc_3_prt_etx" for table "sg_cal_detail_r1_1_prt_1_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_den" for table "sg_cal_detail_r1_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_den_3_prt_et1" for table "sg_cal_detail_r1_1_prt_1_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_den_3_prt_et2" for table "sg_cal_detail_r1_1_prt_1_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_den_3_prt_et3" for table "sg_cal_detail_r1_1_prt_1_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_den_3_prt_et4" for table "sg_cal_detail_r1_1_prt_1_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_den_3_prt_etx" for table "sg_cal_detail_r1_1_prt_1_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_phx" for table "sg_cal_detail_r1_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_phx_3_prt_et1" for table "sg_cal_detail_r1_1_prt_1_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_phx_3_prt_et2" for table "sg_cal_detail_r1_1_prt_1_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_phx_3_prt_et3" for table "sg_cal_detail_r1_1_prt_1_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_phx_3_prt_et4" for table "sg_cal_detail_r1_1_prt_1_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_phx_3_prt_etx" for table "sg_cal_detail_r1_1_prt_1_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_xdc" for table "sg_cal_detail_r1_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_xdc_3_prt_et1" for table "sg_cal_detail_r1_1_prt_1_2_prt_xdc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_xdc_3_prt_et2" for table "sg_cal_detail_r1_1_prt_1_2_prt_xdc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_xdc_3_prt_et3" for table "sg_cal_detail_r1_1_prt_1_2_prt_xdc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_xdc_3_prt_et4" for table "sg_cal_detail_r1_1_prt_1_2_prt_xdc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_1_2_prt_xdc_3_prt_etx" for table "sg_cal_detail_r1_1_prt_1_2_prt_xdc"
ALTER TABLE sg_cal_detail_r1 ADD PARTITION START ('2008-10-01') INCLUSIVE END ('2008-10-02') EXCLUSIVE
WITH (appendonly=true, compresslevel=5, blocksize=2097152);
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926" for table "sg_cal_detail_r1"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf" for table "sg_cal_detail_r1_1_prt_r348824926"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf_3_prt_et1" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf_3_prt_et2" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf_3_prt_et3" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf_3_prt_et4" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf_3_prt_etx" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_smf"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc" for table "sg_cal_detail_r1_1_prt_r348824926"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc_3_prt_et1" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc_3_prt_et2" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc_3_prt_et3" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc_3_prt_et4" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc_3_prt_etx" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_sjc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_den" for table "sg_cal_detail_r1_1_prt_r348824926"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_den_3_prt_et1" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_den_3_prt_et2" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_den_3_prt_et3" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_den_3_prt_et4" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_den_3_prt_etx" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_den"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx" for table "sg_cal_detail_r1_1_prt_r348824926"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx_3_prt_et1" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx_3_prt_et2" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx_3_prt_et3" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx_3_prt_et4" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx_3_prt_etx" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_phx"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc" for table "sg_cal_detail_r1_1_prt_r348824926"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc_3_prt_et1" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc_3_prt_et2" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc_3_prt_et3" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc_3_prt_et4" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc"
NOTICE:  CREATE TABLE will create partition "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc_3_prt_etx" for table "sg_cal_detail_r1_1_prt_r348824926_2_prt_xdc"
select count(*) from pg_class where relname like 'sg_cal_detail_r1%';
 count 
-------
    63
(1 row)

drop table sg_cal_detail_r1;
create table j (i int, a date) partition by range(i)
subpartition by list(a) subpartition template
(subpartition a values(1, 2, 3, 4),
subpartition b values(5, 6, 7, 8))
(
start (date '2001-01-01'),
start (date '2002-01-01'),
start (date '2003-01-01'),
start (date '2004-01-01'),
start (date '2005-01-01')
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ERROR:  cannot coerce partition parameter to column type "integer"
LINE 6: start (date '2001-01-01'),
                    ^
set optimizer_analyze_root_partition=on;
create table mpp3487 (i int) partition by range (i) (start(1) end(10) every(1));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp3487_1_prt_1" for table "mpp3487"
NOTICE:  CREATE TABLE will create partition "mpp3487_1_prt_2" for table "mpp3487"
NOTICE:  CREATE TABLE will create partition "mpp3487_1_prt_3" for table "mpp3487"
NOTICE:  CREATE TABLE will create partition "mpp3487_1_prt_4" for table "mpp3487"
NOTICE:  CREATE TABLE will create partition "mpp3487_1_prt_5" for table "mpp3487"
NOTICE:  CREATE TABLE will create partition "mpp3487_1_prt_6" for table "mpp3487"
NOTICE:  CREATE TABLE will create partition "mpp3487_1_prt_7" for table "mpp3487"
NOTICE:  CREATE TABLE will create partition "mpp3487_1_prt_8" for table "mpp3487"
NOTICE:  CREATE TABLE will create partition "mpp3487_1_prt_9" for table "mpp3487"
insert into mpp3487 select i from generate_series(1, 9) i;
vacuum analyze mpp3487;
select  schemaname, tablename, attname, null_frac, avg_width, n_distinct, most_common_freqs, histogram_bounds from pg_stats where tablename like 'mpp3487%' order by 2;
  schemaname   |    tablename    | attname | null_frac | avg_width | n_distinct | most_common_freqs | histogram_bounds 
---------------+-----------------+---------+-----------+-----------+------------+-------------------+------------------
 bfv_partition | mpp3487         | i       |         0 |         4 |         -1 |                   | 
 bfv_partition | mpp3487_1_prt_1 | i       |         0 |         4 |         -1 |                   | 
 bfv_partition | mpp3487_1_prt_2 | i       |         0 |         4 |         -1 |                   | 
 bfv_partition | mpp3487_1_prt_3 | i       |         0 |         4 |         -1 |                   | 
 bfv_partition | mpp3487_1_prt_4 | i       |         0 |         4 |         -1 |                   | 
 bfv_partition | mpp3487_1_prt_5 | i       |         0 |         4 |         -1 |                   | 
 bfv_partition | mpp3487_1_prt_6 | i       |         0 |         4 |         -1 |                   | 
 bfv_partition | mpp3487_1_prt_7 | i       |         0 |         4 |         -1 |                   | 
 bfv_partition | mpp3487_1_prt_8 | i       |         0 |         4 |         -1 |                   | 
 bfv_partition | mpp3487_1_prt_9 | i       |         0 |         4 |         -1 |                   | 
(10 rows)

drop table mpp3487;
-- Negative Tests for alter subpartition template syntax with Schema
create schema qa147;
CREATE TABLE qa147.sales (trans_id int, date date, amount
decimal(9,2), region text)
DISTRIBUTED BY (trans_id)
PARTITION BY RANGE (date)
SUBPARTITION BY LIST (region)
SUBPARTITION TEMPLATE
( SUBPARTITION usa VALUES ('usa'),
  SUBPARTITION asia VALUES ('asia'),
  SUBPARTITION europe VALUES ('europe') )
( START (date '2008-01-01') INCLUSIVE
   END (date '2009-01-01') EXCLUSIVE
   EVERY (INTERVAL '1 month') );
NOTICE:  CREATE TABLE will create partition "sales_1_prt_1" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_1_2_prt_usa" for table "sales_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_1_2_prt_asia" for table "sales_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_1_2_prt_europe" for table "sales_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_2" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_2_2_prt_usa" for table "sales_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_2_2_prt_asia" for table "sales_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_2_2_prt_europe" for table "sales_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_3" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_3_2_prt_usa" for table "sales_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_3_2_prt_asia" for table "sales_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_3_2_prt_europe" for table "sales_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_4" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_4_2_prt_usa" for table "sales_1_prt_4"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_4_2_prt_asia" for table "sales_1_prt_4"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_4_2_prt_europe" for table "sales_1_prt_4"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_5" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_5_2_prt_usa" for table "sales_1_prt_5"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_5_2_prt_asia" for table "sales_1_prt_5"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_5_2_prt_europe" for table "sales_1_prt_5"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_6" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_6_2_prt_usa" for table "sales_1_prt_6"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_6_2_prt_asia" for table "sales_1_prt_6"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_6_2_prt_europe" for table "sales_1_prt_6"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_7" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_7_2_prt_usa" for table "sales_1_prt_7"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_7_2_prt_asia" for table "sales_1_prt_7"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_7_2_prt_europe" for table "sales_1_prt_7"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_8" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_8_2_prt_usa" for table "sales_1_prt_8"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_8_2_prt_asia" for table "sales_1_prt_8"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_8_2_prt_europe" for table "sales_1_prt_8"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_9" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_9_2_prt_usa" for table "sales_1_prt_9"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_9_2_prt_asia" for table "sales_1_prt_9"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_9_2_prt_europe" for table "sales_1_prt_9"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_10" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_10_2_prt_usa" for table "sales_1_prt_10"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_10_2_prt_asia" for table "sales_1_prt_10"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_10_2_prt_europe" for table "sales_1_prt_10"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_11" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_11_2_prt_usa" for table "sales_1_prt_11"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_11_2_prt_asia" for table "sales_1_prt_11"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_11_2_prt_europe" for table "sales_1_prt_11"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_12" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_12_2_prt_usa" for table "sales_1_prt_12"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_12_2_prt_asia" for table "sales_1_prt_12"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_12_2_prt_europe" for table "sales_1_prt_12"
-- Invalid TEMPLATE
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (NULL);
ERROR:  syntax error at or near "NULL"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (NULL);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (-1);
ERROR:  syntax error at or near "-"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (-1);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (10000);
ERROR:  syntax error at or near "10000"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (10000);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ('');
ERROR:  syntax error at or near "''"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ('');
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ("");
ERROR:  zero-length delimited identifier at or near """"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ("");
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (*);
ERROR:  syntax error at or near "*"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (*);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (1*);
ERROR:  syntax error at or near "1"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (1*);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ("1*");
ERROR:  syntax error at or near ""1*""
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ("1*");
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (ABC);
ERROR:  syntax error at or near "ABC"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (ABC);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ($);
ERROR:  syntax error at or near "$"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ($);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (%%);
ERROR:  syntax error at or near "%%"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (%%);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (#);
ERROR:  syntax error at or near "#"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (#);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (!);
ERROR:  syntax error at or near "!"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (!);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (&);
ERROR:  syntax error at or near "&"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (&);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (^);
ERROR:  syntax error at or near "^"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (^);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (@);
ERROR:  syntax error at or near "@"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (@);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (<);
ERROR:  syntax error at or near "<"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (<);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (>);
ERROR:  syntax error at or near ">"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (>);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (.);
ERROR:  syntax error at or near "."
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (.);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (?);
ERROR:  syntax error at or near "?"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (?);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (/);
ERROR:  syntax error at or near "/"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (/);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (|);
ERROR:  syntax error at or near "|"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (|);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (~);
ERROR:  syntax error at or near "~"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (~);
                                                           ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (`);
ERROR:  syntax error at or near "`"
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE (`);
                                                           ^
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |          partitionboundary           
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+--------------------------------------
 qa147      | sales     | usa           | list          |              1 |               |                 1 | 'usa'::text         |                     |                         |                   |                       |                      | f                  | SUBPARTITION usa VALUES('usa')
 qa147      | sales     | asia          | list          |              1 |               |                 2 | 'asia'::text        |                     |                         |                   |                       |                      | f                  | SUBPARTITION asia VALUES('asia')
 qa147      | sales     | europe        | list          |              1 |               |                 3 | 'europe'::text      |                     |                         |                   |                       |                      | f                  | SUBPARTITION europe VALUES('europe')
(3 rows)

set client_min_messages='warning';
drop schema qa147 cascade;
reset client_min_messages;
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault | partitionboundary 
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+-------------------
(0 rows)

-- Mix-Match for Alter subpartition template
CREATE TABLE qa147sales (trans_id int, date date, amount 
decimal(9,2), region text)  
DISTRIBUTED BY (trans_id) 
PARTITION BY RANGE (date) 
SUBPARTITION BY LIST (region) 
SUBPARTITION TEMPLATE 
( SUBPARTITION usa VALUES ('usa'), 
  SUBPARTITION asia VALUES ('asia'), 
  SUBPARTITION europe VALUES ('europe') ) 
( START (date '2008-01-01') INCLUSIVE 
   END (date '2009-01-01') EXCLUSIVE 
   EVERY (INTERVAL '1 month') ); 
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_1" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_1_2_prt_usa" for table "qa147sales_1_prt_1"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_1_2_prt_asia" for table "qa147sales_1_prt_1"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_1_2_prt_europe" for table "qa147sales_1_prt_1"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_2" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_2_2_prt_usa" for table "qa147sales_1_prt_2"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_2_2_prt_asia" for table "qa147sales_1_prt_2"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_2_2_prt_europe" for table "qa147sales_1_prt_2"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_3" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_3_2_prt_usa" for table "qa147sales_1_prt_3"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_3_2_prt_asia" for table "qa147sales_1_prt_3"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_3_2_prt_europe" for table "qa147sales_1_prt_3"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_4" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_4_2_prt_usa" for table "qa147sales_1_prt_4"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_4_2_prt_asia" for table "qa147sales_1_prt_4"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_4_2_prt_europe" for table "qa147sales_1_prt_4"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_5" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_5_2_prt_usa" for table "qa147sales_1_prt_5"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_5_2_prt_asia" for table "qa147sales_1_prt_5"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_5_2_prt_europe" for table "qa147sales_1_prt_5"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_6" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_6_2_prt_usa" for table "qa147sales_1_prt_6"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_6_2_prt_asia" for table "qa147sales_1_prt_6"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_6_2_prt_europe" for table "qa147sales_1_prt_6"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_7" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_7_2_prt_usa" for table "qa147sales_1_prt_7"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_7_2_prt_asia" for table "qa147sales_1_prt_7"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_7_2_prt_europe" for table "qa147sales_1_prt_7"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_8" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_8_2_prt_usa" for table "qa147sales_1_prt_8"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_8_2_prt_asia" for table "qa147sales_1_prt_8"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_8_2_prt_europe" for table "qa147sales_1_prt_8"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_9" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_9_2_prt_usa" for table "qa147sales_1_prt_9"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_9_2_prt_asia" for table "qa147sales_1_prt_9"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_9_2_prt_europe" for table "qa147sales_1_prt_9"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_10" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_10_2_prt_usa" for table "qa147sales_1_prt_10"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_10_2_prt_asia" for table "qa147sales_1_prt_10"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_10_2_prt_europe" for table "qa147sales_1_prt_10"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_11" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_11_2_prt_usa" for table "qa147sales_1_prt_11"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_11_2_prt_asia" for table "qa147sales_1_prt_11"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_11_2_prt_europe" for table "qa147sales_1_prt_11"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_12" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_12_2_prt_usa" for table "qa147sales_1_prt_12"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_12_2_prt_asia" for table "qa147sales_1_prt_12"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_12_2_prt_europe" for table "qa147sales_1_prt_12"
-- Clear TEMPLATE
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE ();
NOTICE:  dropped level 1 subpartition template specification for relation "qa147sales"
select * from pg_partition_templates where tablename='qa147sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault | partitionboundary 
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+-------------------
(0 rows)

-- This will overwrite previous subpartition template
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usa VALUES ('usa'), SUBPARTITION asia VALUES ('asia') );
NOTICE:  adding level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usa" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_asia" for table "qa147sales_1_prt_subpartition_template"
select * from pg_partition_templates where tablename='qa147sales';
  schemaname   | tablename  | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |        partitionboundary         
---------------+------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+----------------------------------
 bfv_partition | qa147sales | usa           | list          |              1 |               |                 1 | 'usa'::text         |                     |                         |                   |                       |                      | f                  | SUBPARTITION usa VALUES('usa')
 bfv_partition | qa147sales | asia          | list          |              1 |               |                 2 | 'asia'::text        |                     |                         |                   |                       |                      | f                  | SUBPARTITION asia VALUES('asia')
(2 rows)

-- Invalid subpartition
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usam1 start (date '2008-01-01') INCLUSIVE END (date '2008-02-01') EXCLUSIVE );
NOTICE:  replacing level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
ERROR:  invalid boundary specification for LIST partition
LINE 1: ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
                     ^
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usam1 start (date '2008-01-01') INCLUSIVE END (date '2009-01-01') EXCLUSIVE EVERY (INTERVAL '1 month') );
NOTICE:  replacing level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
ERROR:  invalid boundary specification for LIST partition
LINE 1: ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where tablename='qa147sales';
  schemaname   | tablename  | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |        partitionboundary         
---------------+------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+----------------------------------
 bfv_partition | qa147sales | usa           | list          |              1 |               |                 1 | 'usa'::text         |                     |                         |                   |                       |                      | f                  | SUBPARTITION usa VALUES('usa')
 bfv_partition | qa147sales | asia          | list          |              1 |               |                 2 | 'asia'::text        |                     |                         |                   |                       |                      | f                  | SUBPARTITION asia VALUES('asia')
(2 rows)

-- Mix and Match RANGE/LIST . Expect to Error
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
( 
SUBPARTITION usa1 VALUES('usa'),
SUBPARTITION usadate start (date '2008-01-01') INCLUSIVE END(date '2009-01-01') EXCLUSIVE);
NOTICE:  replacing level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
ERROR:  invalid boundary specification for LIST partition
LINE 1: ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where tablename='qa147sales';
  schemaname   | tablename  | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |        partitionboundary         
---------------+------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+----------------------------------
 bfv_partition | qa147sales | usa           | list          |              1 |               |                 1 | 'usa'::text         |                     |                         |                   |                       |                      | f                  | SUBPARTITION usa VALUES('usa')
 bfv_partition | qa147sales | asia          | list          |              1 |               |                 2 | 'asia'::text        |                     |                         |                   |                       |                      | f                  | SUBPARTITION asia VALUES('asia')
(2 rows)

-- Mix and Match RANGE/LIST . Expect to Error
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
( 
SUBPARTITION usadate start (date '2008-01-01') INCLUSIVE END(date '2009-01-01') EXCLUSIVE,
SUBPARTITION usa1 VALUES('usa'));
NOTICE:  replacing level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
ERROR:  invalid boundary specification for LIST partition
LINE 1: ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where tablename='qa147sales';
  schemaname   | tablename  | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |        partitionboundary         
---------------+------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+----------------------------------
 bfv_partition | qa147sales | usa           | list          |              1 |               |                 1 | 'usa'::text         |                     |                         |                   |                       |                      | f                  | SUBPARTITION usa VALUES('usa')
 bfv_partition | qa147sales | asia          | list          |              1 |               |                 2 | 'asia'::text        |                     |                         |                   |                       |                      | f                  | SUBPARTITION asia VALUES('asia')
(2 rows)

drop table qa147sales;
CREATE TABLE qa147sales (trans_id int, date date, amount
decimal(9,2), region text)
DISTRIBUTED BY (trans_id)
PARTITION BY LIST (region)
SUBPARTITION BY RANGE (date)
SUBPARTITION TEMPLATE
( START (date '2008-01-01') INCLUSIVE
   END (date '2009-01-01') EXCLUSIVE
   EVERY (INTERVAL '1 month') )
(
  PARTITION usa VALUES ('usa'),
  PARTITION asia VALUES ('asia'),
  PARTITION europe VALUES ('europe') );
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_1" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_2" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_3" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_4" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_5" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_6" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_7" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_8" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_9" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_10" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_11" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_usa_2_prt_12" for table "qa147sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_1" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_2" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_3" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_4" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_5" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_6" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_7" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_8" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_9" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_10" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_11" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_asia_2_prt_12" for table "qa147sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_1" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_2" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_3" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_4" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_5" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_6" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_7" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_8" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_9" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_10" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_11" for table "qa147sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_europe_2_prt_12" for table "qa147sales_1_prt_europe"
-- Clear TEMPLATE
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE ();
NOTICE:  dropped level 1 subpartition template specification for relation "qa147sales"
select * from pg_partition_templates where tablename='qa147sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault | partitionboundary 
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+-------------------
(0 rows)

-- This will overwrite previous subpartition template
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usam1 start (date '2008-01-01') INCLUSIVE END (date '2008-02-01') EXCLUSIVE );
NOTICE:  adding level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1" for table "qa147sales_1_prt_subpartition_template"
select * from pg_partition_templates where tablename='qa147sales';
  schemaname   | tablename  | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                           partitionboundary                            
---------------+------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+------------------------------------------------------------------------
 bfv_partition | qa147sales | usam1         | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     |                      | f                  | SUBPARTITION usam1 START ('01-01-2008'::date) END ('02-01-2008'::date)
(1 row)

ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usam1 start (date '2008-01-01') INCLUSIVE END (date '2009-01-01') EXCLUSIVE EVERY (INTERVAL '1 month') );
NOTICE:  replacing level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_1" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_2" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_3" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_4" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_5" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_6" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_7" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_8" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_9" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_10" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_11" for table "qa147sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template_2_prt_usam1_12" for table "qa147sales_1_prt_subpartition_template"
select * from pg_partition_templates where tablename='qa147sales';
  schemaname   | tablename  | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                                           partitionboundary                                           
---------------+------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+-------------------------------------------------------------------------------------------------------
 bfv_partition | qa147sales | usam1_1       | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_1 START ('01-01-2008'::date) END ('02-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_2       | range         |              1 |             2 |                 2 |                     | '02-01-2008'::date  | t                       | '03-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_2 START ('02-01-2008'::date) END ('03-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_3       | range         |              1 |             3 |                 3 |                     | '03-01-2008'::date  | t                       | '04-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_3 START ('03-01-2008'::date) END ('04-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_4       | range         |              1 |             4 |                 4 |                     | '04-01-2008'::date  | t                       | '05-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_4 START ('04-01-2008'::date) END ('05-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_5       | range         |              1 |             5 |                 5 |                     | '05-01-2008'::date  | t                       | '06-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_5 START ('05-01-2008'::date) END ('06-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_6       | range         |              1 |             6 |                 6 |                     | '06-01-2008'::date  | t                       | '07-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_6 START ('06-01-2008'::date) END ('07-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_7       | range         |              1 |             7 |                 7 |                     | '07-01-2008'::date  | t                       | '08-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_7 START ('07-01-2008'::date) END ('08-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_8       | range         |              1 |             8 |                 8 |                     | '08-01-2008'::date  | t                       | '09-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_8 START ('08-01-2008'::date) END ('09-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_9       | range         |              1 |             9 |                 9 |                     | '09-01-2008'::date  | t                       | '10-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_9 START ('09-01-2008'::date) END ('10-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_10      | range         |              1 |            10 |                10 |                     | '10-01-2008'::date  | t                       | '11-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_10 START ('10-01-2008'::date) END ('11-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_11      | range         |              1 |            11 |                11 |                     | '11-01-2008'::date  | t                       | '12-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_11 START ('11-01-2008'::date) END ('12-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_12      | range         |              1 |            12 |                12 |                     | '12-01-2008'::date  | t                       | '01-01-2009'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_12 START ('12-01-2008'::date) END ('01-01-2009'::date) EVERY ('@ 1 mon'::interval)
(12 rows)

-- Invalid subpartition template
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usa VALUES ('usa'), SUBPARTITION asia VALUES ('asia') );
NOTICE:  replacing level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
ERROR:  invalid use of LIST boundary specification in partition "usa" of type RANGE (at depth 2)
LINE 1: ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where tablename='qa147sales';
  schemaname   | tablename  | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                                           partitionboundary                                           
---------------+------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+-------------------------------------------------------------------------------------------------------
 bfv_partition | qa147sales | usam1_1       | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_1 START ('01-01-2008'::date) END ('02-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_2       | range         |              1 |             2 |                 2 |                     | '02-01-2008'::date  | t                       | '03-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_2 START ('02-01-2008'::date) END ('03-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_3       | range         |              1 |             3 |                 3 |                     | '03-01-2008'::date  | t                       | '04-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_3 START ('03-01-2008'::date) END ('04-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_4       | range         |              1 |             4 |                 4 |                     | '04-01-2008'::date  | t                       | '05-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_4 START ('04-01-2008'::date) END ('05-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_5       | range         |              1 |             5 |                 5 |                     | '05-01-2008'::date  | t                       | '06-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_5 START ('05-01-2008'::date) END ('06-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_6       | range         |              1 |             6 |                 6 |                     | '06-01-2008'::date  | t                       | '07-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_6 START ('06-01-2008'::date) END ('07-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_7       | range         |              1 |             7 |                 7 |                     | '07-01-2008'::date  | t                       | '08-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_7 START ('07-01-2008'::date) END ('08-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_8       | range         |              1 |             8 |                 8 |                     | '08-01-2008'::date  | t                       | '09-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_8 START ('08-01-2008'::date) END ('09-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_9       | range         |              1 |             9 |                 9 |                     | '09-01-2008'::date  | t                       | '10-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_9 START ('09-01-2008'::date) END ('10-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_10      | range         |              1 |            10 |                10 |                     | '10-01-2008'::date  | t                       | '11-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_10 START ('10-01-2008'::date) END ('11-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_11      | range         |              1 |            11 |                11 |                     | '11-01-2008'::date  | t                       | '12-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_11 START ('11-01-2008'::date) END ('12-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_12      | range         |              1 |            12 |                12 |                     | '12-01-2008'::date  | t                       | '01-01-2009'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_12 START ('12-01-2008'::date) END ('01-01-2009'::date) EVERY ('@ 1 mon'::interval)
(12 rows)

-- Mix and Match RANGE/LIST . Expect to Error
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
(
SUBPARTITION usa1 VALUES('usa'),
SUBPARTITION usadate start (date '2008-01-01') INCLUSIVE END(date '2009-01-01') EXCLUSIVE);
NOTICE:  replacing level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
ERROR:  invalid use of LIST boundary specification in partition "usa1" of type RANGE (at depth 2)
LINE 1: ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where tablename='qa147sales';
  schemaname   | tablename  | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                                           partitionboundary                                           
---------------+------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+-------------------------------------------------------------------------------------------------------
 bfv_partition | qa147sales | usam1_1       | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_1 START ('01-01-2008'::date) END ('02-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_2       | range         |              1 |             2 |                 2 |                     | '02-01-2008'::date  | t                       | '03-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_2 START ('02-01-2008'::date) END ('03-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_3       | range         |              1 |             3 |                 3 |                     | '03-01-2008'::date  | t                       | '04-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_3 START ('03-01-2008'::date) END ('04-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_4       | range         |              1 |             4 |                 4 |                     | '04-01-2008'::date  | t                       | '05-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_4 START ('04-01-2008'::date) END ('05-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_5       | range         |              1 |             5 |                 5 |                     | '05-01-2008'::date  | t                       | '06-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_5 START ('05-01-2008'::date) END ('06-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_6       | range         |              1 |             6 |                 6 |                     | '06-01-2008'::date  | t                       | '07-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_6 START ('06-01-2008'::date) END ('07-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_7       | range         |              1 |             7 |                 7 |                     | '07-01-2008'::date  | t                       | '08-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_7 START ('07-01-2008'::date) END ('08-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_8       | range         |              1 |             8 |                 8 |                     | '08-01-2008'::date  | t                       | '09-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_8 START ('08-01-2008'::date) END ('09-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_9       | range         |              1 |             9 |                 9 |                     | '09-01-2008'::date  | t                       | '10-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_9 START ('09-01-2008'::date) END ('10-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_10      | range         |              1 |            10 |                10 |                     | '10-01-2008'::date  | t                       | '11-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_10 START ('10-01-2008'::date) END ('11-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_11      | range         |              1 |            11 |                11 |                     | '11-01-2008'::date  | t                       | '12-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_11 START ('11-01-2008'::date) END ('12-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_12      | range         |              1 |            12 |                12 |                     | '12-01-2008'::date  | t                       | '01-01-2009'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_12 START ('12-01-2008'::date) END ('01-01-2009'::date) EVERY ('@ 1 mon'::interval)
(12 rows)

-- Mix and Match RANGE/LIST . Expect to Error
ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
( 
SUBPARTITION usadate start (date '2008-01-01') INCLUSIVE END(date '2009-01-01') EXCLUSIVE,
SUBPARTITION usa1 VALUES('usa'));
NOTICE:  replacing level 1 subpartition template specification for relation "qa147sales"
NOTICE:  CREATE TABLE will create partition "qa147sales_1_prt_subpartition_template" for table "qa147sales"
ERROR:  invalid use of LIST boundary specification in partition "usa1" of type RANGE (at depth 2)
LINE 1: ALTER TABLE qa147sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where tablename='qa147sales';
  schemaname   | tablename  | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                                           partitionboundary                                           
---------------+------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+-------------------------------------------------------------------------------------------------------
 bfv_partition | qa147sales | usam1_1       | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_1 START ('01-01-2008'::date) END ('02-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_2       | range         |              1 |             2 |                 2 |                     | '02-01-2008'::date  | t                       | '03-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_2 START ('02-01-2008'::date) END ('03-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_3       | range         |              1 |             3 |                 3 |                     | '03-01-2008'::date  | t                       | '04-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_3 START ('03-01-2008'::date) END ('04-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_4       | range         |              1 |             4 |                 4 |                     | '04-01-2008'::date  | t                       | '05-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_4 START ('04-01-2008'::date) END ('05-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_5       | range         |              1 |             5 |                 5 |                     | '05-01-2008'::date  | t                       | '06-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_5 START ('05-01-2008'::date) END ('06-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_6       | range         |              1 |             6 |                 6 |                     | '06-01-2008'::date  | t                       | '07-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_6 START ('06-01-2008'::date) END ('07-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_7       | range         |              1 |             7 |                 7 |                     | '07-01-2008'::date  | t                       | '08-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_7 START ('07-01-2008'::date) END ('08-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_8       | range         |              1 |             8 |                 8 |                     | '08-01-2008'::date  | t                       | '09-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_8 START ('08-01-2008'::date) END ('09-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_9       | range         |              1 |             9 |                 9 |                     | '09-01-2008'::date  | t                       | '10-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_9 START ('09-01-2008'::date) END ('10-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_10      | range         |              1 |            10 |                10 |                     | '10-01-2008'::date  | t                       | '11-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_10 START ('10-01-2008'::date) END ('11-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_11      | range         |              1 |            11 |                11 |                     | '11-01-2008'::date  | t                       | '12-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_11 START ('11-01-2008'::date) END ('12-01-2008'::date) EVERY ('@ 1 mon'::interval)
 bfv_partition | qa147sales | usam1_12      | range         |              1 |            12 |                12 |                     | '12-01-2008'::date  | t                       | '01-01-2009'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_12 START ('12-01-2008'::date) END ('01-01-2009'::date) EVERY ('@ 1 mon'::interval)
(12 rows)

drop table qa147sales;
select * from pg_partition_templates where tablename='qa147sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault | partitionboundary 
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+-------------------
(0 rows)

-- Now with Schema
-- Mix-Match for Alter subpartition template in a schema
create schema qa147;
CREATE TABLE qa147.sales (trans_id int, date date, amount
decimal(9,2), region text)
DISTRIBUTED BY (trans_id)
PARTITION BY RANGE (date)
SUBPARTITION BY LIST (region)
SUBPARTITION TEMPLATE
( SUBPARTITION usa VALUES ('usa'),
  SUBPARTITION asia VALUES ('asia'),
  SUBPARTITION europe VALUES ('europe') )
( START (date '2008-01-01') INCLUSIVE
   END (date '2009-01-01') EXCLUSIVE
   EVERY (INTERVAL '1 month') );
NOTICE:  CREATE TABLE will create partition "sales_1_prt_1" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_1_2_prt_usa" for table "sales_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_1_2_prt_asia" for table "sales_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_1_2_prt_europe" for table "sales_1_prt_1"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_2" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_2_2_prt_usa" for table "sales_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_2_2_prt_asia" for table "sales_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_2_2_prt_europe" for table "sales_1_prt_2"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_3" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_3_2_prt_usa" for table "sales_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_3_2_prt_asia" for table "sales_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_3_2_prt_europe" for table "sales_1_prt_3"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_4" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_4_2_prt_usa" for table "sales_1_prt_4"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_4_2_prt_asia" for table "sales_1_prt_4"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_4_2_prt_europe" for table "sales_1_prt_4"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_5" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_5_2_prt_usa" for table "sales_1_prt_5"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_5_2_prt_asia" for table "sales_1_prt_5"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_5_2_prt_europe" for table "sales_1_prt_5"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_6" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_6_2_prt_usa" for table "sales_1_prt_6"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_6_2_prt_asia" for table "sales_1_prt_6"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_6_2_prt_europe" for table "sales_1_prt_6"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_7" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_7_2_prt_usa" for table "sales_1_prt_7"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_7_2_prt_asia" for table "sales_1_prt_7"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_7_2_prt_europe" for table "sales_1_prt_7"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_8" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_8_2_prt_usa" for table "sales_1_prt_8"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_8_2_prt_asia" for table "sales_1_prt_8"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_8_2_prt_europe" for table "sales_1_prt_8"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_9" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_9_2_prt_usa" for table "sales_1_prt_9"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_9_2_prt_asia" for table "sales_1_prt_9"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_9_2_prt_europe" for table "sales_1_prt_9"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_10" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_10_2_prt_usa" for table "sales_1_prt_10"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_10_2_prt_asia" for table "sales_1_prt_10"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_10_2_prt_europe" for table "sales_1_prt_10"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_11" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_11_2_prt_usa" for table "sales_1_prt_11"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_11_2_prt_asia" for table "sales_1_prt_11"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_11_2_prt_europe" for table "sales_1_prt_11"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_12" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_12_2_prt_usa" for table "sales_1_prt_12"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_12_2_prt_asia" for table "sales_1_prt_12"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_12_2_prt_europe" for table "sales_1_prt_12"
-- Clear TEMPLATE
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ();
NOTICE:  dropped level 1 subpartition template specification for relation "sales"
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault | partitionboundary 
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+-------------------
(0 rows)

-- This will overwrite previous subpartition template
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usa VALUES ('usa'), SUBPARTITION asia VALUES ('asia') );
NOTICE:  adding level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usa" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_asia" for table "sales_1_prt_subpartition_template"
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |        partitionboundary         
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+----------------------------------
 qa147      | sales     | usa           | list          |              1 |               |                 1 | 'usa'::text         |                     |                         |                   |                       |                      | f                  | SUBPARTITION usa VALUES('usa')
 qa147      | sales     | asia          | list          |              1 |               |                 2 | 'asia'::text        |                     |                         |                   |                       |                      | f                  | SUBPARTITION asia VALUES('asia')
(2 rows)

-- Invalid subpartition
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usam1 start (date '2008-01-01') INCLUSIVE END (date '2008-02-01') EXCLUSIVE );
NOTICE:  replacing level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
ERROR:  invalid boundary specification for LIST partition
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
                     ^
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usam1 start (date '2008-01-01') INCLUSIVE END (date '2009-01-01') EXCLUSIVE EVERY (INTERVAL '1 month') );
NOTICE:  replacing level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
ERROR:  invalid boundary specification for LIST partition
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |        partitionboundary         
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+----------------------------------
 qa147      | sales     | usa           | list          |              1 |               |                 1 | 'usa'::text         |                     |                         |                   |                       |                      | f                  | SUBPARTITION usa VALUES('usa')
 qa147      | sales     | asia          | list          |              1 |               |                 2 | 'asia'::text        |                     |                         |                   |                       |                      | f                  | SUBPARTITION asia VALUES('asia')
(2 rows)

-- Mix and Match RANGE/LIST . Expect to Error
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
(
SUBPARTITION usa1 VALUES('usa'),
SUBPARTITION usadate start (date '2008-01-01') INCLUSIVE END(date '2009-01-01') EXCLUSIVE);
NOTICE:  replacing level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
ERROR:  invalid boundary specification for LIST partition
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |        partitionboundary         
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+----------------------------------
 qa147      | sales     | usa           | list          |              1 |               |                 1 | 'usa'::text         |                     |                         |                   |                       |                      | f                  | SUBPARTITION usa VALUES('usa')
 qa147      | sales     | asia          | list          |              1 |               |                 2 | 'asia'::text        |                     |                         |                   |                       |                      | f                  | SUBPARTITION asia VALUES('asia')
(2 rows)

-- Mix and Match RANGE/LIST . Expect to Error
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
(
SUBPARTITION usadate start (date '2008-01-01') INCLUSIVE END(date '2009-01-01') EXCLUSIVE,
SUBPARTITION usa1 VALUES('usa'));
NOTICE:  replacing level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
ERROR:  invalid boundary specification for LIST partition
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |        partitionboundary         
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+----------------------------------
 qa147      | sales     | usa           | list          |              1 |               |                 1 | 'usa'::text         |                     |                         |                   |                       |                      | f                  | SUBPARTITION usa VALUES('usa')
 qa147      | sales     | asia          | list          |              1 |               |                 2 | 'asia'::text        |                     |                         |                   |                       |                      | f                  | SUBPARTITION asia VALUES('asia')
(2 rows)

DROP SCHEMA qa147 cascade;
NOTICE:  drop cascades to table qa147.sales
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault | partitionboundary 
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+-------------------
(0 rows)

CREATE SCHEMA qa147;
CREATE TABLE qa147.sales (trans_id int, date date, amount
decimal(9,2), region text)
DISTRIBUTED BY (trans_id)
PARTITION BY LIST (region)
SUBPARTITION BY RANGE (date)
SUBPARTITION TEMPLATE
( START (date '2008-01-01') INCLUSIVE
   END (date '2009-01-01') EXCLUSIVE
   EVERY (INTERVAL '1 month') )
(
  PARTITION usa VALUES ('usa'),
  PARTITION asia VALUES ('asia'),
  PARTITION europe VALUES ('europe') );
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_1" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_2" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_3" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_4" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_5" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_6" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_7" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_8" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_9" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_10" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_11" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_usa_2_prt_12" for table "sales_1_prt_usa"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_1" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_2" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_3" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_4" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_5" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_6" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_7" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_8" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_9" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_10" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_11" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_asia_2_prt_12" for table "sales_1_prt_asia"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_1" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_2" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_3" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_4" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_5" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_6" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_7" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_8" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_9" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_10" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_11" for table "sales_1_prt_europe"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_europe_2_prt_12" for table "sales_1_prt_europe"
-- Clear TEMPLATE
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE ();
NOTICE:  dropped level 1 subpartition template specification for relation "sales"
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault | partitionboundary 
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+-------------------
(0 rows)

-- This will overwrite previous subpartition template
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usam1 start (date '2008-01-01') INCLUSIVE END (date '2008-02-01') EXCLUSIVE );
NOTICE:  adding level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1" for table "sales_1_prt_subpartition_template"
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                           partitionboundary                            
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+------------------------------------------------------------------------
 qa147      | sales     | usam1         | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     |                      | f                  | SUBPARTITION usam1 START ('01-01-2008'::date) END ('02-01-2008'::date)
(1 row)

ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usam1 start (date '2008-01-01') INCLUSIVE END (date '2009-01-01') EXCLUSIVE EVERY (INTERVAL '1 month') );
NOTICE:  replacing level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_1" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_2" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_3" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_4" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_5" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_6" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_7" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_8" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_9" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_10" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_11" for table "sales_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template_2_prt_usam1_12" for table "sales_1_prt_subpartition_template"
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                                           partitionboundary                                           
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+-------------------------------------------------------------------------------------------------------
 qa147      | sales     | usam1_1       | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_1 START ('01-01-2008'::date) END ('02-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_2       | range         |              1 |             2 |                 2 |                     | '02-01-2008'::date  | t                       | '03-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_2 START ('02-01-2008'::date) END ('03-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_3       | range         |              1 |             3 |                 3 |                     | '03-01-2008'::date  | t                       | '04-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_3 START ('03-01-2008'::date) END ('04-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_4       | range         |              1 |             4 |                 4 |                     | '04-01-2008'::date  | t                       | '05-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_4 START ('04-01-2008'::date) END ('05-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_5       | range         |              1 |             5 |                 5 |                     | '05-01-2008'::date  | t                       | '06-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_5 START ('05-01-2008'::date) END ('06-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_6       | range         |              1 |             6 |                 6 |                     | '06-01-2008'::date  | t                       | '07-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_6 START ('06-01-2008'::date) END ('07-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_7       | range         |              1 |             7 |                 7 |                     | '07-01-2008'::date  | t                       | '08-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_7 START ('07-01-2008'::date) END ('08-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_8       | range         |              1 |             8 |                 8 |                     | '08-01-2008'::date  | t                       | '09-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_8 START ('08-01-2008'::date) END ('09-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_9       | range         |              1 |             9 |                 9 |                     | '09-01-2008'::date  | t                       | '10-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_9 START ('09-01-2008'::date) END ('10-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_10      | range         |              1 |            10 |                10 |                     | '10-01-2008'::date  | t                       | '11-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_10 START ('10-01-2008'::date) END ('11-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_11      | range         |              1 |            11 |                11 |                     | '11-01-2008'::date  | t                       | '12-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_11 START ('11-01-2008'::date) END ('12-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_12      | range         |              1 |            12 |                12 |                     | '12-01-2008'::date  | t                       | '01-01-2009'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_12 START ('12-01-2008'::date) END ('01-01-2009'::date) EVERY ('@ 1 mon'::interval)
(12 rows)

-- Invalid subpartition template
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
( SUBPARTITION usa VALUES ('usa'), SUBPARTITION asia VALUES ('asia') );
NOTICE:  replacing level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
ERROR:  invalid use of LIST boundary specification in partition "usa" of type RANGE (at depth 2)
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                                           partitionboundary                                           
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+-------------------------------------------------------------------------------------------------------
 qa147      | sales     | usam1_1       | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_1 START ('01-01-2008'::date) END ('02-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_2       | range         |              1 |             2 |                 2 |                     | '02-01-2008'::date  | t                       | '03-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_2 START ('02-01-2008'::date) END ('03-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_3       | range         |              1 |             3 |                 3 |                     | '03-01-2008'::date  | t                       | '04-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_3 START ('03-01-2008'::date) END ('04-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_4       | range         |              1 |             4 |                 4 |                     | '04-01-2008'::date  | t                       | '05-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_4 START ('04-01-2008'::date) END ('05-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_5       | range         |              1 |             5 |                 5 |                     | '05-01-2008'::date  | t                       | '06-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_5 START ('05-01-2008'::date) END ('06-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_6       | range         |              1 |             6 |                 6 |                     | '06-01-2008'::date  | t                       | '07-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_6 START ('06-01-2008'::date) END ('07-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_7       | range         |              1 |             7 |                 7 |                     | '07-01-2008'::date  | t                       | '08-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_7 START ('07-01-2008'::date) END ('08-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_8       | range         |              1 |             8 |                 8 |                     | '08-01-2008'::date  | t                       | '09-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_8 START ('08-01-2008'::date) END ('09-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_9       | range         |              1 |             9 |                 9 |                     | '09-01-2008'::date  | t                       | '10-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_9 START ('09-01-2008'::date) END ('10-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_10      | range         |              1 |            10 |                10 |                     | '10-01-2008'::date  | t                       | '11-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_10 START ('10-01-2008'::date) END ('11-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_11      | range         |              1 |            11 |                11 |                     | '11-01-2008'::date  | t                       | '12-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_11 START ('11-01-2008'::date) END ('12-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_12      | range         |              1 |            12 |                12 |                     | '12-01-2008'::date  | t                       | '01-01-2009'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_12 START ('12-01-2008'::date) END ('01-01-2009'::date) EVERY ('@ 1 mon'::interval)
(12 rows)

-- Mix and Match RANGE/LIST . Expect to Error
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
(
SUBPARTITION usa1 VALUES('usa'),
SUBPARTITION usadate start (date '2008-01-01') INCLUSIVE END(date '2009-01-01') EXCLUSIVE);
NOTICE:  replacing level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
ERROR:  invalid use of LIST boundary specification in partition "usa1" of type RANGE (at depth 2)
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                                           partitionboundary                                           
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+-------------------------------------------------------------------------------------------------------
 qa147      | sales     | usam1_1       | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_1 START ('01-01-2008'::date) END ('02-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_2       | range         |              1 |             2 |                 2 |                     | '02-01-2008'::date  | t                       | '03-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_2 START ('02-01-2008'::date) END ('03-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_3       | range         |              1 |             3 |                 3 |                     | '03-01-2008'::date  | t                       | '04-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_3 START ('03-01-2008'::date) END ('04-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_4       | range         |              1 |             4 |                 4 |                     | '04-01-2008'::date  | t                       | '05-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_4 START ('04-01-2008'::date) END ('05-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_5       | range         |              1 |             5 |                 5 |                     | '05-01-2008'::date  | t                       | '06-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_5 START ('05-01-2008'::date) END ('06-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_6       | range         |              1 |             6 |                 6 |                     | '06-01-2008'::date  | t                       | '07-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_6 START ('06-01-2008'::date) END ('07-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_7       | range         |              1 |             7 |                 7 |                     | '07-01-2008'::date  | t                       | '08-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_7 START ('07-01-2008'::date) END ('08-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_8       | range         |              1 |             8 |                 8 |                     | '08-01-2008'::date  | t                       | '09-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_8 START ('08-01-2008'::date) END ('09-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_9       | range         |              1 |             9 |                 9 |                     | '09-01-2008'::date  | t                       | '10-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_9 START ('09-01-2008'::date) END ('10-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_10      | range         |              1 |            10 |                10 |                     | '10-01-2008'::date  | t                       | '11-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_10 START ('10-01-2008'::date) END ('11-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_11      | range         |              1 |            11 |                11 |                     | '11-01-2008'::date  | t                       | '12-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_11 START ('11-01-2008'::date) END ('12-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_12      | range         |              1 |            12 |                12 |                     | '12-01-2008'::date  | t                       | '01-01-2009'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_12 START ('12-01-2008'::date) END ('01-01-2009'::date) EVERY ('@ 1 mon'::interval)
(12 rows)

-- Mix and Match RANGE/LIST . Expect to Error
ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
(
SUBPARTITION usadate start (date '2008-01-01') INCLUSIVE END(date '2009-01-01') EXCLUSIVE,
SUBPARTITION usa1 VALUES('usa'));
NOTICE:  replacing level 1 subpartition template specification for relation "sales"
NOTICE:  CREATE TABLE will create partition "sales_1_prt_subpartition_template" for table "sales"
ERROR:  invalid use of LIST boundary specification in partition "usa1" of type RANGE (at depth 2)
LINE 1: ALTER TABLE qa147.sales SET SUBPARTITION TEMPLATE
                     ^
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend  | partitionendinclusive | partitioneveryclause | partitionisdefault |                                           partitionboundary                                           
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+--------------------+-----------------------+----------------------+--------------------+-------------------------------------------------------------------------------------------------------
 qa147      | sales     | usam1_1       | range         |              1 |             1 |                 1 |                     | '01-01-2008'::date  | t                       | '02-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_1 START ('01-01-2008'::date) END ('02-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_2       | range         |              1 |             2 |                 2 |                     | '02-01-2008'::date  | t                       | '03-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_2 START ('02-01-2008'::date) END ('03-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_3       | range         |              1 |             3 |                 3 |                     | '03-01-2008'::date  | t                       | '04-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_3 START ('03-01-2008'::date) END ('04-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_4       | range         |              1 |             4 |                 4 |                     | '04-01-2008'::date  | t                       | '05-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_4 START ('04-01-2008'::date) END ('05-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_5       | range         |              1 |             5 |                 5 |                     | '05-01-2008'::date  | t                       | '06-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_5 START ('05-01-2008'::date) END ('06-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_6       | range         |              1 |             6 |                 6 |                     | '06-01-2008'::date  | t                       | '07-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_6 START ('06-01-2008'::date) END ('07-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_7       | range         |              1 |             7 |                 7 |                     | '07-01-2008'::date  | t                       | '08-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_7 START ('07-01-2008'::date) END ('08-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_8       | range         |              1 |             8 |                 8 |                     | '08-01-2008'::date  | t                       | '09-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_8 START ('08-01-2008'::date) END ('09-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_9       | range         |              1 |             9 |                 9 |                     | '09-01-2008'::date  | t                       | '10-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_9 START ('09-01-2008'::date) END ('10-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_10      | range         |              1 |            10 |                10 |                     | '10-01-2008'::date  | t                       | '11-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_10 START ('10-01-2008'::date) END ('11-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_11      | range         |              1 |            11 |                11 |                     | '11-01-2008'::date  | t                       | '12-01-2008'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_11 START ('11-01-2008'::date) END ('12-01-2008'::date) EVERY ('@ 1 mon'::interval)
 qa147      | sales     | usam1_12      | range         |              1 |            12 |                12 |                     | '12-01-2008'::date  | t                       | '01-01-2009'::date | f                     | '@ 1 mon'::interval  | f                  | SUBPARTITION usam1_12 START ('12-01-2008'::date) END ('01-01-2009'::date) EVERY ('@ 1 mon'::interval)
(12 rows)

drop schema qa147 cascade;
NOTICE:  drop cascades to table qa147.sales
select * from pg_partition_templates where schemaname='qa147' and tablename='sales';
 schemaname | tablename | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault | partitionboundary 
------------+-----------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+-------------------
(0 rows)

set gp_autostats_mode=on_change;
set gp_autostats_on_change_threshold=100;
create table mpp5427 (i int) partition by range (i) (start(1) end(10000000) every(100000));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_1" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_2" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_3" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_4" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_5" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_6" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_7" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_8" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_9" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_10" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_11" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_12" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_13" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_14" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_15" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_16" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_17" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_18" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_19" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_20" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_21" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_22" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_23" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_24" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_25" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_26" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_27" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_28" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_29" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_30" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_31" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_32" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_33" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_34" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_35" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_36" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_37" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_38" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_39" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_40" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_41" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_42" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_43" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_44" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_45" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_46" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_47" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_48" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_49" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_50" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_51" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_52" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_53" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_54" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_55" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_56" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_57" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_58" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_59" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_60" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_61" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_62" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_63" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_64" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_65" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_66" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_67" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_68" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_69" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_70" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_71" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_72" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_73" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_74" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_75" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_76" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_77" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_78" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_79" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_80" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_81" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_82" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_83" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_84" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_85" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_86" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_87" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_88" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_89" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_90" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_91" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_92" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_93" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_94" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_95" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_96" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_97" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_98" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_99" for table "mpp5427"
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_100" for table "mpp5427"
insert into mpp5427 select i from generate_series(1, 100) i;
select * from pg_stats where tablename like 'mpp5427%';
 schemaname | tablename | attname | inherited | null_frac | avg_width | n_distinct | most_common_vals | most_common_freqs | histogram_bounds | correlation | most_common_elems | most_common_elem_freqs | elem_count_histogram 
------------+-----------+---------+-----------+-----------+-----------+------------+------------------+-------------------+------------------+-------------+-------------------+------------------------+----------------------
(0 rows)

insert into mpp5427 select i from generate_series(1, 100000) i;
select * from pg_stats where tablename like 'mpp5427%';
 schemaname | tablename | attname | inherited | null_frac | avg_width | n_distinct | most_common_vals | most_common_freqs | histogram_bounds | correlation | most_common_elems | most_common_elem_freqs | elem_count_histogram 
------------+-----------+---------+-----------+-----------+-----------+------------+------------------+-------------------+------------------+-------------+-------------------+------------------------+----------------------
(0 rows)

insert into mpp5427 select i from generate_series(1, 1000000) i;
select * from pg_stats where tablename like 'mpp5427%';
 schemaname | tablename | attname | inherited | null_frac | avg_width | n_distinct | most_common_vals | most_common_freqs | histogram_bounds | correlation | most_common_elems | most_common_elem_freqs | elem_count_histogram 
------------+-----------+---------+-----------+-----------+-----------+------------+------------------+-------------------+------------------+-------------+-------------------+------------------------+----------------------
(0 rows)

truncate table mpp5427;
alter table mpp5427 add default partition default_part;
NOTICE:  CREATE TABLE will create partition "mpp5427_1_prt_default_part" for table "mpp5427"
insert into mpp5427 select i from generate_series(1, 100) i;
select * from pg_stats where tablename like 'mpp5427%';
 schemaname | tablename | attname | inherited | null_frac | avg_width | n_distinct | most_common_vals | most_common_freqs | histogram_bounds | correlation | most_common_elems | most_common_elem_freqs | elem_count_histogram 
------------+-----------+---------+-----------+-----------+-----------+------------+------------------+-------------------+------------------+-------------+-------------------+------------------------+----------------------
(0 rows)

insert into mpp5427 select i from generate_series(1, 100000) i;
select * from pg_stats where tablename like 'mpp5427%';
 schemaname | tablename | attname | inherited | null_frac | avg_width | n_distinct | most_common_vals | most_common_freqs | histogram_bounds | correlation | most_common_elems | most_common_elem_freqs | elem_count_histogram 
------------+-----------+---------+-----------+-----------+-----------+------------+------------------+-------------------+------------------+-------------+-------------------+------------------------+----------------------
(0 rows)

insert into mpp5427 select i from generate_series(1, 1000000) i;
select * from pg_stats where tablename like 'mpp5427%';
 schemaname | tablename | attname | inherited | null_frac | avg_width | n_distinct | most_common_vals | most_common_freqs | histogram_bounds | correlation | most_common_elems | most_common_elem_freqs | elem_count_histogram 
------------+-----------+---------+-----------+-----------+-----------+------------+------------------+-------------------+------------------+-------------+-------------------+------------------------+----------------------
(0 rows)

insert into mpp5427 select i from generate_series(10000000, 15000000) i;
select * from pg_stats where tablename like 'mpp5427%';
 schemaname | tablename | attname | inherited | null_frac | avg_width | n_distinct | most_common_vals | most_common_freqs | histogram_bounds | correlation | most_common_elems | most_common_elem_freqs | elem_count_histogram 
------------+-----------+---------+-----------+-----------+-----------+------------+------------------+-------------------+------------------+-------------+-------------------+------------------------+----------------------
(0 rows)

drop table mpp5427;
-- MPP-5524
create table mpp5524 (a int, b int, c int, d int) partition by range(d) (start(1) end(20) every(5));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp5524_1_prt_1" for table "mpp5524"
NOTICE:  CREATE TABLE will create partition "mpp5524_1_prt_2" for table "mpp5524"
NOTICE:  CREATE TABLE will create partition "mpp5524_1_prt_3" for table "mpp5524"
NOTICE:  CREATE TABLE will create partition "mpp5524_1_prt_4" for table "mpp5524"
-- Not allowed
alter table mpp5524 alter partition for(rank(1)) set distributed by (b);
ERROR:  cannot ALTER PARTITION ... SET DISTRIBUTED BY for partition for rank 1 of relation "mpp5524"
HINT:  distribution policy of partition must match parent
-- Not allowed
alter table mpp5524 alter partition for(rank(2)) set distributed by (c);
ERROR:  cannot ALTER PARTITION ... SET DISTRIBUTED BY for partition for rank 2 of relation "mpp5524"
HINT:  distribution policy of partition must match parent
insert into mpp5524 select i, i+1, i+2, i+3 from generate_series(1, 10) i;
drop table mpp5524;
CREATE TABLE fff_main (id int, rank int, year int, gender char(1), count int)
 partition by range (year) ( start (2001) end (2006) every ('1'));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "fff_main_1_prt_1" for table "fff_main"
NOTICE:  CREATE TABLE will create partition "fff_main_1_prt_2" for table "fff_main"
NOTICE:  CREATE TABLE will create partition "fff_main_1_prt_3" for table "fff_main"
NOTICE:  CREATE TABLE will create partition "fff_main_1_prt_4" for table "fff_main"
NOTICE:  CREATE TABLE will create partition "fff_main_1_prt_5" for table "fff_main"
alter table fff_main_1_prt_1 drop oids;
ERROR:  can't drop a column from "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
alter table fff_main_1_prt_1 no inherit fff_main;
ERROR:  can't alter inheritance on "fff_main_1_prt_1"; it is a partitioned table or part thereof
alter table fff_main_1_prt_1 drop column rank;
ERROR:  can't drop a column from "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
alter table fff_main_1_prt_1 add partition;
ERROR:  can't alter "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
alter table fff_main_1_prt_1 drop partition;
ERROR:  can't alter "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
alter table fff_main_1_prt_1 add column c int;
ERROR:  can't add a column to "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
create table fff_main2 (like fff_main);
NOTICE:  table doesn't have 'DISTRIBUTED BY' clause, defaulting to distribution columns from LIKE table
alter table fff_main_1_prt_1 inherit fff_main2;
ERROR:  can't alter inheritance on "fff_main_1_prt_1"; it is a partitioned table or part thereof
alter table fff_main_1_prt_1 alter column i type bigint;
ERROR:  can't alter a column datatype of "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
alter table fff_main_1_prt_1 set without oids;
ERROR:  can't alter the oid setting of "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
alter table fff_main_1_prt_1 drop constraint fff_main_1_prt_1_check;
ERROR:  can't drop a constraint from "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
-- Add default partition
alter table fff_main_1_prt_1 split partition def at ('2009');
ERROR:  can't split parts of "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
alter table fff_main add default partition def;
NOTICE:  CREATE TABLE will create partition "fff_main_1_prt_def" for table "fff_main"
alter table fff_main_1_prt_1 split partition def at ('2009');
ERROR:  can't split parts of "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
-- Unable to coalesce or merge, not supported
alter table fff_main_1_prt_1 exchange partition aa  with table fff_main_1_prt_2 without validation;
ERROR:  can't exchange a part into "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
alter table fff_main add partition aa start ('2008') end ('2009');
ERROR:  cannot add RANGE partition "aa" to relation "fff_main" with DEFAULT partition "def"
HINT:  need to SPLIT partition "def"
alter table fff_main add partition bb start ('2009') end ('2010');
ERROR:  cannot add RANGE partition "bb" to relation "fff_main" with DEFAULT partition "def"
HINT:  need to SPLIT partition "def"
alter table fff_main_1_prt_1 add partition cc start ('2010') end ('2011');
ERROR:  can't alter "fff_main_1_prt_1"; it is part of a partitioned table
HINT:  You may be able to perform the operation on the partitioned table as a whole.
drop table fff_main, fff_main2;
CREATE TABLE partsupp_def ( ps_partkey int,
ps_suppkey integer, ps_availqty integer,
ps_supplycost numeric, ps_comment character varying(199) )
PARTITION BY RANGE(ps_partkey)
subpartition by range (ps_partkey)
subpartition template
( subpartition sp1 start(0) end (300) every(100),
  default subpartition subdef
)
( partition aa start (0) end (300) every(100),
  default partition def
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'ps_partkey' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_def" for table "partsupp_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_def_2_prt_subdef" for table "partsupp_def_1_prt_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_def_2_prt_sp1_1" for table "partsupp_def_1_prt_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_def_2_prt_sp1_2" for table "partsupp_def_1_prt_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_def_2_prt_sp1_3" for table "partsupp_def_1_prt_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_1" for table "partsupp_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_1_2_prt_subdef" for table "partsupp_def_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_1_2_prt_sp1_1" for table "partsupp_def_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_1_2_prt_sp1_2" for table "partsupp_def_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_1_2_prt_sp1_3" for table "partsupp_def_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_2" for table "partsupp_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_2_2_prt_subdef" for table "partsupp_def_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_2_2_prt_sp1_1" for table "partsupp_def_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_2_2_prt_sp1_2" for table "partsupp_def_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_2_2_prt_sp1_3" for table "partsupp_def_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_3" for table "partsupp_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_3_2_prt_subdef" for table "partsupp_def_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_3_2_prt_sp1_1" for table "partsupp_def_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_3_2_prt_sp1_2" for table "partsupp_def_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_aa_3_2_prt_sp1_3" for table "partsupp_def_1_prt_aa_3"
alter table partsupp_def set subpartition template();
NOTICE:  dropped level 1 subpartition template specification for relation "partsupp_def"
alter table partsupp_def set subpartition template( subpartition aaa start(400) end (600) every(100) );
NOTICE:  adding level 1 subpartition template specification for relation "partsupp_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_subpartition_template" for table "partsupp_def"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_subpartition_template_2_prt_aaa_1" for table "partsupp_def_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "partsupp_def_1_prt_subpartition_template_2_prt_aaa_2" for table "partsupp_def_1_prt_subpartition_template"
-- Note 1: We cannot add subpartition template since we have a default partition
-- If we want to use the new subpartition template, we have to drop the default partition first, and then readd the default partition
-- Note 2: We do not support this function yet, but if we are able to split default partition with default subpartition, would we
-- be using the subpartition template to definte the "new" partition or the existing one.
select * from pg_partition_templates where tablename='partsupp_def';
  schemaname   |  tablename   | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |                  partitionboundary                   
---------------+--------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+------------------------------------------------------
 bfv_partition | partsupp_def | aaa_1         | range         |              1 |             1 |                 1 |                     | 400                 | t                       | 500               | f                     | 100                  | f                  | SUBPARTITION aaa_1 START (400) END (500) EVERY (100)
 bfv_partition | partsupp_def | aaa_2         | range         |              1 |             2 |                 2 |                     | 500                 | t                       | 600               | f                     | 100                  | f                  | SUBPARTITION aaa_2 START (500) END (600) EVERY (100)
(2 rows)

alter table partsup_def add partition f1 start(0) end (300) every(100);
ERROR:  relation "partsup_def" does not exist
-- This works adding subpartition template with parent default partition
CREATE TABLE partsupp_def2 ( ps_partkey int,
ps_suppkey integer, ps_availqty integer,
ps_supplycost numeric, ps_comment character varying(199) )
PARTITION BY RANGE(ps_partkey)
subpartition by range (ps_partkey)
subpartition template
( subpartition sp1 start(0) end (300) every(100),
  default subpartition subdef
)
( partition aa start (0) end (300) every(100)
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'ps_partkey' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_1" for table "partsupp_def2"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_1_2_prt_subdef" for table "partsupp_def2_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_1_2_prt_sp1_1" for table "partsupp_def2_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_1_2_prt_sp1_2" for table "partsupp_def2_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_1_2_prt_sp1_3" for table "partsupp_def2_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_2" for table "partsupp_def2"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_2_2_prt_subdef" for table "partsupp_def2_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_2_2_prt_sp1_1" for table "partsupp_def2_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_2_2_prt_sp1_2" for table "partsupp_def2_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_2_2_prt_sp1_3" for table "partsupp_def2_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_3" for table "partsupp_def2"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_3_2_prt_subdef" for table "partsupp_def2_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_3_2_prt_sp1_1" for table "partsupp_def2_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_3_2_prt_sp1_2" for table "partsupp_def2_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_aa_3_2_prt_sp1_3" for table "partsupp_def2_1_prt_aa_3"
alter table partsupp_def2 set subpartition template();
NOTICE:  dropped level 1 subpartition template specification for relation "partsupp_def2"
alter table partsupp_def2 set subpartition template( subpartition aaa start(400) end (600) every(100) );
NOTICE:  adding level 1 subpartition template specification for relation "partsupp_def2"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_subpartition_template" for table "partsupp_def2"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_subpartition_template_2_prt_aaa_1" for table "partsupp_def2_1_prt_subpartition_template"
NOTICE:  CREATE TABLE will create partition "partsupp_def2_1_prt_subpartition_template_2_prt_aaa_2" for table "partsupp_def2_1_prt_subpartition_template"
select * from pg_partition_templates where tablename='partsupp_def2';
  schemaname   |   tablename   | partitionname | partitiontype | partitionlevel | partitionrank | partitionposition | partitionlistvalues | partitionrangestart | partitionstartinclusive | partitionrangeend | partitionendinclusive | partitioneveryclause | partitionisdefault |                  partitionboundary                   
---------------+---------------+---------------+---------------+----------------+---------------+-------------------+---------------------+---------------------+-------------------------+-------------------+-----------------------+----------------------+--------------------+------------------------------------------------------
 bfv_partition | partsupp_def2 | aaa_1         | range         |              1 |             1 |                 1 |                     | 400                 | t                       | 500               | f                     | 100                  | f                  | SUBPARTITION aaa_1 START (400) END (500) EVERY (100)
 bfv_partition | partsupp_def2 | aaa_2         | range         |              1 |             2 |                 2 |                     | 500                 | t                       | 600               | f                     | 100                  | f                  | SUBPARTITION aaa_2 START (500) END (600) EVERY (100)
(2 rows)

drop table partsupp_def;
drop table partsupp_def2;
create table mpp5431 (c1 date, c2 int) distributed by (c2) partition by range (c1) (partition p20090401 start('2009-04-01 00:00:00'::timestamp) inclusive end ('2009-04-02 00:00:00'::timestamp) exclusive);
NOTICE:  CREATE TABLE will create partition "mpp5431_1_prt_p20090401" for table "mpp5431"
alter table mpp5431 add partition p20090402 start('2009-04-02 00:00:00'::timestamp) inclusive end ('2009-04-03 00:00:00'::timestamp) exclusive;
NOTICE:  CREATE TABLE will create partition "mpp5431_1_prt_p20090402" for table "mpp5431"
create or replace function mpp5431_f1 () returns void as $$
begin
alter table mpp5431 add partition p20090403 start('2009-04-03 00:00:00'::timestamp) inclusive end ('2009-04-04 00:00:00'::timestamp) exclusive;
end;
$$ LANGUAGE 'plpgsql';
select mpp5431_f1();
NOTICE:  CREATE TABLE will create partition "mpp5431_1_prt_p20090403" for table "mpp5431"
CONTEXT:  SQL statement "alter table mpp5431 add partition p20090403 start('2009-04-03 00:00:00'::timestamp) inclusive end ('2009-04-04 00:00:00'::timestamp) exclusive"
PL/pgSQL function mpp5431_f1() line 3 at SQL statement
 mpp5431_f1 
------------
 
(1 row)

drop function mpp5431_f1();
drop table mpp5431;
CREATE TABLE mpp6612 (
        unique1         int4,
        unique2         int4,
        two                     int4,
        four            int4,
        ten                     int4,
        twenty          int4,
        hundred         int4,
        thousand        int4,
        twothousand     int4,
        fivethous       int4,
        tenthous        int4,
        odd                     int4,
        even            int4,
        stringu1        name,
        stringu2        name,
        string4         name
) partition by range (unique1)
( partition aa start (0) end (1000) every (500), default partition default_part );
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'unique1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp6612_1_prt_default_part" for table "mpp6612"
NOTICE:  CREATE TABLE will create partition "mpp6612_1_prt_aa_1" for table "mpp6612"
NOTICE:  CREATE TABLE will create partition "mpp6612_1_prt_aa_2" for table "mpp6612"
-- Modify any other column
alter table mpp6612 alter column unique2 type char(15);
alter table mpp6612 alter column unique2 type char(10);
-- Show the dsecription
\d mpp6612*
      Table "bfv_partition.mpp6612"
   Column    |     Type      | Modifiers 
-------------+---------------+-----------
 unique1     | integer       | 
 unique2     | character(10) | 
 two         | integer       | 
 four        | integer       | 
 ten         | integer       | 
 twenty      | integer       | 
 hundred     | integer       | 
 thousand    | integer       | 
 twothousand | integer       | 
 fivethous   | integer       | 
 tenthous    | integer       | 
 odd         | integer       | 
 even        | integer       | 
 stringu1    | name          | 
 stringu2    | name          | 
 string4     | name          | 
Number of child tables: 3 (Use \d+ to list them.)
Distributed by: (unique1)
Partition by: (unique1)

Table "bfv_partition.mpp6612_1_prt_aa_1"
   Column    |     Type      | Modifiers 
-------------+---------------+-----------
 unique1     | integer       | 
 unique2     | character(10) | 
 two         | integer       | 
 four        | integer       | 
 ten         | integer       | 
 twenty      | integer       | 
 hundred     | integer       | 
 thousand    | integer       | 
 twothousand | integer       | 
 fivethous   | integer       | 
 tenthous    | integer       | 
 odd         | integer       | 
 even        | integer       | 
 stringu1    | name          | 
 stringu2    | name          | 
 string4     | name          | 
Check constraints:
    "mpp6612_1_prt_aa_1_check" CHECK (unique1 >= 0 AND unique1 < 500)
Inherits: mpp6612
Distributed by: (unique1)

Table "bfv_partition.mpp6612_1_prt_aa_2"
   Column    |     Type      | Modifiers 
-------------+---------------+-----------
 unique1     | integer       | 
 unique2     | character(10) | 
 two         | integer       | 
 four        | integer       | 
 ten         | integer       | 
 twenty      | integer       | 
 hundred     | integer       | 
 thousand    | integer       | 
 twothousand | integer       | 
 fivethous   | integer       | 
 tenthous    | integer       | 
 odd         | integer       | 
 even        | integer       | 
 stringu1    | name          | 
 stringu2    | name          | 
 string4     | name          | 
Check constraints:
    "mpp6612_1_prt_aa_2_check" CHECK (unique1 >= 500 AND unique1 < 1000)
Inherits: mpp6612
Distributed by: (unique1)

Table "bfv_partition.mpp6612_1_prt_default_part"
   Column    |     Type      | Modifiers 
-------------+---------------+-----------
 unique1     | integer       | 
 unique2     | character(10) | 
 two         | integer       | 
 four        | integer       | 
 ten         | integer       | 
 twenty      | integer       | 
 hundred     | integer       | 
 thousand    | integer       | 
 twothousand | integer       | 
 fivethous   | integer       | 
 tenthous    | integer       | 
 odd         | integer       | 
 even        | integer       | 
 stringu1    | name          | 
 stringu2    | name          | 
 string4     | name          | 
Inherits: mpp6612
Distributed by: (unique1)

-- Modify the partition definition. MPP-3724
-- alter table mpp6612 alter column unique1 type char(10); -- This should fail
-- alter table mpp6612 alter column unique1 type int8;
-- Show the dsecription
-- \d mpp6612*
drop table mpp6612;
-- Test that DEC is accepted as partition name.
create table mpp4048 (aaa int, bbb date)
partition by range (bbb)
subpartition by range (bbb)
subpartition by range (bbb)
(
partition y2008 start (date '2008-01-01') end (date '2008-12-05')
(
  subpartition dec start (date '2008-12-01') end (date '2008-12-05') (start (date '2008-12-01') end (date '2008-12-05') every (interval '1 day'))
));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'aaa' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "mpp4048_1_prt_y2008" for table "mpp4048"
NOTICE:  CREATE TABLE will create partition "mpp4048_1_prt_y2008_2_prt_dec" for table "mpp4048_1_prt_y2008"
NOTICE:  CREATE TABLE will create partition "mpp4048_1_prt_y2008_2_prt_dec_3_prt_1" for table "mpp4048_1_prt_y2008_2_prt_dec"
NOTICE:  CREATE TABLE will create partition "mpp4048_1_prt_y2008_2_prt_dec_3_prt_2" for table "mpp4048_1_prt_y2008_2_prt_dec"
NOTICE:  CREATE TABLE will create partition "mpp4048_1_prt_y2008_2_prt_dec_3_prt_3" for table "mpp4048_1_prt_y2008_2_prt_dec"
NOTICE:  CREATE TABLE will create partition "mpp4048_1_prt_y2008_2_prt_dec_3_prt_4" for table "mpp4048_1_prt_y2008_2_prt_dec"
drop table mpp4048;
-- This is only for ADD primary key for partition table
-- DROP primary key is still in progress
-- MPP-6573
CREATE TABLE mpp6573 (id int, date date, amt decimal(10,2)) 
DISTRIBUTED BY (id) 
PARTITION BY RANGE (date) 
( START (date '2008-01-01') INCLUSIVE 
   END (date '2008-01-03') EXCLUSIVE 
   EVERY (INTERVAL '1 day') );
NOTICE:  CREATE TABLE will create partition "mpp6573_1_prt_1" for table "mpp6573"
NOTICE:  CREATE TABLE will create partition "mpp6573_1_prt_2" for table "mpp6573"
alter table mpp6573 add primary key (id, date) ;
\d mpp6573*
   Table "bfv_partition.mpp6573"
 Column |     Type      | Modifiers 
--------+---------------+-----------
 id     | integer       | not null
 date   | date          | not null
 amt    | numeric(10,2) | 
Indexes:
    "mpp6573_pkey" PRIMARY KEY, btree (id, date)
Number of child tables: 2 (Use \d+ to list them.)
Distributed by: (id)
Partition by: (date)

Table "bfv_partition.mpp6573_1_prt_1"
 Column |     Type      | Modifiers 
--------+---------------+-----------
 id     | integer       | not null
 date   | date          | not null
 amt    | numeric(10,2) | 
Indexes:
    "mpp6573_1_prt_1_pkey" PRIMARY KEY, btree (id, date)
Check constraints:
    "mpp6573_1_prt_1_check" CHECK (date >= '01-01-2008'::date AND date < '01-02-2008'::date)
Inherits: mpp6573
Distributed by: (id)

Index "bfv_partition.mpp6573_1_prt_1_pkey"
 Column |  Type   | Definition 
--------+---------+------------
 id     | integer | id
 date   | date    | date
primary key, btree, for table "bfv_partition.mpp6573_1_prt_1"

Table "bfv_partition.mpp6573_1_prt_2"
 Column |     Type      | Modifiers 
--------+---------------+-----------
 id     | integer       | not null
 date   | date          | not null
 amt    | numeric(10,2) | 
Indexes:
    "mpp6573_1_prt_2_pkey" PRIMARY KEY, btree (id, date)
Check constraints:
    "mpp6573_1_prt_2_check" CHECK (date >= '01-02-2008'::date AND date < '01-03-2008'::date)
Inherits: mpp6573
Distributed by: (id)

Index "bfv_partition.mpp6573_1_prt_2_pkey"
 Column |  Type   | Definition 
--------+---------+------------
 id     | integer | id
 date   | date    | date
primary key, btree, for table "bfv_partition.mpp6573_1_prt_2"

Index "bfv_partition.mpp6573_pkey"
 Column |  Type   | Definition 
--------+---------+------------
 id     | integer | id
 date   | date    | date
primary key, btree, for table "bfv_partition.mpp6573"

drop table mpp6573;
-- MPP-6724
-- Dummy select to give atmsort a cluebat that it's not processing a result
-- set right now. It gets confused by some of the errors from above.
select 1 as foobar;
 foobar 
--------
      1
(1 row)

-- start_matchsubs
-- m/mpp6724_1_prt_r\d+/
-- s/(mpp6724_1_prt_r)\d+/$1xxxxxx/g
-- end_matchsubs
create table mpp6724 ( c1 int, dt DATE, c2 varchar, PRIMARY KEY ( c1,dt ) ) distributed by (c1) partition by range ( dt ) ( start ( date '2009-01-01' ) inclusive end ( date '2009-01-03' ) EXCLUSIVE EVERY ( INTERVAL '1 day' ) );
NOTICE:  CREATE TABLE will create partition "mpp6724_1_prt_1" for table "mpp6724"
NOTICE:  CREATE TABLE will create partition "mpp6724_1_prt_2" for table "mpp6724"
insert into mpp6724 values ( 1,'2009-01-01','One'), (2,'2009-01-02','Two'),(3,'2009-01-01','three'), (3,'2009-01-02', 'three`');
insert into mpp6724 values ( 1,'2009-01-01','One'); -- This violate the primary key, expected to fail
ERROR:  duplicate key value violates unique constraint "mpp6724_1_prt_1_pkey"  (seg0 127.0.0.1:40000 pid=32487)
DETAIL:  Key (c1, dt)=(1, 01-01-2009) already exists.
alter table mpp6724 add partition start ( date '2009-01-03' ) inclusive end ( date '2009-01-04' ) ;
NOTICE:  CREATE TABLE will create partition "mpp6724_1_prt_r1600720188" for table "mpp6724"
insert into mpp6724 values ( 4,'2009-01-03','Four');
-- Should fail because violates the primary key
insert into mpp6724 values ( 4,'2009-01-03','Four');
ERROR:  duplicate key value violates unique constraint "mpp6724_1_prt_r1600720188_pkey"  (seg1 127.0.0.1:40001 pid=32489)
DETAIL:  Key (c1, dt)=(4, 01-03-2009) already exists.
insert into mpp6724 values ( 4,'2009-01-03','Four');
ERROR:  duplicate key value violates unique constraint "mpp6724_1_prt_r1600720188_pkey"  (seg1 127.0.0.1:40001 pid=32489)
DETAIL:  Key (c1, dt)=(4, 01-03-2009) already exists.
insert into mpp6724 values ( 4,'2009-01-03','Four');
ERROR:  duplicate key value violates unique constraint "mpp6724_1_prt_r1600720188_pkey"  (seg1 127.0.0.1:40001 pid=32489)
DETAIL:  Key (c1, dt)=(4, 01-03-2009) already exists.
insert into mpp6724 values ( 4,'2009-01-03','Four');
ERROR:  duplicate key value violates unique constraint "mpp6724_1_prt_r1600720188_pkey"  (seg1 127.0.0.1:40001 pid=32489)
DETAIL:  Key (c1, dt)=(4, 01-03-2009) already exists.
select c1, dt, count(*) from mpp6724 group by 1,2 having count(*) > 1;
 c1 | dt | count 
----+----+-------
(0 rows)

drop table mpp6724;
-- Test for partition cleanup
create schema partition_999;
set search_path=bfv_partition,partition_999;
create table partition_cleanup1 (a int, b int, c int, d int, e int, f int, g int, h int, i int, j int, k int, l int, m int, n int, o int, p int, q int, r int, s int, t int, u int, v int, w int, x int, y int, z int)
partition by range (a)
( partition aa start (1) end (5) every (1) );
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "partition_cleanup1_1_prt_aa_1" for table "partition_cleanup1"
NOTICE:  CREATE TABLE will create partition "partition_cleanup1_1_prt_aa_2" for table "partition_cleanup1"
NOTICE:  CREATE TABLE will create partition "partition_cleanup1_1_prt_aa_3" for table "partition_cleanup1"
NOTICE:  CREATE TABLE will create partition "partition_cleanup1_1_prt_aa_4" for table "partition_cleanup1"
CREATE TABLE partition_999.partition_cleanup2(a int, b int, c int, d int, e int, f int, g int, h int, i int, j int, k int, l int, m int, n int, o int, p int, q int, r int, s int, t int, u int, v int, w int, x int, y int, z int)
partition by range (a)
subpartition by range (b) subpartition template ( start (1) end (5) every (1))
( partition aa start (1) end (5) every (1) );
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_1" for table "partition_cleanup2"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_1_2_prt_1" for table "partition_cleanup2_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_1_2_prt_2" for table "partition_cleanup2_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_1_2_prt_3" for table "partition_cleanup2_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_1_2_prt_4" for table "partition_cleanup2_1_prt_aa_1"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_2" for table "partition_cleanup2"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_2_2_prt_1" for table "partition_cleanup2_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_2_2_prt_2" for table "partition_cleanup2_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_2_2_prt_3" for table "partition_cleanup2_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_2_2_prt_4" for table "partition_cleanup2_1_prt_aa_2"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_3" for table "partition_cleanup2"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_3_2_prt_1" for table "partition_cleanup2_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_3_2_prt_2" for table "partition_cleanup2_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_3_2_prt_3" for table "partition_cleanup2_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_3_2_prt_4" for table "partition_cleanup2_1_prt_aa_3"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_4" for table "partition_cleanup2"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_4_2_prt_1" for table "partition_cleanup2_1_prt_aa_4"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_4_2_prt_2" for table "partition_cleanup2_1_prt_aa_4"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_4_2_prt_3" for table "partition_cleanup2_1_prt_aa_4"
NOTICE:  CREATE TABLE will create partition "partition_cleanup2_1_prt_aa_4_2_prt_4" for table "partition_cleanup2_1_prt_aa_4"
drop table partition_cleanup1;
drop schema partition_999 cascade;
NOTICE:  drop cascades to table partition_cleanup2
-- These should be empty
select 'pg_partition_columns', count(*) from pg_partition_columns where tablename='partition_cleanup%';
       ?column?       | count 
----------------------+-------
 pg_partition_columns |     0
(1 row)

select 'pg_partitions', count(*) from pg_partitions where tablename='partition_cleanup%';
   ?column?    | count 
---------------+-------
 pg_partitions |     0
(1 row)

select 'pg_partition_templates', count(*) from pg_partition_templates where tablename='partition_cleanup%';
        ?column?        | count 
------------------------+-------
 pg_partition_templates |     0
(1 row)

--
-- Check that dependencies to users are recorded correctly when operating on partitions.
--
DROP ROLE IF EXISTS part_acl_owner;
CREATE ROLE part_acl_owner;
DROP ROLE IF EXISTS part_acl_u1;
CREATE ROLE part_acl_u1;
GRANT ALL ON SCHEMA bfv_partition to part_acl_owner;
SET ROLE part_acl_owner;
CREATE TABLE part_acl_test (id int4) PARTITION BY LIST (id) (PARTITION p1 VALUES (1));
GRANT SELECT ON part_acl_test TO part_acl_u1;
ALTER TABLE part_acl_test ADD PARTITION p2 VALUES (2);
-- View permissions
\dp part_acl_*
                                                 Access privileges
    Schema     |          Name          | Type  |           Access privileges           | Column access privileges 
---------------+------------------------+-------+---------------------------------------+--------------------------
 bfv_partition | part_acl_test          | table | part_acl_owner=arwdDxt/part_acl_owner+| 
               |                        |       | part_acl_u1=r/part_acl_owner          | 
 bfv_partition | part_acl_test_1_prt_p1 | table | part_acl_owner=arwdDxt/part_acl_owner+| 
               |                        |       | part_acl_u1=r/part_acl_owner          | 
 bfv_partition | part_acl_test_1_prt_p2 | table | part_acl_owner=arwdDxt/part_acl_owner+| 
               |                        |       | part_acl_u1=r/part_acl_owner          | 
(3 rows)

-- View dependencies
select classid::regclass, objid::regclass,
       refclassid::regclass, rolname
from pg_shdepend
inner join pg_database on pg_database.oid = pg_shdepend.dbid
left join pg_roles on pg_roles.oid = pg_shdepend.refobjid
where classid = 'pg_class'::regclass and objid::regclass::text like 'part_acl_test%'
and datname = current_database();
 classid  |         objid          | refclassid |    rolname     
----------+------------------------+------------+----------------
 pg_class | part_acl_test          | pg_authid  | part_acl_owner
 pg_class | part_acl_test_1_prt_p1 | pg_authid  | part_acl_owner
 pg_class | part_acl_test_1_prt_p1 | pg_authid  | part_acl_u1
 pg_class | part_acl_test          | pg_authid  | part_acl_u1
 pg_class | part_acl_test_1_prt_p2 | pg_authid  | part_acl_owner
 pg_class | part_acl_test_1_prt_p2 | pg_authid  | part_acl_u1
(6 rows)

-- CLEANUP
-- start_ignore
drop schema if exists bfv_partition cascade;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to function count_operator(text,text)
drop cascades to function find_operator(text,text)
DROP USER mpp3641_user;
DROP ROLE part_acl_owner;
DROP ROLE part_acl_u1;
-- end_ignore
