-- Test locking behaviour. When creating, dropping, querying or adding indexes
-- partitioned tables, we want to lock only the master, not the children.
-- Show locks in master and in segments. Because the number of segments
-- in the cluster depends on configuration, we print only summary information
-- of the locks in segments. If a relation is locked only on one segment,
-- we print that as a special case, but otherwise we just print "n segments",
-- meaning the relation is locked on more than one segment.
create or replace view locktest_master as
select coalesce(
  case when relname like 'pg_toast%index' then 'toast index'
       when relname like 'pg_toast%' then 'toast table'
       when relname like 'pg_aoseg%' then 'aoseg table'
       when relname like 'pg_aovisimap%index' then 'aovisimap index'
       when relname like 'pg_aovisimap%' then 'aovisimap table'
       else relname end, 'dropped table'),
  mode,
  locktype,
  'master'::text as node
from pg_locks l
left outer join pg_class c on ((l.locktype = 'append-only segment file' and l.relation = c.relfilenode) or (l.locktype != 'append-only segment file' and l.relation = c.oid)),
pg_database d
where relation is not null
and l.database = d.oid
and (relname <> 'gp_fault_strategy' and relname != 'locktest_master' or relname is NULL)
and d.datname = current_database()
and l.gp_segment_id = -1
group by l.gp_segment_id, relation, relname, locktype, mode
order by 1, 3, 2;
create or replace view locktest_segments_dist as
select relname,
  mode,
  locktype,
  l.gp_segment_id as node,
  relation
from pg_locks l
left outer join pg_class c on ((l.locktype = 'append-only segment file' and l.relation = c.relfilenode) or (l.locktype != 'append-only segment file' and l.relation = c.oid)),
pg_database d
where relation is not null
and l.database = d.oid
and (relname <> 'gp_fault_strategy' and relname != 'locktest_segments_dist' or relname is NULL)
and d.datname = current_database()
and l.gp_segment_id > -1
group by l.gp_segment_id, relation, relname, locktype, mode;
create or replace view locktest_segments as
SELECT coalesce(
  case when relname like 'pg_toast%index' then 'toast index'
       when relname like 'pg_toast%' then 'toast table'
       when relname like 'pg_aoseg%' then 'aoseg table'
       when relname like 'pg_aovisimap%index' then 'aovisimap index'
       when relname like 'pg_aovisimap%' then 'aovisimap table'
       else relname end, 'dropped table'),
  mode,
  locktype,
  case when count(*) = 1 then '1 segment'
       else 'n segments' end as node
  FROM gp_dist_random('locktest_segments_dist')
  group by relname, relation, mode, locktype;
-- Partitioned table with toast table
begin;
-- creation
create table partlockt (i int, t text) partition by range(i)
(start(1) end(10) every(1));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_1" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_2" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_3" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_4" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_5" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_6" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_7" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_8" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_9" for table "partlockt"
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |        mode         | locktype |  node  
-------------------+---------------------+----------+--------
 partlockt         | AccessExclusiveLock | relation | master
 partlockt_1_prt_1 | AccessExclusiveLock | relation | master
 partlockt_1_prt_2 | AccessExclusiveLock | relation | master
 partlockt_1_prt_3 | AccessExclusiveLock | relation | master
 partlockt_1_prt_4 | AccessExclusiveLock | relation | master
 partlockt_1_prt_5 | AccessExclusiveLock | relation | master
 partlockt_1_prt_6 | AccessExclusiveLock | relation | master
 partlockt_1_prt_7 | AccessExclusiveLock | relation | master
 partlockt_1_prt_8 | AccessExclusiveLock | relation | master
 partlockt_1_prt_9 | AccessExclusiveLock | relation | master
 toast index       | AccessExclusiveLock | relation | master
 toast table       | ShareLock           | relation | master
(12 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |        mode         | locktype |    node    
-------------------+---------------------+----------+------------
 partlockt_1_prt_2 | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_8 | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_5 | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_3 | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_4 | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_1 | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_9 | AccessExclusiveLock | relation | n segments
 partlockt         | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_6 | AccessExclusiveLock | relation | n segments
 toast table       | ShareLock           | relation | n segments
 partlockt_1_prt_7 | AccessExclusiveLock | relation | n segments
 toast index       | AccessExclusiveLock | relation | n segments
(12 rows)

commit;
-- drop
begin;
drop table partlockt;
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
   coalesce    |        mode         | locktype |  node  
---------------+---------------------+----------+--------
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
(3 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
   coalesce    |        mode         | locktype |    node    
---------------+---------------------+----------+------------
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
(3 rows)

commit;
-- AO table (ao segments, block directory won't exist after create)
begin;
-- creation
create table partlockt (i int, t text, n numeric)
with (appendonly = true)
partition by list(i)
(values(1), values(2), values(3));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_1" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_2" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_3" for table "partlockt"
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |        mode         | locktype |  node  
-------------------+---------------------+----------+--------
 partlockt         | AccessExclusiveLock | relation | master
 partlockt_1_prt_1 | AccessExclusiveLock | relation | master
 partlockt_1_prt_2 | AccessExclusiveLock | relation | master
 partlockt_1_prt_3 | AccessExclusiveLock | relation | master
 toast index       | AccessExclusiveLock | relation | master
 toast table       | ShareLock           | relation | master
(6 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |        mode         | locktype |    node    
-------------------+---------------------+----------+------------
 toast index       | AccessExclusiveLock | relation | n segments
 partlockt         | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_3 | AccessExclusiveLock | relation | n segments
 toast table       | ShareLock           | relation | n segments
 partlockt_1_prt_2 | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_1 | AccessExclusiveLock | relation | n segments
(6 rows)

commit;
begin;
-- add a little data
insert into partlockt values(1), (2), (3);
insert into partlockt values(1), (2), (3);
insert into partlockt values(1), (2), (3);
insert into partlockt values(1), (2), (3);
insert into partlockt values(1), (2), (3);
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |        mode         |         locktype         |  node  
-------------------+---------------------+--------------------------+--------
 partlockt         | RowExclusiveLock    | relation                 | master
 partlockt_1_prt_1 | AccessExclusiveLock | append-only segment file | master
 partlockt_1_prt_1 | AccessShareLock     | relation                 | master
 partlockt_1_prt_1 | RowExclusiveLock    | relation                 | master
 partlockt_1_prt_2 | AccessExclusiveLock | append-only segment file | master
 partlockt_1_prt_2 | AccessShareLock     | relation                 | master
 partlockt_1_prt_2 | RowExclusiveLock    | relation                 | master
 partlockt_1_prt_3 | AccessExclusiveLock | append-only segment file | master
 partlockt_1_prt_3 | AccessShareLock     | relation                 | master
 partlockt_1_prt_3 | RowExclusiveLock    | relation                 | master
(10 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |        mode         |         locktype         |    node    
-------------------+---------------------+--------------------------+------------
 partlockt         | RowExclusiveLock    | relation                 | n segments
 aoseg table       | AccessShareLock     | relation                 | n segments
 aoseg table       | AccessShareLock     | relation                 | n segments
 partlockt_1_prt_1 | AccessExclusiveLock | append-only segment file | 1 segment
 partlockt_1_prt_3 | AccessExclusiveLock | append-only segment file | 1 segment
 partlockt_1_prt_3 | RowExclusiveLock    | relation                 | 1 segment
 partlockt_1_prt_2 | RowExclusiveLock    | relation                 | 1 segment
 partlockt_1_prt_2 | AccessExclusiveLock | append-only segment file | 1 segment
 aoseg table       | AccessShareLock     | relation                 | n segments
 aoseg table       | AccessShareLock     | relation                 | n segments
 partlockt_1_prt_1 | RowExclusiveLock    | relation                 | 1 segment
(11 rows)

commit;
-- drop
begin;
drop table partlockt;
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
   coalesce    |        mode         | locktype |  node  
---------------+---------------------+----------+--------
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
(6 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
   coalesce    |        mode         | locktype |    node    
---------------+---------------------+----------+------------
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
(6 rows)

commit;
-- Indexing
create table partlockt (i int, t text) partition by range(i)
(start(1) end(10) every(1));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_1" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_2" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_3" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_4" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_5" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_6" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_7" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_8" for table "partlockt"
NOTICE:  CREATE TABLE will create partition "partlockt_1_prt_9" for table "partlockt"
begin;
create index partlockt_idx on partlockt(i);
NOTICE:  building index for child partition "partlockt_1_prt_1"
NOTICE:  building index for child partition "partlockt_1_prt_2"
NOTICE:  building index for child partition "partlockt_1_prt_3"
NOTICE:  building index for child partition "partlockt_1_prt_4"
NOTICE:  building index for child partition "partlockt_1_prt_5"
NOTICE:  building index for child partition "partlockt_1_prt_6"
NOTICE:  building index for child partition "partlockt_1_prt_7"
NOTICE:  building index for child partition "partlockt_1_prt_8"
NOTICE:  building index for child partition "partlockt_1_prt_9"
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |        mode         | locktype |  node  
-------------------+---------------------+----------+--------
 partlockt         | ShareLock           | relation | master
 partlockt_1_prt_1 | ShareLock           | relation | master
 partlockt_1_prt_2 | ShareLock           | relation | master
 partlockt_1_prt_3 | ShareLock           | relation | master
 partlockt_1_prt_4 | ShareLock           | relation | master
 partlockt_1_prt_5 | ShareLock           | relation | master
 partlockt_1_prt_6 | ShareLock           | relation | master
 partlockt_1_prt_7 | ShareLock           | relation | master
 partlockt_1_prt_8 | ShareLock           | relation | master
 partlockt_1_prt_9 | ShareLock           | relation | master
 partlockt_idx     | AccessExclusiveLock | relation | master
(11 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |        mode         | locktype |    node    
-------------------+---------------------+----------+------------
 partlockt_idx     | AccessExclusiveLock | relation | n segments
 partlockt_1_prt_5 | ShareLock           | relation | n segments
 partlockt_1_prt_2 | ShareLock           | relation | n segments
 partlockt_1_prt_4 | ShareLock           | relation | n segments
 partlockt_1_prt_9 | ShareLock           | relation | n segments
 partlockt_1_prt_8 | ShareLock           | relation | n segments
 partlockt_1_prt_6 | ShareLock           | relation | n segments
 partlockt_1_prt_3 | ShareLock           | relation | n segments
 partlockt_1_prt_1 | ShareLock           | relation | n segments
 partlockt         | ShareLock           | relation | n segments
 partlockt_1_prt_7 | ShareLock           | relation | n segments
(11 rows)

commit;
-- Force use of the index in the select and delete below. We're not interested
-- in the plan we get, but a seqscan will not lock the index while an index
-- scan will, and we want to avoid the plan-dependent difference in the
-- expected output of this test.
set enable_seqscan=off;
-- test select locking
begin;
select * from partlockt where i = 1;
 i | t 
---+---
(0 rows)

-- Known_opt_diff: MPP-20936
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
        coalesce         |      mode       | locktype |  node  
-------------------------+-----------------+----------+--------
 partlockt               | AccessShareLock | relation | master
 partlockt_1_prt_1       | AccessShareLock | relation | master
 partlockt_1_prt_1_i_idx | AccessShareLock | relation | master
(3 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
        coalesce         |      mode       | locktype |   node    
-------------------------+-----------------+----------+-----------
 partlockt_1_prt_1       | AccessShareLock | relation | 1 segment
 partlockt_1_prt_1_i_idx | AccessShareLock | relation | 1 segment
(2 rows)

commit;
begin;
-- insert locking
insert into partlockt values(3, 'f');
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |       mode       | locktype |  node  
-------------------+------------------+----------+--------
 partlockt         | RowExclusiveLock | relation | master
 partlockt_1_prt_1 | RowExclusiveLock | relation | master
 partlockt_1_prt_2 | RowExclusiveLock | relation | master
 partlockt_1_prt_3 | RowExclusiveLock | relation | master
 partlockt_1_prt_4 | RowExclusiveLock | relation | master
 partlockt_1_prt_5 | RowExclusiveLock | relation | master
 partlockt_1_prt_6 | RowExclusiveLock | relation | master
 partlockt_1_prt_7 | RowExclusiveLock | relation | master
 partlockt_1_prt_8 | RowExclusiveLock | relation | master
 partlockt_1_prt_9 | RowExclusiveLock | relation | master
(10 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |       mode       | locktype |   node    
-------------------+------------------+----------+-----------
 partlockt         | RowExclusiveLock | relation | 1 segment
 partlockt_1_prt_3 | RowExclusiveLock | relation | 1 segment
(2 rows)

commit;
-- delete locking
begin;
delete from partlockt where i = 4;
-- Known_opt_diff: MPP-20936
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |     mode      | locktype |  node  
-------------------+---------------+----------+--------
 partlockt         | ExclusiveLock | relation | master
 partlockt_1_prt_4 | ExclusiveLock | relation | master
(2 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
     coalesce      |       mode       | locktype |   node    
-------------------+------------------+----------+-----------
 partlockt_1_prt_4 | RowExclusiveLock | relation | 1 segment
(1 row)

commit;
-- drop index
begin;
drop table partlockt;
select * from locktest_master where coalesce not like 'gp_%' and coalesce not like 'pg_%';
   coalesce    |        mode         | locktype |  node  
---------------+---------------------+----------+--------
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
 dropped table | AccessExclusiveLock | relation | master
(4 rows)

select * from locktest_segments where coalesce not like 'gp_%' and coalesce not like 'pg_%';
   coalesce    |        mode         | locktype |    node    
---------------+---------------------+----------+------------
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
 dropped table | AccessExclusiveLock | relation | n segments
(4 rows)

commit;
