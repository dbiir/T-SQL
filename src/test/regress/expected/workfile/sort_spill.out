create schema sort_spill;
set search_path to sort_spill;
-- start_ignore
create language plpythonu;
-- end_ignore
-- set workfile is created to true if all segment did it.
create or replace function sort_spill.is_workfile_created(explain_query text)
returns setof int as
$$
import re
query = "select count(*) as nsegments from gp_segment_configuration where role='p' and content >= 0;"
rv = plpy.execute(query)
nsegments = int(rv[0]['nsegments'])
rv = plpy.execute(explain_query)
search_text = 'spilling'
result = []
for i in range(len(rv)):
    cur_line = rv[i]['QUERY PLAN']
    if search_text.lower() in cur_line.lower():
        p = re.compile('.+\((segment [\d]+).+ Workfile: \(([\d+]) spilling\)')
        m = p.match(cur_line)
        workfile_created = int(m.group(2))
        cur_row = int(workfile_created == nsegments)
        result.append(cur_row)
return result
$$
language plpythonu;
create table testsort (i1 int, i2 int, i3 int, i4 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'i1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into testsort select i, i % 1000, i % 100000, i % 75 from
	(select generate_series(1, nsegments * 50000) as i from
	(select count(*) as nsegments from gp_segment_configuration where role='p' and content >= 0) foo) bar;
set statement_mem="1MB";
set gp_resqueue_print_operator_memory_limits=on;
set gp_enable_mk_sort=on;
select avg(i2) from (select i1,i2 from testsort order by i2) foo;
         avg          
----------------------
 499.5000000000000000
(1 row)

select * from sort_spill.is_workfile_created('explain (analyze, verbose) select i1,i2 from testsort order by i2;');
 is_workfile_created 
---------------------
                   1
(1 row)

select * from sort_spill.is_workfile_created('explain (analyze, verbose) select i1,i2 from testsort order by i2 limit 50000;');
 is_workfile_created 
---------------------
                   1
(1 row)

set gp_enable_mk_sort=off;
select avg(i2) from (select i1,i2 from testsort order by i2) foo;
         avg          
----------------------
 499.5000000000000000
(1 row)

select * from sort_spill.is_workfile_created('explain (analyze, verbose) select i1,i2 from testsort order by i2;');
 is_workfile_created 
---------------------
                   1
(1 row)

select * from sort_spill.is_workfile_created('explain (analyze, verbose) select i1,i2 from testsort order by i2 limit 50000;');
 is_workfile_created 
---------------------
                   1
(1 row)

drop schema sort_spill cascade;
NOTICE:  drop cascades to 2 other objects
DETAIL:  drop cascades to function is_workfile_created(text)
drop cascades to table testsort
