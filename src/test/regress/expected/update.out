--
-- UPDATE ... SET <col> = DEFAULT;
--
CREATE TABLE update_test (
    a   INT DEFAULT 10 primary key,
    b   INT,
    c   TEXT
) with(storage_engine=rocksdb);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'e' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO update_test(a,b,c) VALUES (5, 10, 'foo');
INSERT INTO update_test(b,a) VALUES (15, 10);
SELECT a,b,c FROM update_test ORDER BY a,b,c;
 a  | b  |  c  
----+----+-----
  5 | 10 | foo
 10 | 15 | 
(2 rows)

UPDATE update_test SET a = DEFAULT, b = DEFAULT;
ERROR:  duplicate key violates unique constraint "update_test" xwait = 0, Is xmin 1, Is xmax 1
SELECT a,b,c FROM update_test ORDER BY a,b,c;
 a  | b  |  c  
----+----+-----
  5 | 10 | foo
 10 | 15 |                                                                                  
(2 rows)

-- aliases for the UPDATE target table
UPDATE update_test AS t SET b = 10 WHERE t.a = 10;
SELECT a,b,c FROM update_test ORDER BY a,b,c;
 a  | b  |  c  
----+----+-----
  5 | 10 | foo
 10 | 10 | 
(2 rows)

UPDATE update_test t SET b = t.b + 10 WHERE t.a = 10;
SELECT a,b,c FROM update_test ORDER BY a,b,c;
 a  | b  |  c  
----+----+-----
  5 | 20 | foo
 10 | 20 | 
(2 rows)

--
-- Test VALUES in FROM
--
UPDATE update_test SET a=v.i FROM (VALUES(100, 20)) AS v(i, j)
  WHERE update_test.b = v.j;
SELECT a,b,c FROM update_test ORDER BY a,b,c;
  a  | b  |  c  
-----+----+-----
   5 | 20 | foo
 100 | 20 | 
(2 rows)

-- fail, wrong data type:
UPDATE update_test SET a = v.* FROM (VALUES(100, 20)) AS v(i, j)
  WHERE update_test.b = v.j;
ERROR:  column "a" is of type integer but expression is of type record
LINE 1: UPDATE update_test SET a = v.* FROM (VALUES(100, 20)) AS v(i...
                                   ^
HINT:  You will need to rewrite or cast the expression.
--
-- Test multiple-set-clause syntax
--
UPDATE update_test SET (c,b,a) = ('bugle', b+11, DEFAULT) WHERE c = 'foo';
SELECT a,b,c FROM update_test ORDER BY a,b,c;
  a  | b  |   c   
-----+----+-------
  10 | 21 | bugle
 100 | 20 | 
(2 rows)

UPDATE update_test SET (c,b) = ('car', a+b), a = a + 1 WHERE a = 10;
SELECT a,b,c FROM update_test ORDER BY a,b,c;
  a  | b  |  c  
-----+----+-----
  11 | 31 | car
 100 | 20 | 
(2 rows)

-- fail, multi assignment to same column:
UPDATE update_test SET (c,b) = ('car', a+b), b = a + 1 WHERE a = 10;
ERROR:  multiple assignments to same column "b"
-- XXX this should work, but doesn't yet:
UPDATE update_test SET (a,b) = (select a,b FROM update_test where c = 'foo')
  WHERE a = 10;
ERROR:  syntax error at or near "select"
LINE 1: UPDATE update_test SET (a,b) = (select a,b FROM update_test ...
                                        ^
-- if an alias for the target table is specified, don't allow references
-- to the original table name
UPDATE update_test AS t SET b = update_test.b + 10 WHERE t.a = 10;
ERROR:  invalid reference to FROM-clause entry for table "update_test"
LINE 1: UPDATE update_test AS t SET b = update_test.b + 10 WHERE t.a...
                                        ^
HINT:  Perhaps you meant to reference the table alias "t".
-- Make sure that we can update to a TOASTed value.
UPDATE update_test SET c = repeat('x', 10000) WHERE c = 'car';
SELECT a, b, char_length(c) FROM update_test;
  a  | b  | char_length 
-----+----+-------------
 100 | 20 |            
  11 | 31 |       10000
(2 rows)

DROP TABLE update_test;
--
-- text types. We should support the following updates.
--
drop table tab1;
ERROR:  table "tab1" does not exist
drop table tab2;
ERROR:  table "tab2" does not exist
CREATE TABLE tab1 (a varchar(15) primary key, b integer) with(storage_engine=rocksdb) DISTRIBUTED BY (a);
CREATE TABLE tab2 (a varchar(15) primary key, b integer) with(storage_engine=rocksdb) DISTRIBUTED BY (a);
UPDATE tab1 SET b = tab2.b FROM tab2 WHERE tab1.a = tab2.a;
drop table tab1;
drop table tab2;
CREATE TABLE tab1 (a text primary key, b integer) with(storage_engine=rocksdb) DISTRIBUTED BY (a);
CREATE TABLE tab2 (a text primary key, b integer) with(storage_engine=rocksdb) DISTRIBUTED BY (a);
UPDATE tab1 SET b = tab2.b FROM tab2 WHERE tab1.a = tab2.a;
drop table tab1;
drop table tab2;
CREATE TABLE tab1 (a varchar primary key, b integer) with(storage_engine=rocksdb) DISTRIBUTED BY (a);
CREATE TABLE tab2 (a varchar primary key, b integer) with(storage_engine=rocksdb) DISTRIBUTED BY (a);
UPDATE tab1 SET b = tab2.b FROM tab2 WHERE tab1.a = tab2.a;
drop table tab1;
drop table tab2;
CREATE TABLE tab1 (a char(15) primary key, b integer) with(storage_engine=rocksdb) DISTRIBUTED BY (a);
CREATE TABLE tab2 (a char(15) primary key, b integer) with(storage_engine=rocksdb) DISTRIBUTED BY (a);
UPDATE tab1 SET b = tab2.b FROM tab2 WHERE tab1.a = tab2.a;
drop table tab1;
drop table tab2;
DROP TABLE IF EXISTS update_distr_key; 
NOTICE:  table "update_distr_key" does not exist, skipping
CREATE TABLE update_distr_key (a int primary key, b int) with(storage_engine=rocksdb) DISTRIBUTED BY (a); 
INSERT INTO update_distr_key select i, i* 10 from generate_series(0, 9) i; 
UPDATE update_distr_key SET a = 5 WHERE b = 10; 
SELECT * from update_distr_key; 
 a | b  
---+----
 3 | 30
 4 | 40
 5 | 50
 6 | 60
 7 | 70
 1 | 10
 8 | 80
 9 | 90
 0 |  0
 2 | 20
(10 rows)

DROP TABLE update_distr_key;
